/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
grammar InternalModelicaMo;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package sc.modelica.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package sc.modelica.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import sc.modelica.xtext.services.ModelicaMoGrammarAccess;

}
@parser::members {
	private ModelicaMoGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelicaMoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDefinition
entryRuleClassDefinition
:
{ before(grammarAccess.getClassDefinitionRule()); }
	 ruleClassDefinition
{ after(grammarAccess.getClassDefinitionRule()); } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getGroup()); }
		(rule__ClassDefinition__Group__0)
		{ after(grammarAccess.getClassDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassPrefixes
entryRuleClassPrefixes
:
{ before(grammarAccess.getClassPrefixesRule()); }
	 ruleClassPrefixes
{ after(grammarAccess.getClassPrefixesRule()); } 
	 EOF 
;

// Rule ClassPrefixes
ruleClassPrefixes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup()); }
		(rule__ClassPrefixes__Group__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassSpecifier
entryRuleClassSpecifier
:
{ before(grammarAccess.getClassSpecifierRule()); }
	 ruleClassSpecifier
{ after(grammarAccess.getClassSpecifierRule()); } 
	 EOF 
;

// Rule ClassSpecifier
ruleClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getAlternatives()); }
		(rule__ClassSpecifier__Alternatives)
		{ after(grammarAccess.getClassSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLongClassSpecifier
entryRuleLongClassSpecifier
:
{ before(grammarAccess.getLongClassSpecifierRule()); }
	 ruleLongClassSpecifier
{ after(grammarAccess.getLongClassSpecifierRule()); } 
	 EOF 
;

// Rule LongClassSpecifier
ruleLongClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getAlternatives()); }
		(rule__LongClassSpecifier__Alternatives)
		{ after(grammarAccess.getLongClassSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortClassSpecifier
entryRuleShortClassSpecifier
:
{ before(grammarAccess.getShortClassSpecifierRule()); }
	 ruleShortClassSpecifier
{ after(grammarAccess.getShortClassSpecifierRule()); } 
	 EOF 
;

// Rule ShortClassSpecifier
ruleShortClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getAlternatives()); }
		(rule__ShortClassSpecifier__Alternatives)
		{ after(grammarAccess.getShortClassSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerClassSpecifier
entryRuleDerClassSpecifier
:
{ before(grammarAccess.getDerClassSpecifierRule()); }
	 ruleDerClassSpecifier
{ after(grammarAccess.getDerClassSpecifierRule()); } 
	 EOF 
;

// Rule DerClassSpecifier
ruleDerClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerClassSpecifierAccess().getGroup()); }
		(rule__DerClassSpecifier__Group__0)
		{ after(grammarAccess.getDerClassSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasePrefix
entryRuleBasePrefix
:
{ before(grammarAccess.getBasePrefixRule()); }
	 ruleBasePrefix
{ after(grammarAccess.getBasePrefixRule()); } 
	 EOF 
;

// Rule BasePrefix
ruleBasePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall()); }
		ruleTypePrefix
		{ after(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumList
entryRuleEnumList
:
{ before(grammarAccess.getEnumListRule()); }
	 ruleEnumList
{ after(grammarAccess.getEnumListRule()); } 
	 EOF 
;

// Rule EnumList
ruleEnumList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumListAccess().getGroup()); }
		(rule__EnumList__Group__0)
		{ after(grammarAccess.getEnumListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
		(rule__EnumerationLiteral__Group__0)
		{ after(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageSpecification
entryRuleLanguageSpecification
:
{ before(grammarAccess.getLanguageSpecificationRule()); }
	 ruleLanguageSpecification
{ after(grammarAccess.getLanguageSpecificationRule()); } 
	 EOF 
;

// Rule LanguageSpecification
ruleLanguageSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportClause
entryRuleImportClause
:
{ before(grammarAccess.getImportClauseRule()); }
	 ruleImportClause
{ after(grammarAccess.getImportClauseRule()); } 
	 EOF 
;

// Rule ImportClause
ruleImportClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup()); }
		(rule__ImportClause__Group__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportList
entryRuleImportList
:
{ before(grammarAccess.getImportListRule()); }
	 ruleImportList
{ after(grammarAccess.getImportListRule()); } 
	 EOF 
;

// Rule ImportList
ruleImportList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportListAccess().getGroup()); }
		(rule__ImportList__Group__0)
		{ after(grammarAccess.getImportListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendClause
entryRuleExtendClause
:
{ before(grammarAccess.getExtendClauseRule()); }
	 ruleExtendClause
{ after(grammarAccess.getExtendClauseRule()); } 
	 EOF 
;

// Rule ExtendClause
ruleExtendClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendClauseAccess().getGroup()); }
		(rule__ExtendClause__Group__0)
		{ after(grammarAccess.getExtendClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstrainingClause
entryRuleConstrainingClause
:
{ before(grammarAccess.getConstrainingClauseRule()); }
	 ruleConstrainingClause
{ after(grammarAccess.getConstrainingClauseRule()); } 
	 EOF 
;

// Rule ConstrainingClause
ruleConstrainingClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getGroup()); }
		(rule__ConstrainingClause__Group__0)
		{ after(grammarAccess.getConstrainingClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModification
entryRuleModification
:
{ before(grammarAccess.getModificationRule()); }
	 ruleModification
{ after(grammarAccess.getModificationRule()); } 
	 EOF 
;

// Rule Modification
ruleModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModificationAccess().getAlternatives()); }
		(rule__Modification__Alternatives)
		{ after(grammarAccess.getModificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassModification
entryRuleClassModification
:
{ before(grammarAccess.getClassModificationRule()); }
	 ruleClassModification
{ after(grammarAccess.getClassModificationRule()); } 
	 EOF 
;

// Rule ClassModification
ruleClassModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassModificationAccess().getGroup()); }
		(rule__ClassModification__Group__0)
		{ after(grammarAccess.getClassModificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentList
entryRuleArgumentList
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup()); }
		(rule__ArgumentList__Group__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getAlternatives()); }
		(rule__Argument__Alternatives)
		{ after(grammarAccess.getArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementModificationOrReplaceable
entryRuleElementModificationOrReplaceable
:
{ before(grammarAccess.getElementModificationOrReplaceableRule()); }
	 ruleElementModificationOrReplaceable
{ after(grammarAccess.getElementModificationOrReplaceableRule()); } 
	 EOF 
;

// Rule ElementModificationOrReplaceable
ruleElementModificationOrReplaceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getGroup()); }
		(rule__ElementModificationOrReplaceable__Group__0)
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementModification
entryRuleElementModification
:
{ before(grammarAccess.getElementModificationRule()); }
	 ruleElementModification
{ after(grammarAccess.getElementModificationRule()); } 
	 EOF 
;

// Rule ElementModification
ruleElementModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementModificationAccess().getGroup()); }
		(rule__ElementModification__Group__0)
		{ after(grammarAccess.getElementModificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementRedeclaration
entryRuleElementRedeclaration
:
{ before(grammarAccess.getElementRedeclarationRule()); }
	 ruleElementRedeclaration
{ after(grammarAccess.getElementRedeclarationRule()); } 
	 EOF 
;

// Rule ElementRedeclaration
ruleElementRedeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getGroup()); }
		(rule__ElementRedeclaration__Group__0)
		{ after(grammarAccess.getElementRedeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementReplaceable
entryRuleElementReplaceable
:
{ before(grammarAccess.getElementReplaceableRule()); }
	 ruleElementReplaceable
{ after(grammarAccess.getElementReplaceableRule()); } 
	 EOF 
;

// Rule ElementReplaceable
ruleElementReplaceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getGroup()); }
		(rule__ElementReplaceable__Group__0)
		{ after(grammarAccess.getElementReplaceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentClause1
entryRuleComponentClause1
:
{ before(grammarAccess.getComponentClause1Rule()); }
	 ruleComponentClause1
{ after(grammarAccess.getComponentClause1Rule()); } 
	 EOF 
;

// Rule ComponentClause1
ruleComponentClause1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentClause1Access().getGroup()); }
		(rule__ComponentClause1__Group__0)
		{ after(grammarAccess.getComponentClause1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentDeclaration1
entryRuleComponentDeclaration1
:
{ before(grammarAccess.getComponentDeclaration1Rule()); }
	 ruleComponentDeclaration1
{ after(grammarAccess.getComponentDeclaration1Rule()); } 
	 EOF 
;

// Rule ComponentDeclaration1
ruleComponentDeclaration1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDeclaration1Access().getGroup()); }
		(rule__ComponentDeclaration1__Group__0)
		{ after(grammarAccess.getComponentDeclaration1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortClassDefinition
entryRuleShortClassDefinition
:
{ before(grammarAccess.getShortClassDefinitionRule()); }
	 ruleShortClassDefinition
{ after(grammarAccess.getShortClassDefinitionRule()); } 
	 EOF 
;

// Rule ShortClassDefinition
ruleShortClassDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getGroup()); }
		(rule__ShortClassDefinition__Group__0)
		{ after(grammarAccess.getShortClassDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentClause
entryRuleComponentClause
:
{ before(grammarAccess.getComponentClauseRule()); }
	 ruleComponentClause
{ after(grammarAccess.getComponentClauseRule()); } 
	 EOF 
;

// Rule ComponentClause
ruleComponentClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentClauseAccess().getGroup()); }
		(rule__ComponentClause__Group__0)
		{ after(grammarAccess.getComponentClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypePrefix
entryRuleTypePrefix
:
{ before(grammarAccess.getTypePrefixRule()); }
	 ruleTypePrefix
{ after(grammarAccess.getTypePrefixRule()); } 
	 EOF 
;

// Rule TypePrefix
ruleTypePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypePrefixAccess().getGroup()); }
		(rule__TypePrefix__Group__0)
		{ after(grammarAccess.getTypePrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
		(rule__TypeSpecifier__NameAssignment)
		{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentList
entryRuleComponentList
:
{ before(grammarAccess.getComponentListRule()); }
	 ruleComponentList
{ after(grammarAccess.getComponentListRule()); } 
	 EOF 
;

// Rule ComponentList
ruleComponentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentListAccess().getGroup()); }
		(rule__ComponentList__Group__0)
		{ after(grammarAccess.getComponentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration
:
{ before(grammarAccess.getComponentDeclarationRule()); }
	 ruleComponentDeclaration
{ after(grammarAccess.getComponentDeclarationRule()); } 
	 EOF 
;

// Rule ComponentDeclaration
ruleComponentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getGroup()); }
		(rule__ComponentDeclaration__Group__0)
		{ after(grammarAccess.getComponentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionAttribute
entryRuleConditionAttribute
:
{ before(grammarAccess.getConditionAttributeRule()); }
	 ruleConditionAttribute
{ after(grammarAccess.getConditionAttributeRule()); } 
	 EOF 
;

// Rule ConditionAttribute
ruleConditionAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAttributeAccess().getGroup()); }
		(rule__ConditionAttribute__Group__0)
		{ after(grammarAccess.getConditionAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationSection
entryRuleEquationSection
:
{ before(grammarAccess.getEquationSectionRule()); }
	 ruleEquationSection
{ after(grammarAccess.getEquationSectionRule()); } 
	 EOF 
;

// Rule EquationSection
ruleEquationSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationSectionAccess().getGroup()); }
		(rule__EquationSection__Group__0)
		{ after(grammarAccess.getEquationSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithmSection
entryRuleAlgorithmSection
:
{ before(grammarAccess.getAlgorithmSectionRule()); }
	 ruleAlgorithmSection
{ after(grammarAccess.getAlgorithmSectionRule()); } 
	 EOF 
;

// Rule AlgorithmSection
ruleAlgorithmSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getGroup()); }
		(rule__AlgorithmSection__Group__0)
		{ after(grammarAccess.getAlgorithmSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquation
entryRuleEquation
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationAccess().getAlternatives()); }
		(rule__Equation__Alternatives)
		{ after(grammarAccess.getEquationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationIf
entryRuleEquationIf
:
{ before(grammarAccess.getEquationIfRule()); }
	 ruleEquationIf
{ after(grammarAccess.getEquationIfRule()); } 
	 EOF 
;

// Rule EquationIf
ruleEquationIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationIfAccess().getGroup()); }
		(rule__EquationIf__Group__0)
		{ after(grammarAccess.getEquationIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementIf
entryRuleStatementIf
:
{ before(grammarAccess.getStatementIfRule()); }
	 ruleStatementIf
{ after(grammarAccess.getStatementIfRule()); } 
	 EOF 
;

// Rule StatementIf
ruleStatementIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementIfAccess().getGroup()); }
		(rule__StatementIf__Group__0)
		{ after(grammarAccess.getStatementIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationFor
entryRuleEquationFor
:
{ before(grammarAccess.getEquationForRule()); }
	 ruleEquationFor
{ after(grammarAccess.getEquationForRule()); } 
	 EOF 
;

// Rule EquationFor
ruleEquationFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationForAccess().getGroup()); }
		(rule__EquationFor__Group__0)
		{ after(grammarAccess.getEquationForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementFor
entryRuleStatementFor
:
{ before(grammarAccess.getStatementForRule()); }
	 ruleStatementFor
{ after(grammarAccess.getStatementForRule()); } 
	 EOF 
;

// Rule StatementFor
ruleStatementFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementForAccess().getGroup()); }
		(rule__StatementFor__Group__0)
		{ after(grammarAccess.getStatementForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForIndices
entryRuleForIndices
:
{ before(grammarAccess.getForIndicesRule()); }
	 ruleForIndices
{ after(grammarAccess.getForIndicesRule()); } 
	 EOF 
;

// Rule ForIndices
ruleForIndices 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForIndicesAccess().getGroup()); }
		(rule__ForIndices__Group__0)
		{ after(grammarAccess.getForIndicesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForIndex
entryRuleForIndex
:
{ before(grammarAccess.getForIndexRule()); }
	 ruleForIndex
{ after(grammarAccess.getForIndexRule()); } 
	 EOF 
;

// Rule ForIndex
ruleForIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForIndexAccess().getGroup()); }
		(rule__ForIndex__Group__0)
		{ after(grammarAccess.getForIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementWhile
entryRuleStatementWhile
:
{ before(grammarAccess.getStatementWhileRule()); }
	 ruleStatementWhile
{ after(grammarAccess.getStatementWhileRule()); } 
	 EOF 
;

// Rule StatementWhile
ruleStatementWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementWhileAccess().getGroup()); }
		(rule__StatementWhile__Group__0)
		{ after(grammarAccess.getStatementWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationWhen
entryRuleEquationWhen
:
{ before(grammarAccess.getEquationWhenRule()); }
	 ruleEquationWhen
{ after(grammarAccess.getEquationWhenRule()); } 
	 EOF 
;

// Rule EquationWhen
ruleEquationWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationWhenAccess().getGroup()); }
		(rule__EquationWhen__Group__0)
		{ after(grammarAccess.getEquationWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementWhen
entryRuleStatementWhen
:
{ before(grammarAccess.getStatementWhenRule()); }
	 ruleStatementWhen
{ after(grammarAccess.getStatementWhenRule()); } 
	 EOF 
;

// Rule StatementWhen
ruleStatementWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementWhenAccess().getGroup()); }
		(rule__StatementWhen__Group__0)
		{ after(grammarAccess.getStatementWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectClause
entryRuleConnectClause
:
{ before(grammarAccess.getConnectClauseRule()); }
	 ruleConnectClause
{ after(grammarAccess.getConnectClauseRule()); } 
	 EOF 
;

// Rule ConnectClause
ruleConnectClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectClauseAccess().getGroup()); }
		(rule__ConnectClause__Group__0)
		{ after(grammarAccess.getConnectClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getGroup()); }
		(rule__SimpleExpression__Group__0)
		{ after(grammarAccess.getSimpleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression
:
{ before(grammarAccess.getLogicalExpressionRule()); }
	 ruleLogicalExpression
{ after(grammarAccess.getLogicalExpressionRule()); } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup()); }
		(rule__LogicalExpression__Group__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalTerm
entryRuleLogicalTerm
:
{ before(grammarAccess.getLogicalTermRule()); }
	 ruleLogicalTerm
{ after(grammarAccess.getLogicalTermRule()); } 
	 EOF 
;

// Rule LogicalTerm
ruleLogicalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalTermAccess().getGroup()); }
		(rule__LogicalTerm__Group__0)
		{ after(grammarAccess.getLogicalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalFactor
entryRuleLogicalFactor
:
{ before(grammarAccess.getLogicalFactorRule()); }
	 ruleLogicalFactor
{ after(grammarAccess.getLogicalFactorRule()); } 
	 EOF 
;

// Rule LogicalFactor
ruleLogicalFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalFactorAccess().getGroup()); }
		(rule__LogicalFactor__Group__0)
		{ after(grammarAccess.getLogicalFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelOp
entryRuleRelOp
:
{ before(grammarAccess.getRelOpRule()); }
	 ruleRelOp
{ after(grammarAccess.getRelOpRule()); } 
	 EOF 
;

// Rule RelOp
ruleRelOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelOpAccess().getAlternatives()); }
		(rule__RelOp__Alternatives)
		{ after(grammarAccess.getRelOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
		(rule__ArithmeticExpression__Group__0)
		{ after(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression2
entryRuleArithmeticExpression2
:
{ before(grammarAccess.getArithmeticExpression2Rule()); }
	 ruleArithmeticExpression2
{ after(grammarAccess.getArithmeticExpression2Rule()); } 
	 EOF 
;

// Rule ArithmeticExpression2
ruleArithmeticExpression2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpression2Access().getGroup()); }
		(rule__ArithmeticExpression2__Group__0)
		{ after(grammarAccess.getArithmeticExpression2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpressionUnary
entryRuleArithmeticExpressionUnary
:
{ before(grammarAccess.getArithmeticExpressionUnaryRule()); }
	 ruleArithmeticExpressionUnary
{ after(grammarAccess.getArithmeticExpressionUnaryRule()); } 
	 EOF 
;

// Rule ArithmeticExpressionUnary
ruleArithmeticExpressionUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getAlternatives()); }
		(rule__ArithmeticExpressionUnary__Alternatives)
		{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOp
entryRuleAddOp
:
{ before(grammarAccess.getAddOpRule()); }
	 ruleAddOp
{ after(grammarAccess.getAddOpRule()); } 
	 EOF 
;

// Rule AddOp
ruleAddOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOpAccess().getAlternatives()); }
		(rule__AddOp__Alternatives)
		{ after(grammarAccess.getAddOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOp
entryRuleMulOp
:
{ before(grammarAccess.getMulOpRule()); }
	 ruleMulOp
{ after(grammarAccess.getMulOpRule()); } 
	 EOF 
;

// Rule MulOp
ruleMulOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOpAccess().getAlternatives()); }
		(rule__MulOp__Alternatives)
		{ after(grammarAccess.getMulOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentReference
entryRuleComponentReference
:
{ before(grammarAccess.getComponentReferenceRule()); }
	 ruleComponentReference
{ after(grammarAccess.getComponentReferenceRule()); } 
	 EOF 
;

// Rule ComponentReference
ruleComponentReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getGroup()); }
		(rule__ComponentReference__Group__0)
		{ after(grammarAccess.getComponentReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArgs
entryRuleFunctionCallArgs
:
{ before(grammarAccess.getFunctionCallArgsRule()); }
	 ruleFunctionCallArgs
{ after(grammarAccess.getFunctionCallArgsRule()); } 
	 EOF 
;

// Rule FunctionCallArgs
ruleFunctionCallArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgsAccess().getGroup()); }
		(rule__FunctionCallArgs__Group__0)
		{ after(grammarAccess.getFunctionCallArgsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionArguments
entryRuleFunctionArguments
:
{ before(grammarAccess.getFunctionArgumentsRule()); }
	 ruleFunctionArguments
{ after(grammarAccess.getFunctionArgumentsRule()); } 
	 EOF 
;

// Rule FunctionArguments
ruleFunctionArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getAlternatives()); }
		(rule__FunctionArguments__Alternatives)
		{ after(grammarAccess.getFunctionArgumentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedArguments
entryRuleNamedArguments
:
{ before(grammarAccess.getNamedArgumentsRule()); }
	 ruleNamedArguments
{ after(grammarAccess.getNamedArgumentsRule()); } 
	 EOF 
;

// Rule NamedArguments
ruleNamedArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getGroup()); }
		(rule__NamedArguments__Group__0)
		{ after(grammarAccess.getNamedArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedArgument
entryRuleNamedArgument
:
{ before(grammarAccess.getNamedArgumentRule()); }
	 ruleNamedArgument
{ after(grammarAccess.getNamedArgumentRule()); } 
	 EOF 
;

// Rule NamedArgument
ruleNamedArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getGroup()); }
		(rule__NamedArgument__Group__0)
		{ after(grammarAccess.getNamedArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument
:
{ before(grammarAccess.getFunctionArgumentRule()); }
	 ruleFunctionArgument
{ after(grammarAccess.getFunctionArgumentRule()); } 
	 EOF 
;

// Rule FunctionArgument
ruleFunctionArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getAlternatives()); }
		(rule__FunctionArgument__Alternatives)
		{ after(grammarAccess.getFunctionArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputExpressionList
entryRuleOutputExpressionList
:
{ before(grammarAccess.getOutputExpressionListRule()); }
	 ruleOutputExpressionList
{ after(grammarAccess.getOutputExpressionListRule()); } 
	 EOF 
;

// Rule OutputExpressionList
ruleOutputExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getGroup()); }
		(rule__OutputExpressionList__Group__0)
		{ after(grammarAccess.getOutputExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprExpressionList
entryRuleExprExpressionList
:
{ before(grammarAccess.getExprExpressionListRule()); }
	 ruleExprExpressionList
{ after(grammarAccess.getExprExpressionListRule()); } 
	 EOF 
;

// Rule ExprExpressionList
ruleExprExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprExpressionListAccess().getGroup()); }
		(rule__ExprExpressionList__Group__0)
		{ after(grammarAccess.getExprExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArraySubscripts
entryRuleArraySubscripts
:
{ before(grammarAccess.getArraySubscriptsRule()); }
	 ruleArraySubscripts
{ after(grammarAccess.getArraySubscriptsRule()); } 
	 EOF 
;

// Rule ArraySubscripts
ruleArraySubscripts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getGroup()); }
		(rule__ArraySubscripts__Group__0)
		{ after(grammarAccess.getArraySubscriptsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubscript
entryRuleSubscript
:
{ before(grammarAccess.getSubscriptRule()); }
	 ruleSubscript
{ after(grammarAccess.getSubscriptRule()); } 
	 EOF 
;

// Rule Subscript
ruleSubscript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubscriptAccess().getAlternatives()); }
		(rule__Subscript__Alternatives)
		{ after(grammarAccess.getSubscriptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringComment
entryRuleStringComment
:
{ before(grammarAccess.getStringCommentRule()); }
	 ruleStringComment
{ after(grammarAccess.getStringCommentRule()); } 
	 EOF 
;

// Rule StringComment
ruleStringComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringCommentAccess().getGroup()); }
		(rule__StringComment__Group__0)
		{ after(grammarAccess.getStringCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssert
entryRuleAssert
:
{ before(grammarAccess.getAssertRule()); }
	 ruleAssert
{ after(grammarAccess.getAssertRule()); } 
	 EOF 
;

// Rule Assert
ruleAssert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertAccess().getGroup()); }
		(rule__Assert__Group__0)
		{ after(grammarAccess.getAssertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationArg
entryRuleAnnotationArg
:
{ before(grammarAccess.getAnnotationArgRule()); }
	 ruleAnnotationArg
{ after(grammarAccess.getAnnotationArgRule()); } 
	 EOF 
;

// Rule AnnotationArg
ruleAnnotationArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationArgAccess().getAlternatives()); }
		(rule__AnnotationArg__Alternatives)
		{ after(grammarAccess.getAnnotationArgAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefComponentName
entryRuleDefComponentName
:
{ before(grammarAccess.getDefComponentNameRule()); }
	 ruleDefComponentName
{ after(grammarAccess.getDefComponentNameRule()); } 
	 EOF 
;

// Rule DefComponentName
ruleDefComponentName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefComponentNameAccess().getGroup()); }
		(rule__DefComponentName__Group__0)
		{ after(grammarAccess.getDefComponentNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChoices
entryRuleChoices
:
{ before(grammarAccess.getChoicesRule()); }
	 ruleChoices
{ after(grammarAccess.getChoicesRule()); } 
	 EOF 
;

// Rule Choices
ruleChoices 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChoicesAccess().getGroup()); }
		(rule__Choices__Group__0)
		{ after(grammarAccess.getChoicesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationCode
entryRuleAnnotationCode
:
{ before(grammarAccess.getAnnotationCodeRule()); }
	 ruleAnnotationCode
{ after(grammarAccess.getAnnotationCodeRule()); } 
	 EOF 
;

// Rule AnnotationCode
ruleAnnotationCode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationCodeAccess().getGroup()); }
		(rule__AnnotationCode__Group__0)
		{ after(grammarAccess.getAnnotationCodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeGenerationFlag
entryRuleCodeGenerationFlag
:
{ before(grammarAccess.getCodeGenerationFlagRule()); }
	 ruleCodeGenerationFlag
{ after(grammarAccess.getCodeGenerationFlagRule()); } 
	 EOF 
;

// Rule CodeGenerationFlag
ruleCodeGenerationFlag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getAlternatives()); }
		(rule__CodeGenerationFlag__Alternatives)
		{ after(grammarAccess.getCodeGenerationFlagAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationLayer
entryRuleAnnotationLayer
:
{ before(grammarAccess.getAnnotationLayerRule()); }
	 ruleAnnotationLayer
{ after(grammarAccess.getAnnotationLayerRule()); } 
	 EOF 
;

// Rule AnnotationLayer
ruleAnnotationLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationLayerAccess().getAlternatives()); }
		(rule__AnnotationLayer__Alternatives)
		{ after(grammarAccess.getAnnotationLayerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayerIcon
entryRuleLayerIcon
:
{ before(grammarAccess.getLayerIconRule()); }
	 ruleLayerIcon
{ after(grammarAccess.getLayerIconRule()); } 
	 EOF 
;

// Rule LayerIcon
ruleLayerIcon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerIconAccess().getGroup()); }
		(rule__LayerIcon__Group__0)
		{ after(grammarAccess.getLayerIconAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayerDiagram
entryRuleLayerDiagram
:
{ before(grammarAccess.getLayerDiagramRule()); }
	 ruleLayerDiagram
{ after(grammarAccess.getLayerDiagramRule()); } 
	 EOF 
;

// Rule LayerDiagram
ruleLayerDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerDiagramAccess().getGroup()); }
		(rule__LayerDiagram__Group__0)
		{ after(grammarAccess.getLayerDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinateSpecification
entryRuleCoordinateSpecification
:
{ before(grammarAccess.getCoordinateSpecificationRule()); }
	 ruleCoordinateSpecification
{ after(grammarAccess.getCoordinateSpecificationRule()); } 
	 EOF 
;

// Rule CoordinateSpecification
ruleCoordinateSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateSpecificationAccess().getGroup()); }
		(rule__CoordinateSpecification__Group__0)
		{ after(grammarAccess.getCoordinateSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinateSpecificationArgs
entryRuleCoordinateSpecificationArgs
:
{ before(grammarAccess.getCoordinateSpecificationArgsRule()); }
	 ruleCoordinateSpecificationArgs
{ after(grammarAccess.getCoordinateSpecificationArgsRule()); } 
	 EOF 
;

// Rule CoordinateSpecificationArgs
ruleCoordinateSpecificationArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateSpecificationArgsAccess().getAlternatives()); }
		(rule__CoordinateSpecificationArgs__Alternatives)
		{ after(grammarAccess.getCoordinateSpecificationArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtent
entryRuleExtent
:
{ before(grammarAccess.getExtentRule()); }
	 ruleExtent
{ after(grammarAccess.getExtentRule()); } 
	 EOF 
;

// Rule Extent
ruleExtent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtentAccess().getGroup()); }
		(rule__Extent__Group__0)
		{ after(grammarAccess.getExtentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreserveAR
entryRulePreserveAR
:
{ before(grammarAccess.getPreserveARRule()); }
	 rulePreserveAR
{ after(grammarAccess.getPreserveARRule()); } 
	 EOF 
;

// Rule PreserveAR
rulePreserveAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreserveARAccess().getGroup()); }
		(rule__PreserveAR__Group__0)
		{ after(grammarAccess.getPreserveARAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialScale
entryRuleInitialScale
:
{ before(grammarAccess.getInitialScaleRule()); }
	 ruleInitialScale
{ after(grammarAccess.getInitialScaleRule()); } 
	 EOF 
;

// Rule InitialScale
ruleInitialScale 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialScaleAccess().getGroup()); }
		(rule__InitialScale__Group__0)
		{ after(grammarAccess.getInitialScaleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGrid
entryRuleGrid
:
{ before(grammarAccess.getGridRule()); }
	 ruleGrid
{ after(grammarAccess.getGridRule()); } 
	 EOF 
;

// Rule Grid
ruleGrid 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGridAccess().getGroup()); }
		(rule__Grid__Group__0)
		{ after(grammarAccess.getGridAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlacement
entryRulePlacement
:
{ before(grammarAccess.getPlacementRule()); }
	 rulePlacement
{ after(grammarAccess.getPlacementRule()); } 
	 EOF 
;

// Rule Placement
rulePlacement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlacementAccess().getGroup()); }
		(rule__Placement__Group__0)
		{ after(grammarAccess.getPlacementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlacementArg
entryRulePlacementArg
:
{ before(grammarAccess.getPlacementArgRule()); }
	 rulePlacementArg
{ after(grammarAccess.getPlacementArgRule()); } 
	 EOF 
;

// Rule PlacementArg
rulePlacementArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlacementArgAccess().getAlternatives()); }
		(rule__PlacementArg__Alternatives)
		{ after(grammarAccess.getPlacementArgAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisible
entryRuleVisible
:
{ before(grammarAccess.getVisibleRule()); }
	 ruleVisible
{ after(grammarAccess.getVisibleRule()); } 
	 EOF 
;

// Rule Visible
ruleVisible 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisibleAccess().getGroup()); }
		(rule__Visible__Group__0)
		{ after(grammarAccess.getVisibleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformation
entryRuleTransformation
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationAccess().getGroup()); }
		(rule__Transformation__Group__0)
		{ after(grammarAccess.getTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationArg
entryRuleTransformationArg
:
{ before(grammarAccess.getTransformationArgRule()); }
	 ruleTransformationArg
{ after(grammarAccess.getTransformationArgRule()); } 
	 EOF 
;

// Rule TransformationArg
ruleTransformationArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationArgAccess().getAlternatives()); }
		(rule__TransformationArg__Alternatives)
		{ after(grammarAccess.getTransformationArgAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotation
entryRuleRotation
:
{ before(grammarAccess.getRotationRule()); }
	 ruleRotation
{ after(grammarAccess.getRotationRule()); } 
	 EOF 
;

// Rule Rotation
ruleRotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotationAccess().getGroup()); }
		(rule__Rotation__Group__0)
		{ after(grammarAccess.getRotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrigin
entryRuleOrigin
:
{ before(grammarAccess.getOriginRule()); }
	 ruleOrigin
{ after(grammarAccess.getOriginRule()); } 
	 EOF 
;

// Rule Origin
ruleOrigin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOriginAccess().getGroup()); }
		(rule__Origin__Group__0)
		{ after(grammarAccess.getOriginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenum
entryRulenum
:
{ before(grammarAccess.getNumRule()); }
	 rulenum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;

// Rule num
rulenum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumAccess().getAlternatives()); }
		(rule__Num__Alternatives)
		{ after(grammarAccess.getNumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRadius
entryRuleRadius
:
{ before(grammarAccess.getRadiusRule()); }
	 ruleRadius
{ after(grammarAccess.getRadiusRule()); } 
	 EOF 
;

// Rule Radius
ruleRadius 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRadiusAccess().getAlternatives()); }
		(rule__Radius__Alternatives)
		{ after(grammarAccess.getRadiusAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSmooth
entryRuleSmooth
:
{ before(grammarAccess.getSmoothRule()); }
	 ruleSmooth
{ after(grammarAccess.getSmoothRule()); } 
	 EOF 
;

// Rule Smooth
ruleSmooth 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSmoothAccess().getGroup()); }
		(rule__Smooth__Group__0)
		{ after(grammarAccess.getSmoothAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThickness
entryRuleThickness
:
{ before(grammarAccess.getThicknessRule()); }
	 ruleThickness
{ after(grammarAccess.getThicknessRule()); } 
	 EOF 
;

// Rule Thickness
ruleThickness 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThicknessAccess().getGroup()); }
		(rule__Thickness__Group__0)
		{ after(grammarAccess.getThicknessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphics
entryRuleGraphics
:
{ before(grammarAccess.getGraphicsRule()); }
	 ruleGraphics
{ after(grammarAccess.getGraphicsRule()); } 
	 EOF 
;

// Rule Graphics
ruleGraphics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphicsAccess().getGroup()); }
		(rule__Graphics__Group__0)
		{ after(grammarAccess.getGraphicsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphicalPrimitive
entryRuleGraphicalPrimitive
:
{ before(grammarAccess.getGraphicalPrimitiveRule()); }
	 ruleGraphicalPrimitive
{ after(grammarAccess.getGraphicalPrimitiveRule()); } 
	 EOF 
;

// Rule GraphicalPrimitive
ruleGraphicalPrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getAlternatives()); }
		(rule__GraphicalPrimitive__Alternatives)
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLine
entryRuleLine
:
{ before(grammarAccess.getLineRule()); }
	 ruleLine
{ after(grammarAccess.getLineRule()); } 
	 EOF 
;

// Rule Line
ruleLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineAccess().getGroup()); }
		(rule__Line__Group__0)
		{ after(grammarAccess.getLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolygon
entryRulePolygon
:
{ before(grammarAccess.getPolygonRule()); }
	 rulePolygon
{ after(grammarAccess.getPolygonRule()); } 
	 EOF 
;

// Rule Polygon
rulePolygon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolygonAccess().getGroup()); }
		(rule__Polygon__Group__0)
		{ after(grammarAccess.getPolygonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRectangle
entryRuleRectangle
:
{ before(grammarAccess.getRectangleRule()); }
	 ruleRectangle
{ after(grammarAccess.getRectangleRule()); } 
	 EOF 
;

// Rule Rectangle
ruleRectangle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectangleAccess().getGroup()); }
		(rule__Rectangle__Group__0)
		{ after(grammarAccess.getRectangleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEllipse
entryRuleEllipse
:
{ before(grammarAccess.getEllipseRule()); }
	 ruleEllipse
{ after(grammarAccess.getEllipseRule()); } 
	 EOF 
;

// Rule Ellipse
ruleEllipse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEllipseAccess().getGroup()); }
		(rule__Ellipse__Group__0)
		{ after(grammarAccess.getEllipseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitmap
entryRuleBitmap
:
{ before(grammarAccess.getBitmapRule()); }
	 ruleBitmap
{ after(grammarAccess.getBitmapRule()); } 
	 EOF 
;

// Rule Bitmap
ruleBitmap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitmapAccess().getGroup()); }
		(rule__Bitmap__Group__0)
		{ after(grammarAccess.getBitmapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphicalPrimitiveArgs
entryRuleGraphicalPrimitiveArgs
:
{ before(grammarAccess.getGraphicalPrimitiveArgsRule()); }
	 ruleGraphicalPrimitiveArgs
{ after(grammarAccess.getGraphicalPrimitiveArgsRule()); } 
	 EOF 
;

// Rule GraphicalPrimitiveArgs
ruleGraphicalPrimitiveArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getAlternatives()); }
		(rule__GraphicalPrimitiveArgs__Alternatives)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDialog
entryRuleDialog
:
{ before(grammarAccess.getDialogRule()); }
	 ruleDialog
{ after(grammarAccess.getDialogRule()); } 
	 EOF 
;

// Rule Dialog
ruleDialog 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDialogAccess().getGroup()); }
		(rule__Dialog__Group__0)
		{ after(grammarAccess.getDialogAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDialogArg
entryRuleDialogArg
:
{ before(grammarAccess.getDialogArgRule()); }
	 ruleDialogArg
{ after(grammarAccess.getDialogArgRule()); } 
	 EOF 
;

// Rule DialogArg
ruleDialogArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDialogArgAccess().getAlternatives()); }
		(rule__DialogArg__Alternatives)
		{ after(grammarAccess.getDialogArgAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnable
entryRuleEnable
:
{ before(grammarAccess.getEnableRule()); }
	 ruleEnable
{ after(grammarAccess.getEnableRule()); } 
	 EOF 
;

// Rule Enable
ruleEnable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnableAccess().getGroup()); }
		(rule__Enable__Group__0)
		{ after(grammarAccess.getEnableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTab
entryRuleTab
:
{ before(grammarAccess.getTabRule()); }
	 ruleTab
{ after(grammarAccess.getTabRule()); } 
	 EOF 
;

// Rule Tab
ruleTab 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTabAccess().getGroup()); }
		(rule__Tab__Group__0)
		{ after(grammarAccess.getTabAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationDocumentation
entryRuleAnnotationDocumentation
:
{ before(grammarAccess.getAnnotationDocumentationRule()); }
	 ruleAnnotationDocumentation
{ after(grammarAccess.getAnnotationDocumentationRule()); } 
	 EOF 
;

// Rule AnnotationDocumentation
ruleAnnotationDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationDocumentationAccess().getGroup()); }
		(rule__AnnotationDocumentation__Group__0)
		{ after(grammarAccess.getAnnotationDocumentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationExperiment
entryRuleAnnotationExperiment
:
{ before(grammarAccess.getAnnotationExperimentRule()); }
	 ruleAnnotationExperiment
{ after(grammarAccess.getAnnotationExperimentRule()); } 
	 EOF 
;

// Rule AnnotationExperiment
ruleAnnotationExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationExperimentAccess().getGroup()); }
		(rule__AnnotationExperiment__Group__0)
		{ after(grammarAccess.getAnnotationExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExperimentOption
entryRuleExperimentOption
:
{ before(grammarAccess.getExperimentOptionRule()); }
	 ruleExperimentOption
{ after(grammarAccess.getExperimentOptionRule()); } 
	 EOF 
;

// Rule ExperimentOption
ruleExperimentOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getAlternatives()); }
		(rule__ExperimentOption__Alternatives)
		{ after(grammarAccess.getExperimentOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssertionLevel
ruleAssertionLevel
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionLevelAccess().getAlternatives()); }
		(rule__AssertionLevel__Alternatives)
		{ after(grammarAccess.getAssertionLevelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FillPattern
ruleFillPattern
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillPatternAccess().getAlternatives()); }
		(rule__FillPattern__Alternatives)
		{ after(grammarAccess.getFillPatternAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SmoothEnum
ruleSmoothEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmoothEnumAccess().getAlternatives()); }
		(rule__SmoothEnum__Alternatives)
		{ after(grammarAccess.getSmoothEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getClassAssignment_1_0()); }
		(rule__ClassPrefixes__ClassAssignment_1_0)
		{ after(grammarAccess.getClassPrefixesAccess().getClassAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getModelAssignment_1_1()); }
		(rule__ClassPrefixes__ModelAssignment_1_1)
		{ after(grammarAccess.getClassPrefixesAccess().getModelAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_2()); }
		(rule__ClassPrefixes__Group_1_2__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getBlockAssignment_1_3()); }
		(rule__ClassPrefixes__BlockAssignment_1_3)
		{ after(grammarAccess.getClassPrefixesAccess().getBlockAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_4()); }
		(rule__ClassPrefixes__Group_1_4__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getTypeAssignment_1_5()); }
		(rule__ClassPrefixes__TypeAssignment_1_5)
		{ after(grammarAccess.getClassPrefixesAccess().getTypeAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPackageAssignment_1_6()); }
		(rule__ClassPrefixes__PackageAssignment_1_6)
		{ after(grammarAccess.getClassPrefixesAccess().getPackageAssignment_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_7()); }
		(rule__ClassPrefixes__Group_1_7__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_8()); }
		(rule__ClassPrefixes__OperatorAssignment_1_8)
		{ after(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Alternatives_1_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPureAssignment_1_7_0_0()); }
		(rule__ClassPrefixes__PureAssignment_1_7_0_0)
		{ after(grammarAccess.getClassPrefixesAccess().getPureAssignment_1_7_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1()); }
		'impure'
		{ after(grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getLongClassSpecifierParserRuleCall_0()); }
		ruleLongClassSpecifier
		{ after(grammarAccess.getClassSpecifierAccess().getLongClassSpecifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassSpecifierAccess().getShortClassSpecifierParserRuleCall_1()); }
		ruleShortClassSpecifier
		{ after(grammarAccess.getClassSpecifierAccess().getShortClassSpecifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassSpecifierAccess().getDerClassSpecifierParserRuleCall_2()); }
		ruleDerClassSpecifier
		{ after(grammarAccess.getClassSpecifierAccess().getDerClassSpecifierParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getGroup_0()); }
		(rule__LongClassSpecifier__Group_0__0)
		{ after(grammarAccess.getLongClassSpecifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getGroup_1()); }
		(rule__LongClassSpecifier__Group_1__0)
		{ after(grammarAccess.getLongClassSpecifierAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getGroup_0()); }
		(rule__ShortClassSpecifier__Group_0__0)
		{ after(grammarAccess.getShortClassSpecifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getGroup_1()); }
		(rule__ShortClassSpecifier__Group_1__0)
		{ after(grammarAccess.getShortClassSpecifierAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getEnumListAssignment_1_4_0()); }
		(rule__ShortClassSpecifier__EnumListAssignment_1_4_0)?
		{ after(grammarAccess.getShortClassSpecifierAccess().getEnumListAssignment_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getColonKeyword_1_4_1()); }
		':'
		{ after(grammarAccess.getShortClassSpecifierAccess().getColonKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup_1_0()); }
		(rule__Composition__Group_1_0__0)
		{ after(grammarAccess.getCompositionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getGroup_1_1()); }
		(rule__Composition__Group_1_1__0)
		{ after(grammarAccess.getCompositionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getEquationSectionsAssignment_1_2()); }
		(rule__Composition__EquationSectionsAssignment_1_2)
		{ after(grammarAccess.getCompositionAccess().getEquationSectionsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getAlgorithmSectionsAssignment_1_3()); }
		(rule__Composition__AlgorithmSectionsAssignment_1_3)
		{ after(grammarAccess.getCompositionAccess().getAlgorithmSectionsAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getImportClauseAssignment_0()); }
		(rule__Element__ImportClauseAssignment_0)
		{ after(grammarAccess.getElementAccess().getImportClauseAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getExtendClauseAssignment_1()); }
		(rule__Element__ExtendClauseAssignment_1)
		{ after(grammarAccess.getElementAccess().getExtendClauseAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_2()); }
		(rule__Element__Group_2__0)
		{ after(grammarAccess.getElementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getClassAssignment_2_5_0()); }
		(rule__Element__ClassAssignment_2_5_0)
		{ after(grammarAccess.getElementAccess().getClassAssignment_2_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getCompAssignment_2_5_1()); }
		(rule__Element__CompAssignment_2_5_1)
		{ after(grammarAccess.getElementAccess().getCompAssignment_2_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_0()); }
		(rule__ImportClause__Group_1_0__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_1()); }
		(rule__ImportClause__Group_1_1__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Alternatives_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0()); }
		'*'
		{ after(grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_1_1_1_1()); }
		(rule__ImportClause__Group_1_1_1_1_1__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getGroup_0()); }
		(rule__Modification__Group_0__0)
		{ after(grammarAccess.getModificationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getGroup_1()); }
		(rule__Modification__Group_1__0)
		{ after(grammarAccess.getModificationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getGroup_2()); }
		(rule__Modification__Group_2__0)
		{ after(grammarAccess.getModificationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getElementModificationOrReplaceableParserRuleCall_0()); }
		ruleElementModificationOrReplaceable
		{ after(grammarAccess.getArgumentAccess().getElementModificationOrReplaceableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1()); }
		ruleElementRedeclaration
		{ after(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepAssignment_2_0()); }
		(rule__ElementModificationOrReplaceable__ElementModOrRepAssignment_2_0)
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepAssignment_2_1()); }
		(rule__ElementModificationOrReplaceable__ElementModOrRepAssignment_2_1)
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getAlternatives_3_0()); }
		(rule__ElementRedeclaration__Alternatives_3_0)
		{ after(grammarAccess.getElementRedeclarationAccess().getAlternatives_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getElementAssignment_3_1()); }
		(rule__ElementRedeclaration__ElementAssignment_3_1)
		{ after(grammarAccess.getElementRedeclarationAccess().getElementAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getClassDefinitionAssignment_3_0_0()); }
		(rule__ElementRedeclaration__ClassDefinitionAssignment_3_0_0)
		{ after(grammarAccess.getElementRedeclarationAccess().getClassDefinitionAssignment_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getComponentClauseAssignment_3_0_1()); }
		(rule__ElementRedeclaration__ComponentClauseAssignment_3_0_1)
		{ after(grammarAccess.getElementRedeclarationAccess().getComponentClauseAssignment_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getElementAssignment_1_0()); }
		(rule__ElementReplaceable__ElementAssignment_1_0)
		{ after(grammarAccess.getElementReplaceableAccess().getElementAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementReplaceableAccess().getElementAssignment_1_1()); }
		(rule__ElementReplaceable__ElementAssignment_1_1)
		{ after(grammarAccess.getElementReplaceableAccess().getElementAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getFlowAssignment_1_0()); }
		(rule__TypePrefix__FlowAssignment_1_0)
		{ after(grammarAccess.getTypePrefixAccess().getFlowAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getStreamAssignment_1_1()); }
		(rule__TypePrefix__StreamAssignment_1_1)
		{ after(grammarAccess.getTypePrefixAccess().getStreamAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getConstantAssignment_2_0()); }
		(rule__TypePrefix__ConstantAssignment_2_0)
		{ after(grammarAccess.getTypePrefixAccess().getConstantAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getParameterAssignment_2_1()); }
		(rule__TypePrefix__ParameterAssignment_2_1)
		{ after(grammarAccess.getTypePrefixAccess().getParameterAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getDiscreteAssignment_2_2()); }
		(rule__TypePrefix__DiscreteAssignment_2_2)
		{ after(grammarAccess.getTypePrefixAccess().getDiscreteAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getInputAssignment_3_0()); }
		(rule__TypePrefix__InputAssignment_3_0)
		{ after(grammarAccess.getTypePrefixAccess().getInputAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getOutputAssignment_3_1()); }
		(rule__TypePrefix__OutputAssignment_3_1)
		{ after(grammarAccess.getTypePrefixAccess().getOutputAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getGroup_0()); }
		(rule__Equation__Group_0__0)
		{ after(grammarAccess.getEquationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getConnectionAssignment_1()); }
		(rule__Equation__ConnectionAssignment_1)
		{ after(grammarAccess.getEquationAccess().getConnectionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getAssertParserRuleCall_2()); }
		ruleAssert
		{ after(grammarAccess.getEquationAccess().getAssertParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getGroup_0_0_0()); }
		(rule__Equation__Group_0_0_0__0)
		{ after(grammarAccess.getEquationAccess().getGroup_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getEquationIfParserRuleCall_0_0_1()); }
		ruleEquationIf
		{ after(grammarAccess.getEquationAccess().getEquationIfParserRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getEquationForParserRuleCall_0_0_2()); }
		ruleEquationFor
		{ after(grammarAccess.getEquationAccess().getEquationForParserRuleCall_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getEquationWhenParserRuleCall_0_0_3()); }
		ruleEquationWhen
		{ after(grammarAccess.getEquationAccess().getEquationWhenParserRuleCall_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_0()); }
		(rule__Statement__Group_0_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_1()); }
		(rule__Statement__Group_0_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_2()); }
		(rule__Statement__Group_0_2__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_3()); }
		(rule__Statement__Group_0_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStatementIfParserRuleCall_0_4()); }
		ruleStatementIf
		{ after(grammarAccess.getStatementAccess().getStatementIfParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStatementForParserRuleCall_0_5()); }
		ruleStatementFor
		{ after(grammarAccess.getStatementAccess().getStatementForParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStatementWhileParserRuleCall_0_6()); }
		ruleStatementWhile
		{ after(grammarAccess.getStatementAccess().getStatementWhileParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStatementWhenParserRuleCall_0_7()); }
		ruleStatementWhen
		{ after(grammarAccess.getStatementAccess().getStatementWhenParserRuleCall_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_0_1_0()); }
		(rule__Statement__Group_0_0_1_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFcaAssignment_0_0_1_1()); }
		(rule__Statement__FcaAssignment_0_0_1_1)
		{ after(grammarAccess.getStatementAccess().getFcaAssignment_0_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }
		'>='
		{ after(grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getRelOpAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4()); }
		'=='
		{ after(grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
		'<>'
		{ after(grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpressionUnary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getGroup_1()); }
		(rule__ArithmeticExpressionUnary__Group_1__0)
		{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2()); }
		'.+'
		{ after(grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3()); }
		'.-'
		{ after(grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMulOpAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMulOpAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2()); }
		'.*'
		{ after(grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3()); }
		'./'
		{ after(grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0()); }
		'^'
		{ after(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1()); }
		'.^'
		{ after(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
		(rule__Primary__Group_5__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_6()); }
		ruleComponentReference
		{ after(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_7()); }
		(rule__Primary__Group_7__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_8()); }
		(rule__Primary__Group_8__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_9()); }
		(rule__Primary__Group_9__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_10()); }
		(rule__Primary__Group_10__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNameAssignment_5_1_0()); }
		(rule__Primary__NameAssignment_5_1_0)
		{ after(grammarAccess.getPrimaryAccess().getNameAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getDerKeyword_5_1_1()); }
		'der'
		{ after(grammarAccess.getPrimaryAccess().getDerKeyword_5_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getInitialKeyword_5_1_2()); }
		'initial'
		{ after(grammarAccess.getPrimaryAccess().getInitialKeyword_5_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0()); }
		(rule__FunctionArguments__Group_0__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentsAssignment_1()); }
		(rule__FunctionArguments__NamedArgumentsAssignment_1)
		{ after(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_0()); }
		(rule__FunctionArguments__Group_0_1_0__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_1()); }
		(rule__FunctionArguments__Group_0_1_1__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getGroup_0()); }
		(rule__FunctionArgument__Group_0__0)
		{ after(grammarAccess.getFunctionArgumentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getExpressionAssignment_1()); }
		(rule__FunctionArgument__ExpressionAssignment_1)
		{ after(grammarAccess.getFunctionArgumentAccess().getExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubscriptAccess().getGroup_0()); }
		(rule__Subscript__Group_0__0)
		{ after(grammarAccess.getSubscriptAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1()); }
		ruleExpression
		{ after(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationArg__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationArgAccess().getAnnotationCodeParserRuleCall_0()); }
		ruleAnnotationCode
		{ after(grammarAccess.getAnnotationArgAccess().getAnnotationCodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getPlacementParserRuleCall_1()); }
		rulePlacement
		{ after(grammarAccess.getAnnotationArgAccess().getPlacementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getLineParserRuleCall_2()); }
		ruleLine
		{ after(grammarAccess.getAnnotationArgAccess().getLineParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getAnnotationLayerParserRuleCall_3()); }
		ruleAnnotationLayer
		{ after(grammarAccess.getAnnotationArgAccess().getAnnotationLayerParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getAnnotationDocumentationParserRuleCall_4()); }
		ruleAnnotationDocumentation
		{ after(grammarAccess.getAnnotationArgAccess().getAnnotationDocumentationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getDialogParserRuleCall_5()); }
		ruleDialog
		{ after(grammarAccess.getAnnotationArgAccess().getDialogParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getAnnotationExperimentParserRuleCall_6()); }
		ruleAnnotationExperiment
		{ after(grammarAccess.getAnnotationArgAccess().getAnnotationExperimentParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getChoicesParserRuleCall_7()); }
		ruleChoices
		{ after(grammarAccess.getAnnotationArgAccess().getChoicesParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationArgAccess().getDefComponentNameParserRuleCall_8()); }
		ruleDefComponentName
		{ after(grammarAccess.getAnnotationArgAccess().getDefComponentNameParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__ValuesAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getValuesTrueKeyword_4_0_0()); }
		'true'
		{ after(grammarAccess.getChoicesAccess().getValuesTrueKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChoicesAccess().getValuesFalseKeyword_4_0_1()); }
		'false'
		{ after(grammarAccess.getChoicesAccess().getValuesFalseKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__ValuesAlternatives_5_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getValuesTrueKeyword_5_3_0_0()); }
		'true'
		{ after(grammarAccess.getChoicesAccess().getValuesTrueKeyword_5_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChoicesAccess().getValuesFalseKeyword_5_3_0_1()); }
		'false'
		{ after(grammarAccess.getChoicesAccess().getValuesFalseKeyword_5_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationCodeAccess().getValueTrueKeyword_2_0_0()); }
		'true'
		{ after(grammarAccess.getAnnotationCodeAccess().getValueTrueKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationCodeAccess().getValueFalseKeyword_2_0_1()); }
		'false'
		{ after(grammarAccess.getAnnotationCodeAccess().getValueFalseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeGenerationFlag__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getEvaluateKeyword_0()); }
		'Evaluate'
		{ after(grammarAccess.getCodeGenerationFlagAccess().getEvaluateKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getHideResultKeyword_1()); }
		'HideResult'
		{ after(grammarAccess.getCodeGenerationFlagAccess().getHideResultKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getInlineKeyword_2()); }
		'Inline'
		{ after(grammarAccess.getCodeGenerationFlagAccess().getInlineKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getLateInlineKeyword_3()); }
		'LateInline'
		{ after(grammarAccess.getCodeGenerationFlagAccess().getLateInlineKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getCodeGenerationFlagAccess().getGenerateEventsKeyword_4()); }
		'GenerateEvents'
		{ after(grammarAccess.getCodeGenerationFlagAccess().getGenerateEventsKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationLayer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationLayerAccess().getLayerIconParserRuleCall_0()); }
		ruleLayerIcon
		{ after(grammarAccess.getAnnotationLayerAccess().getLayerIconParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotationLayerAccess().getLayerDiagramParserRuleCall_1()); }
		ruleLayerDiagram
		{ after(grammarAccess.getAnnotationLayerAccess().getLayerDiagramParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecificationArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateSpecificationArgsAccess().getExtentParserRuleCall_0()); }
		ruleExtent
		{ after(grammarAccess.getCoordinateSpecificationArgsAccess().getExtentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoordinateSpecificationArgsAccess().getPreserveARParserRuleCall_1()); }
		rulePreserveAR
		{ after(grammarAccess.getCoordinateSpecificationArgsAccess().getPreserveARParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCoordinateSpecificationArgsAccess().getInitialScaleParserRuleCall_2()); }
		ruleInitialScale
		{ after(grammarAccess.getCoordinateSpecificationArgsAccess().getInitialScaleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCoordinateSpecificationArgsAccess().getGridParserRuleCall_3()); }
		ruleGrid
		{ after(grammarAccess.getCoordinateSpecificationArgsAccess().getGridParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreserveARAccess().getValueTrueKeyword_2_0_0()); }
		'true'
		{ after(grammarAccess.getPreserveARAccess().getValueTrueKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreserveARAccess().getValueFalseKeyword_2_0_1()); }
		'false'
		{ after(grammarAccess.getPreserveARAccess().getValueFalseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlacementArg__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlacementArgAccess().getVisibleParserRuleCall_0()); }
		ruleVisible
		{ after(grammarAccess.getPlacementArgAccess().getVisibleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlacementArgAccess().getTransformationParserRuleCall_1()); }
		ruleTransformation
		{ after(grammarAccess.getPlacementArgAccess().getTransformationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibleAccess().getValueTrueKeyword_2_0_0()); }
		'true'
		{ after(grammarAccess.getVisibleAccess().getValueTrueKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibleAccess().getValueFalseKeyword_2_0_1()); }
		'false'
		{ after(grammarAccess.getVisibleAccess().getValueFalseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getNameTransformationKeyword_0_0_0()); }
		'transformation'
		{ after(grammarAccess.getTransformationAccess().getNameTransformationKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getNameIconTransformationKeyword_0_0_1()); }
		'iconTransformation'
		{ after(grammarAccess.getTransformationAccess().getNameIconTransformationKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationArg__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationArgAccess().getOriginParserRuleCall_0()); }
		ruleOrigin
		{ after(grammarAccess.getTransformationArgAccess().getOriginParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationArgAccess().getExtentParserRuleCall_1()); }
		ruleExtent
		{ after(grammarAccess.getTransformationArgAccess().getExtentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationArgAccess().getRotationParserRuleCall_2()); }
		ruleRotation
		{ after(grammarAccess.getTransformationArgAccess().getRotationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAccess().getUNSIGNED_INTEGERTerminalRuleCall_0()); }
		RULE_UNSIGNED_INTEGER
		{ after(grammarAccess.getNumAccess().getUNSIGNED_INTEGERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumAccess().getUNSIGNED_NUMBERTerminalRuleCall_1()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getNumAccess().getUNSIGNED_NUMBERTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRadiusAccess().getGroup_0()); }
		(rule__Radius__Group_0__0)
		{ after(grammarAccess.getRadiusAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRadiusAccess().getGroup_1()); }
		(rule__Radius__Group_1__0)
		{ after(grammarAccess.getRadiusAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getColorKeyword_0_0()); }
		'color'
		{ after(grammarAccess.getColorAccess().getColorKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLineColorKeyword_0_1()); }
		'lineColor'
		{ after(grammarAccess.getColorAccess().getLineColorKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getFillColorKeyword_0_2()); }
		'fillColor'
		{ after(grammarAccess.getColorAccess().getFillColorKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getLineParserRuleCall_0()); }
		ruleLine
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getLineParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getPolygonParserRuleCall_1()); }
		rulePolygon
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getPolygonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getRectangleParserRuleCall_2()); }
		ruleRectangle
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getRectangleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getEllipseParserRuleCall_3()); }
		ruleEllipse
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getEllipseParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getTextParserRuleCall_4()); }
		ruleText
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getTextParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveAccess().getBitmapParserRuleCall_5()); }
		ruleBitmap
		{ after(grammarAccess.getGraphicalPrimitiveAccess().getBitmapParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getVisibleParserRuleCall_0()); }
		ruleVisible
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getVisibleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getOriginParserRuleCall_1()); }
		ruleOrigin
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getOriginParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getExtentParserRuleCall_2()); }
		ruleExtent
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getExtentParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getColorParserRuleCall_3()); }
		ruleColor
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getColorParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getSmoothParserRuleCall_4()); }
		ruleSmooth
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getSmoothParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getThicknessParserRuleCall_5()); }
		ruleThickness
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getThicknessParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getRadiusParserRuleCall_6()); }
		ruleRadius
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getRadiusParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_7()); }
		(rule__GraphicalPrimitiveArgs__Group_7__0)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_8()); }
		(rule__GraphicalPrimitiveArgs__Group_8__0)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_9()); }
		(rule__GraphicalPrimitiveArgs__Group_9__0)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_10()); }
		(rule__GraphicalPrimitiveArgs__Group_10__0)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_11()); }
		(rule__GraphicalPrimitiveArgs__Group_11__0)
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DialogArg__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDialogArgAccess().getEnableParserRuleCall_0()); }
		ruleEnable
		{ after(grammarAccess.getDialogArgAccess().getEnableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDialogArgAccess().getGroupParserRuleCall_1()); }
		ruleGroup
		{ after(grammarAccess.getDialogArgAccess().getGroupParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDialogArgAccess().getTabParserRuleCall_2()); }
		ruleTab
		{ after(grammarAccess.getDialogArgAccess().getTabParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getGroup_0()); }
		(rule__ExperimentOption__Group_0__0)
		{ after(grammarAccess.getExperimentOptionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentOptionAccess().getGroup_1()); }
		(rule__ExperimentOption__Group_1__0)
		{ after(grammarAccess.getExperimentOptionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentOptionAccess().getGroup_2()); }
		(rule__ExperimentOption__Group_2__0)
		{ after(grammarAccess.getExperimentOptionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentOptionAccess().getGroup_3()); }
		(rule__ExperimentOption__Group_3__0)
		{ after(grammarAccess.getExperimentOptionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_0_2_0()); }
		'+'
		{ after(grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_0_2_1()); }
		'-'
		{ after(grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_1_2_0()); }
		'+'
		{ after(grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_1_2_1()); }
		'-'
		{ after(grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLevel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionLevelAccess().getErrorEnumLiteralDeclaration_0()); }
		('AssertionLevel.error')
		{ after(grammarAccess.getAssertionLevelAccess().getErrorEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionLevelAccess().getWarningEnumLiteralDeclaration_1()); }
		('AssertionLevel.warning')
		{ after(grammarAccess.getAssertionLevelAccess().getWarningEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillPattern__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillPatternAccess().getNoneEnumLiteralDeclaration_0()); }
		('FillPattern.None')
		{ after(grammarAccess.getFillPatternAccess().getNoneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFillPatternAccess().getSolidEnumLiteralDeclaration_1()); }
		('FillPattern.Solid')
		{ after(grammarAccess.getFillPatternAccess().getSolidEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFillPatternAccess().getHorizontalEnumLiteralDeclaration_2()); }
		('FillPattern.Horizontal')
		{ after(grammarAccess.getFillPatternAccess().getHorizontalEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getFillPatternAccess().getVerticalEnumLiteralDeclaration_3()); }
		('FillPattern.Vertical')
		{ after(grammarAccess.getFillPatternAccess().getVerticalEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmoothEnumAccess().getNoneEnumLiteralDeclaration_0()); }
		('Smooth.None')
		{ after(grammarAccess.getSmoothEnumAccess().getNoneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSmoothEnumAccess().getBezierEnumLiteralDeclaration_1()); }
		('Smooth.Bezier')
		{ after(grammarAccess.getSmoothEnumAccess().getBezierEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
	()
	{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_1()); }
	(rule__Program__Group_1__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_2()); }
	(rule__Program__Group_2__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_1__0__Impl
	rule__Program__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getWithinKeyword_1_0()); }
	'within'
	{ after(grammarAccess.getProgramAccess().getWithinKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_1__1__Impl
	rule__Program__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1_1()); }
	(rule__Program__NameAssignment_1_1)?
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_1_2()); }
	';'
	{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_2__0__Impl
	rule__Program__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getClassesAssignment_2_0()); }
	(rule__Program__ClassesAssignment_2_0)
	{ after(grammarAccess.getProgramAccess().getClassesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__0__Impl
	rule__ClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedAssignment_0()); }
	(rule__ClassDefinition__EncapsulatedAssignment_0)?
	{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__1__Impl
	rule__ClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getClassPrefixesAssignment_1()); }
	(rule__ClassDefinition__ClassPrefixesAssignment_1)
	{ after(grammarAccess.getClassDefinitionAccess().getClassPrefixesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getClassSpecifierAssignment_2()); }
	(rule__ClassDefinition__ClassSpecifierAssignment_2)
	{ after(grammarAccess.getClassDefinitionAccess().getClassSpecifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group__0__Impl
	rule__ClassPrefixes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getPartialAssignment_0()); }
	(rule__ClassPrefixes__PartialAssignment_0)?
	{ after(grammarAccess.getClassPrefixesAccess().getPartialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getAlternatives_1()); }
	(rule__ClassPrefixes__Alternatives_1)
	{ after(grammarAccess.getClassPrefixesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_2__0__Impl
	rule__ClassPrefixes__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_2_0()); }
	(rule__ClassPrefixes__OperatorAssignment_1_2_0)?
	{ after(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getRecordAssignment_1_2_1()); }
	(rule__ClassPrefixes__RecordAssignment_1_2_1)
	{ after(grammarAccess.getClassPrefixesAccess().getRecordAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_4__0__Impl
	rule__ClassPrefixes__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getExpandableAssignment_1_4_0()); }
	(rule__ClassPrefixes__ExpandableAssignment_1_4_0)?
	{ after(grammarAccess.getClassPrefixesAccess().getExpandableAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getConnectorAssignment_1_4_1()); }
	(rule__ClassPrefixes__ConnectorAssignment_1_4_1)
	{ after(grammarAccess.getClassPrefixesAccess().getConnectorAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__0__Impl
	rule__ClassPrefixes__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getAlternatives_1_7_0()); }
	(rule__ClassPrefixes__Alternatives_1_7_0)?
	{ after(grammarAccess.getClassPrefixesAccess().getAlternatives_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__1__Impl
	rule__ClassPrefixes__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_7_1()); }
	(rule__ClassPrefixes__OperatorAssignment_1_7_1)?
	{ after(grammarAccess.getClassPrefixesAccess().getOperatorAssignment_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getFunctionAssignment_1_7_2()); }
	(rule__ClassPrefixes__FunctionAssignment_1_7_2)
	{ after(grammarAccess.getClassPrefixesAccess().getFunctionAssignment_1_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LongClassSpecifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_0__0__Impl
	rule__LongClassSpecifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getNameAssignment_0_0()); }
	(rule__LongClassSpecifier__NameAssignment_0_0)
	{ after(grammarAccess.getLongClassSpecifierAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_0__1__Impl
	rule__LongClassSpecifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getSringCommentAssignment_0_1()); }
	(rule__LongClassSpecifier__SringCommentAssignment_0_1)?
	{ after(grammarAccess.getLongClassSpecifierAccess().getSringCommentAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_0__2__Impl
	rule__LongClassSpecifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getCompositionAssignment_0_2()); }
	(rule__LongClassSpecifier__CompositionAssignment_0_2)
	{ after(grammarAccess.getLongClassSpecifierAccess().getCompositionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_0__3__Impl
	rule__LongClassSpecifier__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getEndKeyword_0_3()); }
	'end'
	{ after(grammarAccess.getLongClassSpecifierAccess().getEndKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getNameEndAssignment_0_4()); }
	(rule__LongClassSpecifier__NameEndAssignment_0_4)
	{ after(grammarAccess.getLongClassSpecifierAccess().getNameEndAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LongClassSpecifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__0__Impl
	rule__LongClassSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getExtendsAssignment_1_0()); }
	(rule__LongClassSpecifier__ExtendsAssignment_1_0)
	{ after(grammarAccess.getLongClassSpecifierAccess().getExtendsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__1__Impl
	rule__LongClassSpecifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getNameAssignment_1_1()); }
	(rule__LongClassSpecifier__NameAssignment_1_1)
	{ after(grammarAccess.getLongClassSpecifierAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__2__Impl
	rule__LongClassSpecifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getClassModificationAssignment_1_2()); }
	(rule__LongClassSpecifier__ClassModificationAssignment_1_2)?
	{ after(grammarAccess.getLongClassSpecifierAccess().getClassModificationAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__3__Impl
	rule__LongClassSpecifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getSringCommentAssignment_1_3()); }
	(rule__LongClassSpecifier__SringCommentAssignment_1_3)?
	{ after(grammarAccess.getLongClassSpecifierAccess().getSringCommentAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__4__Impl
	rule__LongClassSpecifier__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getCompositionAssignment_1_4()); }
	(rule__LongClassSpecifier__CompositionAssignment_1_4)
	{ after(grammarAccess.getLongClassSpecifierAccess().getCompositionAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__5__Impl
	rule__LongClassSpecifier__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getEndKeyword_1_5()); }
	'end'
	{ after(grammarAccess.getLongClassSpecifierAccess().getEndKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongClassSpecifier__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongClassSpecifierAccess().getNameEndAssignment_1_6()); }
	(rule__LongClassSpecifier__NameEndAssignment_1_6)
	{ after(grammarAccess.getLongClassSpecifierAccess().getNameEndAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassSpecifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__0__Impl
	rule__ShortClassSpecifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getNameAssignment_0_0()); }
	(rule__ShortClassSpecifier__NameAssignment_0_0)
	{ after(grammarAccess.getShortClassSpecifierAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__1__Impl
	rule__ShortClassSpecifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__2__Impl
	rule__ShortClassSpecifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getBasePrefixAssignment_0_2()); }
	(rule__ShortClassSpecifier__BasePrefixAssignment_0_2)
	{ after(grammarAccess.getShortClassSpecifierAccess().getBasePrefixAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__3__Impl
	rule__ShortClassSpecifier__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getInstanceNameAssignment_0_3()); }
	(rule__ShortClassSpecifier__InstanceNameAssignment_0_3)
	{ after(grammarAccess.getShortClassSpecifierAccess().getInstanceNameAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__4__Impl
	rule__ShortClassSpecifier__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getArraySubscriptsAssignment_0_4()); }
	(rule__ShortClassSpecifier__ArraySubscriptsAssignment_0_4)?
	{ after(grammarAccess.getShortClassSpecifierAccess().getArraySubscriptsAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__5__Impl
	rule__ShortClassSpecifier__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getClassModificationAssignment_0_5()); }
	(rule__ShortClassSpecifier__ClassModificationAssignment_0_5)?
	{ after(grammarAccess.getShortClassSpecifierAccess().getClassModificationAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getCommentAssignment_0_6()); }
	(rule__ShortClassSpecifier__CommentAssignment_0_6)?
	{ after(grammarAccess.getShortClassSpecifierAccess().getCommentAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassSpecifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__0__Impl
	rule__ShortClassSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getNameAssignment_1_0()); }
	(rule__ShortClassSpecifier__NameAssignment_1_0)
	{ after(grammarAccess.getShortClassSpecifierAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__1__Impl
	rule__ShortClassSpecifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__2__Impl
	rule__ShortClassSpecifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getEnumerationKeyword_1_2()); }
	'enumeration'
	{ after(grammarAccess.getShortClassSpecifierAccess().getEnumerationKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__3__Impl
	rule__ShortClassSpecifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getLeftParenthesisKeyword_1_3()); }
	'('
	{ after(grammarAccess.getShortClassSpecifierAccess().getLeftParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__4__Impl
	rule__ShortClassSpecifier__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getAlternatives_1_4()); }
	(rule__ShortClassSpecifier__Alternatives_1_4)
	{ after(grammarAccess.getShortClassSpecifierAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__5__Impl
	rule__ShortClassSpecifier__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getShortClassSpecifierAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassSpecifier__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassSpecifierAccess().getCommentAssignment_1_6()); }
	(rule__ShortClassSpecifier__CommentAssignment_1_6)?
	{ after(grammarAccess.getShortClassSpecifierAccess().getCommentAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerClassSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__0__Impl
	rule__DerClassSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getIdAssignment_0()); }
	(rule__DerClassSpecifier__IdAssignment_0)
	{ after(grammarAccess.getDerClassSpecifierAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__1__Impl
	rule__DerClassSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDerClassSpecifierAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__2__Impl
	rule__DerClassSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getDerKeyword_2()); }
	'der'
	{ after(grammarAccess.getDerClassSpecifierAccess().getDerKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__3__Impl
	rule__DerClassSpecifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getDerClassSpecifierAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__4__Impl
	rule__DerClassSpecifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getNameAssignment_4()); }
	(rule__DerClassSpecifier__NameAssignment_4)
	{ after(grammarAccess.getDerClassSpecifierAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__5__Impl
	rule__DerClassSpecifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__6__Impl
	rule__DerClassSpecifier__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_6()); }
	RULE_IDENT
	{ after(grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__7__Impl
	rule__DerClassSpecifier__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getGroup_7()); }
	(rule__DerClassSpecifier__Group_7__0)*
	{ after(grammarAccess.getDerClassSpecifierAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__8__Impl
	rule__DerClassSpecifier__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getDerClassSpecifierAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getCommentAssignment_9()); }
	(rule__DerClassSpecifier__CommentAssignment_9)?
	{ after(grammarAccess.getDerClassSpecifierAccess().getCommentAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerClassSpecifier__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group_7__0__Impl
	rule__DerClassSpecifier__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerClassSpecifier__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_7_1()); }
	RULE_IDENT
	{ after(grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group__0__Impl
	rule__EnumList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getEnumerationLiteralAssignment_0()); }
	(rule__EnumList__EnumerationLiteralAssignment_0)
	{ after(grammarAccess.getEnumListAccess().getEnumerationLiteralAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getGroup_1()); }
	(rule__EnumList__Group_1__0)*
	{ after(grammarAccess.getEnumListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group_1__0__Impl
	rule__EnumList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getEnumListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getEnumerationLiteralAssignment_1_1()); }
	(rule__EnumList__EnumerationLiteralAssignment_1_1)
	{ after(grammarAccess.getEnumListAccess().getEnumerationLiteralAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__0__Impl
	rule__EnumerationLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
	{ after(grammarAccess.getEnumerationLiteralAccess().getIDENTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getCommentAssignment_1()); }
	(rule__EnumerationLiteral__CommentAssignment_1)
	{ after(grammarAccess.getEnumerationLiteralAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getElementListAssignment_0()); }
	(rule__Composition__ElementListAssignment_0)
	{ after(grammarAccess.getCompositionAccess().getElementListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAlternatives_1()); }
	(rule__Composition__Alternatives_1)*
	{ after(grammarAccess.getCompositionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_2()); }
	(rule__Composition__Group_2__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_3()); }
	(rule__Composition__Group_3__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_0__0__Impl
	rule__Composition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }
	'public'
	{ after(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getElementListPublicAssignment_1_0_1()); }
	(rule__Composition__ElementListPublicAssignment_1_0_1)
	{ after(grammarAccess.getCompositionAccess().getElementListPublicAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_1__0__Impl
	rule__Composition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }
	'protected'
	{ after(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getElementListProtectedAssignment_1_1_1()); }
	(rule__Composition__ElementListProtectedAssignment_1_1_1)
	{ after(grammarAccess.getCompositionAccess().getElementListProtectedAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__0__Impl
	rule__Composition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }
	'external'
	{ after(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getLanguageSpecificationAssignment_2_1()); }
	(rule__Composition__LanguageSpecificationAssignment_2_1)
	{ after(grammarAccess.getCompositionAccess().getLanguageSpecificationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__0__Impl
	rule__Composition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAnnotationAssignment_3_0()); }
	(rule__Composition__AnnotationAssignment_3_0)
	{ after(grammarAccess.getCompositionAccess().getAnnotationAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementListAction_0()); }
	()
	{ after(grammarAccess.getElementListAccess().getElementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementsAssignment_1_0()); }
	(rule__ElementList__ElementsAssignment_1_0)
	{ after(grammarAccess.getElementListAccess().getElementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getElementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRedeclareAssignment_2_0()); }
	(rule__Element__RedeclareAssignment_2_0)?
	{ after(grammarAccess.getElementAccess().getRedeclareAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getFinalAssignment_2_1()); }
	(rule__Element__FinalAssignment_2_1)?
	{ after(grammarAccess.getElementAccess().getFinalAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__2__Impl
	rule__Element__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getInnerAssignment_2_2()); }
	(rule__Element__InnerAssignment_2_2)?
	{ after(grammarAccess.getElementAccess().getInnerAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__3__Impl
	rule__Element__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOuterAssignment_2_3()); }
	(rule__Element__OuterAssignment_2_3)?
	{ after(grammarAccess.getElementAccess().getOuterAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__4__Impl
	rule__Element__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getReplaceableKeyword_2_4()); }
	('replaceable')?
	{ after(grammarAccess.getElementAccess().getReplaceableKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__5__Impl
	rule__Element__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_2_5()); }
	(rule__Element__Alternatives_2_5)
	{ after(grammarAccess.getElementAccess().getAlternatives_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_2_6()); }
	(rule__Element__Group_2_6__0)?
	{ after(grammarAccess.getElementAccess().getGroup_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_6__0__Impl
	rule__Element__Group_2_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getCcAssignment_2_6_0()); }
	(rule__Element__CcAssignment_2_6_0)
	{ after(grammarAccess.getElementAccess().getCcAssignment_2_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getCommentAssignment_2_6_1()); }
	(rule__Element__CommentAssignment_2_6_1)?
	{ after(grammarAccess.getElementAccess().getCommentAssignment_2_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__0__Impl
	rule__ImportClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__1__Impl
	rule__ImportClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getAlternatives_1()); }
	(rule__ImportClause__Alternatives_1)
	{ after(grammarAccess.getImportClauseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getCommentAssignment_2()); }
	(rule__ImportClause__CommentAssignment_2)?
	{ after(grammarAccess.getImportClauseAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__0__Impl
	rule__ImportClause__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getIdAssignment_1_0_0()); }
	(rule__ImportClause__IdAssignment_1_0_0)
	{ after(grammarAccess.getImportClauseAccess().getIdAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__1__Impl
	rule__ImportClause__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1()); }
	'='
	{ after(grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getNameAssignment_1_0_2()); }
	(rule__ImportClause__NameAssignment_1_0_2)
	{ after(grammarAccess.getImportClauseAccess().getNameAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1__0__Impl
	rule__ImportClause__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getNameAssignment_1_1_0()); }
	(rule__ImportClause__NameAssignment_1_1_0)
	{ after(grammarAccess.getImportClauseAccess().getNameAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getGroup_1_1_1()); }
	(rule__ImportClause__Group_1_1_1__0)?
	{ after(grammarAccess.getImportClauseAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1__0__Impl
	rule__ImportClause__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getFullStopKeyword_1_1_1_0()); }
	'.'
	{ after(grammarAccess.getImportClauseAccess().getFullStopKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getAlternatives_1_1_1_1()); }
	(rule__ImportClause__Alternatives_1_1_1_1)
	{ after(grammarAccess.getImportClauseAccess().getAlternatives_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__0__Impl
	rule__ImportClause__Group_1_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getLeftCurlyBracketKeyword_1_1_1_1_1_0()); }
	'{'
	{ after(grammarAccess.getImportClauseAccess().getLeftCurlyBracketKeyword_1_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__1__Impl
	rule__ImportClause__Group_1_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportListAssignment_1_1_1_1_1_1()); }
	(rule__ImportClause__ImportListAssignment_1_1_1_1_1_1)
	{ after(grammarAccess.getImportClauseAccess().getImportListAssignment_1_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getRightCurlyBracketKeyword_1_1_1_1_1_2()); }
	'}'
	{ after(grammarAccess.getImportClauseAccess().getRightCurlyBracketKeyword_1_1_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group__0__Impl
	rule__ImportList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getIdAssignment_0()); }
	(rule__ImportList__IdAssignment_0)
	{ after(grammarAccess.getImportListAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getGroup_1()); }
	(rule__ImportList__Group_1__0)*
	{ after(grammarAccess.getImportListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group_1__0__Impl
	rule__ImportList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getImportListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getIdAssignment_1_1()); }
	(rule__ImportList__IdAssignment_1_1)
	{ after(grammarAccess.getImportListAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendClause__Group__0__Impl
	rule__ExtendClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendClauseAccess().getExtendsKeyword_0()); }
	'extends'
	{ after(grammarAccess.getExtendClauseAccess().getExtendsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendClause__Group__1__Impl
	rule__ExtendClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendClauseAccess().getNameAssignment_1()); }
	(rule__ExtendClause__NameAssignment_1)
	{ after(grammarAccess.getExtendClauseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendClause__Group__2__Impl
	rule__ExtendClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendClauseAccess().getClassModificationAssignment_2()); }
	(rule__ExtendClause__ClassModificationAssignment_2)?
	{ after(grammarAccess.getExtendClauseAccess().getClassModificationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendClauseAccess().getAnnotationAssignment_3()); }
	(rule__ExtendClause__AnnotationAssignment_3)?
	{ after(grammarAccess.getExtendClauseAccess().getAnnotationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainingClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__0__Impl
	rule__ConstrainingClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0()); }
	'constrainedby'
	{ after(grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__1__Impl
	rule__ConstrainingClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getNameAssignment_1()); }
	(rule__ConstrainingClause__NameAssignment_1)
	{ after(grammarAccess.getConstrainingClauseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getClassModificationAssignment_2()); }
	(rule__ConstrainingClause__ClassModificationAssignment_2)?
	{ after(grammarAccess.getConstrainingClauseAccess().getClassModificationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0__0__Impl
	rule__Modification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getClassModificationAssignment_0_0()); }
	(rule__Modification__ClassModificationAssignment_0_0)
	{ after(grammarAccess.getModificationAccess().getClassModificationAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getGroup_0_1()); }
	(rule__Modification__Group_0_1__0)?
	{ after(grammarAccess.getModificationAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0_1__0__Impl
	rule__Modification__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }
	'='
	{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExpressionAssignment_0_1_1()); }
	(rule__Modification__ExpressionAssignment_0_1_1)
	{ after(grammarAccess.getModificationAccess().getExpressionAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_1__0__Impl
	rule__Modification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExpressionAssignment_1_1()); }
	(rule__Modification__ExpressionAssignment_1_1)
	{ after(grammarAccess.getModificationAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_2__0__Impl
	rule__Modification__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }
	':='
	{ after(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExpressionAssignment_2_1()); }
	(rule__Modification__ExpressionAssignment_2_1)
	{ after(grammarAccess.getModificationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__0__Impl
	rule__ClassModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getClassModificationAction_0()); }
	()
	{ after(grammarAccess.getClassModificationAccess().getClassModificationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__1__Impl
	rule__ClassModification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__2__Impl
	rule__ClassModification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getArgumentListAssignment_2()); }
	(rule__ClassModification__ArgumentListAssignment_2)?
	{ after(grammarAccess.getClassModificationAccess().getArgumentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getArgumentsAssignment_0()); }
	(rule__ArgumentList__ArgumentsAssignment_0)
	{ after(grammarAccess.getArgumentListAccess().getArgumentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
	(rule__ArgumentList__Group_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getArgumentsAssignment_1_1()); }
	(rule__ArgumentList__ArgumentsAssignment_1_1)
	{ after(grammarAccess.getArgumentListAccess().getArgumentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementModificationOrReplaceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModificationOrReplaceable__Group__0__Impl
	rule__ElementModificationOrReplaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationOrReplaceableAccess().getEachAssignment_0()); }
	(rule__ElementModificationOrReplaceable__EachAssignment_0)?
	{ after(grammarAccess.getElementModificationOrReplaceableAccess().getEachAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModificationOrReplaceable__Group__1__Impl
	rule__ElementModificationOrReplaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationOrReplaceableAccess().getFinalAssignment_1()); }
	(rule__ElementModificationOrReplaceable__FinalAssignment_1)?
	{ after(grammarAccess.getElementModificationOrReplaceableAccess().getFinalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModificationOrReplaceable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationOrReplaceableAccess().getAlternatives_2()); }
	(rule__ElementModificationOrReplaceable__Alternatives_2)
	{ after(grammarAccess.getElementModificationOrReplaceableAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementModification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__0__Impl
	rule__ElementModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getNameAssignment_0()); }
	(rule__ElementModification__NameAssignment_0)
	{ after(grammarAccess.getElementModificationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__1__Impl
	rule__ElementModification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getModificationAssignment_1()); }
	(rule__ElementModification__ModificationAssignment_1)?
	{ after(grammarAccess.getElementModificationAccess().getModificationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getStringCommentAssignment_2()); }
	(rule__ElementModification__StringCommentAssignment_2)?
	{ after(grammarAccess.getElementModificationAccess().getStringCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementRedeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__0__Impl
	rule__ElementRedeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getRedeclareAssignment_0()); }
	(rule__ElementRedeclaration__RedeclareAssignment_0)
	{ after(grammarAccess.getElementRedeclarationAccess().getRedeclareAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__1__Impl
	rule__ElementRedeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getEachAssignment_1()); }
	(rule__ElementRedeclaration__EachAssignment_1)?
	{ after(grammarAccess.getElementRedeclarationAccess().getEachAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__2__Impl
	rule__ElementRedeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getFinalAssignment_2()); }
	(rule__ElementRedeclaration__FinalAssignment_2)?
	{ after(grammarAccess.getElementRedeclarationAccess().getFinalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getAlternatives_3()); }
	(rule__ElementRedeclaration__Alternatives_3)
	{ after(grammarAccess.getElementRedeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementReplaceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__0__Impl
	rule__ElementReplaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getReplaceableAssignment_0()); }
	(rule__ElementReplaceable__ReplaceableAssignment_0)
	{ after(grammarAccess.getElementReplaceableAccess().getReplaceableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__1__Impl
	rule__ElementReplaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getAlternatives_1()); }
	(rule__ElementReplaceable__Alternatives_1)
	{ after(grammarAccess.getElementReplaceableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getConstraintAssignment_2()); }
	(rule__ElementReplaceable__ConstraintAssignment_2)?
	{ after(grammarAccess.getElementReplaceableAccess().getConstraintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClause1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__0__Impl
	rule__ComponentClause1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getTypePrefixAssignment_0()); }
	(rule__ComponentClause1__TypePrefixAssignment_0)
	{ after(grammarAccess.getComponentClause1Access().getTypePrefixAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__1__Impl
	rule__ComponentClause1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getTypeSpecifierAssignment_1()); }
	(rule__ComponentClause1__TypeSpecifierAssignment_1)
	{ after(grammarAccess.getComponentClause1Access().getTypeSpecifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getComponentDeclarationAssignment_2()); }
	(rule__ComponentClause1__ComponentDeclarationAssignment_2)
	{ after(grammarAccess.getComponentClause1Access().getComponentDeclarationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration1__Group__0__Impl
	rule__ComponentDeclaration1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0()); }
	ruleDeclaration
	{ after(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclaration1Access().getCommentAssignment_1()); }
	(rule__ComponentDeclaration1__CommentAssignment_1)?
	{ after(grammarAccess.getComponentDeclaration1Access().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__0__Impl
	rule__ShortClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesAssignment_0()); }
	(rule__ShortClassDefinition__ClassPrefixesAssignment_0)
	{ after(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getClassSpecifierAssignment_1()); }
	(rule__ShortClassDefinition__ClassSpecifierAssignment_1)
	{ after(grammarAccess.getShortClassDefinitionAccess().getClassSpecifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__0__Impl
	rule__ComponentClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getTypePrefixAssignment_0()); }
	(rule__ComponentClause__TypePrefixAssignment_0)
	{ after(grammarAccess.getComponentClauseAccess().getTypePrefixAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__1__Impl
	rule__ComponentClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getTypeSpecAssignment_1()); }
	(rule__ComponentClause__TypeSpecAssignment_1)
	{ after(grammarAccess.getComponentClauseAccess().getTypeSpecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__2__Impl
	rule__ComponentClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getArraySubscriptsAssignment_2()); }
	(rule__ComponentClause__ArraySubscriptsAssignment_2)?
	{ after(grammarAccess.getComponentClauseAccess().getArraySubscriptsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getComponentListAssignment_3()); }
	(rule__ComponentClause__ComponentListAssignment_3)
	{ after(grammarAccess.getComponentClauseAccess().getComponentListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__0__Impl
	rule__TypePrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getTypePrefixAction_0()); }
	()
	{ after(grammarAccess.getTypePrefixAccess().getTypePrefixAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__1__Impl
	rule__TypePrefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_1()); }
	(rule__TypePrefix__Alternatives_1)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__2__Impl
	rule__TypePrefix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_2()); }
	(rule__TypePrefix__Alternatives_2)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_3()); }
	(rule__TypePrefix__Alternatives_3)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group__0__Impl
	rule__ComponentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getComponentsAssignment_0()); }
	(rule__ComponentList__ComponentsAssignment_0)
	{ after(grammarAccess.getComponentListAccess().getComponentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getGroup_1()); }
	(rule__ComponentList__Group_1__0)*
	{ after(grammarAccess.getComponentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group_1__0__Impl
	rule__ComponentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getComponentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getComponentsAssignment_1_1()); }
	(rule__ComponentList__ComponentsAssignment_1_1)
	{ after(grammarAccess.getComponentListAccess().getComponentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__0__Impl
	rule__ComponentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getDeclarationAssignment_0()); }
	(rule__ComponentDeclaration__DeclarationAssignment_0)
	{ after(grammarAccess.getComponentDeclarationAccess().getDeclarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__1__Impl
	rule__ComponentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getConditionAttributeAssignment_1()); }
	(rule__ComponentDeclaration__ConditionAttributeAssignment_1)?
	{ after(grammarAccess.getComponentDeclarationAccess().getConditionAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__2__Impl
	rule__ComponentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getCommentAssignment_2()); }
	(rule__ComponentDeclaration__CommentAssignment_2)?
	{ after(grammarAccess.getComponentDeclarationAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getAnnotationAssignment_3()); }
	(rule__ComponentDeclaration__AnnotationAssignment_3)?
	{ after(grammarAccess.getComponentDeclarationAccess().getAnnotationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionAttribute__Group__0__Impl
	rule__ConditionAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAttributeAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionAttributeAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionAttribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAttributeAccess().getConditionAssignment_1()); }
	(rule__ConditionAttribute__ConditionAssignment_1)
	{ after(grammarAccess.getConditionAttributeAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
	(rule__Declaration__NameAssignment_0)
	{ after(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getArraySubscriptsAssignment_1()); }
	(rule__Declaration__ArraySubscriptsAssignment_1)?
	{ after(grammarAccess.getDeclarationAccess().getArraySubscriptsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getModificationAssignment_2()); }
	(rule__Declaration__ModificationAssignment_2)?
	{ after(grammarAccess.getDeclarationAccess().getModificationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__0__Impl
	rule__EquationSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getInitialAssignment_0()); }
	(rule__EquationSection__InitialAssignment_0)?
	{ after(grammarAccess.getEquationSectionAccess().getInitialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__1__Impl
	rule__EquationSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getEquationAssignment_1()); }
	(rule__EquationSection__EquationAssignment_1)
	{ after(grammarAccess.getEquationSectionAccess().getEquationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getGroup_2()); }
	(rule__EquationSection__Group_2__0)*
	{ after(grammarAccess.getEquationSectionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationSection__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group_2__0__Impl
	rule__EquationSection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getEquationsAssignment_2_0()); }
	(rule__EquationSection__EquationsAssignment_2_0)
	{ after(grammarAccess.getEquationSectionAccess().getEquationsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlgorithmSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__0__Impl
	rule__AlgorithmSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getInitialAssignment_0()); }
	(rule__AlgorithmSection__InitialAssignment_0)?
	{ after(grammarAccess.getAlgorithmSectionAccess().getInitialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__1__Impl
	rule__AlgorithmSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAssignment_1()); }
	(rule__AlgorithmSection__AlgorithmAssignment_1)
	{ after(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
	(rule__AlgorithmSection__Group_2__0)*
	{ after(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlgorithmSection__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group_2__0__Impl
	rule__AlgorithmSection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getStatementsAssignment_2_0()); }
	(rule__AlgorithmSection__StatementsAssignment_2_0)
	{ after(grammarAccess.getAlgorithmSectionAccess().getStatementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0__0__Impl
	rule__Equation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getAlternatives_0_0()); }
	(rule__Equation__Alternatives_0_0)
	{ after(grammarAccess.getEquationAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getCommAssignment_0_1()); }
	(rule__Equation__CommAssignment_0_1)?
	{ after(grammarAccess.getEquationAccess().getCommAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0_0__0__Impl
	rule__Equation__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getSimpleExpressionParserRuleCall_0_0_0_0()); }
	ruleSimpleExpression
	{ after(grammarAccess.getEquationAccess().getSimpleExpressionParserRuleCall_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getGroup_0_0_0_1()); }
	(rule__Equation__Group_0_0_0_1__0)?
	{ after(grammarAccess.getEquationAccess().getGroup_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0_0_1__0__Impl
	rule__Equation__Group_0_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_0_1_0()); }
	'='
	{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEquationAssignment_0_0_0_1_1()); }
	(rule__Equation__EquationAssignment_0_0_0_1_1)
	{ after(grammarAccess.getEquationAccess().getEquationAssignment_0_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getCommAssignment_1()); }
	(rule__Statement__CommAssignment_1)
	{ after(grammarAccess.getStatementAccess().getCommAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0__0__Impl
	rule__Statement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getComponentAssignment_0_0_0()); }
	(rule__Statement__ComponentAssignment_0_0_0)
	{ after(grammarAccess.getStatementAccess().getComponentAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0_0_1()); }
	(rule__Statement__Alternatives_0_0_1)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0_1_0__0__Impl
	rule__Statement__Group_0_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0_0()); }
	':='
	{ after(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionAssignment_0_0_1_0_1()); }
	(rule__Statement__ExpressionAssignment_0_0_1_0_1)
	{ after(grammarAccess.getStatementAccess().getExpressionAssignment_0_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__0__Impl
	rule__Statement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__1__Impl
	rule__Statement__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionAssignment_0_1_1()); }
	(rule__Statement__ExpressionAssignment_0_1_1)
	{ after(grammarAccess.getStatementAccess().getExpressionAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__2__Impl
	rule__Statement__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__3__Impl
	rule__Statement__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3()); }
	':='
	{ after(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__4__Impl
	rule__Statement__Group_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getComponentAssignment_0_1_4()); }
	(rule__Statement__ComponentAssignment_0_1_4)
	{ after(grammarAccess.getStatementAccess().getComponentAssignment_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFcaAssignment_0_1_5()); }
	(rule__Statement__FcaAssignment_0_1_5)
	{ after(grammarAccess.getStatementAccess().getFcaAssignment_0_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_2__0__Impl
	rule__Statement__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0_2_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getReturnKeyword_0_2_1()); }
	'return'
	{ after(grammarAccess.getStatementAccess().getReturnKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_3__0__Impl
	rule__Statement__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0_3_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getBreakKeyword_0_3_1()); }
	'break'
	{ after(grammarAccess.getStatementAccess().getBreakKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__0__Impl
	rule__EquationIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getEquationIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__1__Impl
	rule__EquationIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getIfExpAssignment_1()); }
	(rule__EquationIf__IfExpAssignment_1)
	{ after(grammarAccess.getEquationIfAccess().getIfExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__2__Impl
	rule__EquationIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getEquationIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__3__Impl
	rule__EquationIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getGroup_3()); }
	(rule__EquationIf__Group_3__0)*
	{ after(grammarAccess.getEquationIfAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__4__Impl
	rule__EquationIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getGroup_4()); }
	(rule__EquationIf__Group_4__0)*
	{ after(grammarAccess.getEquationIfAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__5__Impl
	rule__EquationIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getGroup_5()); }
	(rule__EquationIf__Group_5__0)?
	{ after(grammarAccess.getEquationIfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__6__Impl
	rule__EquationIf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getEquationIfAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getIfKeyword_7()); }
	'if'
	{ after(grammarAccess.getEquationIfAccess().getIfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_3__0__Impl
	rule__EquationIf__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getIfEqsAssignment_3_0()); }
	(rule__EquationIf__IfEqsAssignment_3_0)
	{ after(grammarAccess.getEquationIfAccess().getIfEqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getEquationIfAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4__0__Impl
	rule__EquationIf__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getElseifKeyword_4_0()); }
	'elseif'
	{ after(grammarAccess.getEquationIfAccess().getElseifKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4__1__Impl
	rule__EquationIf__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getElseifExpAssignment_4_1()); }
	(rule__EquationIf__ElseifExpAssignment_4_1)
	{ after(grammarAccess.getEquationIfAccess().getElseifExpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4__2__Impl
	rule__EquationIf__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getEquationIfAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getGroup_4_3()); }
	(rule__EquationIf__Group_4_3__0)*
	{ after(grammarAccess.getEquationIfAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4_3__0__Impl
	rule__EquationIf__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getElseIfEqsAssignment_4_3_0()); }
	(rule__EquationIf__ElseIfEqsAssignment_4_3_0)
	{ after(grammarAccess.getEquationIfAccess().getElseIfEqsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getEquationIfAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_5__0__Impl
	rule__EquationIf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getEquationIfAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getGroup_5_1()); }
	(rule__EquationIf__Group_5_1__0)*
	{ after(grammarAccess.getEquationIfAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationIf__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_5_1__0__Impl
	rule__EquationIf__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getElseEqsAssignment_5_1_0()); }
	(rule__EquationIf__ElseEqsAssignment_5_1_0)
	{ after(grammarAccess.getEquationIfAccess().getElseEqsAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationIf__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationIfAccess().getSemicolonKeyword_5_1_1()); }
	';'
	{ after(grammarAccess.getEquationIfAccess().getSemicolonKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__0__Impl
	rule__StatementIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getStatementIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__1__Impl
	rule__StatementIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getIfExpAssignment_1()); }
	(rule__StatementIf__IfExpAssignment_1)
	{ after(grammarAccess.getStatementIfAccess().getIfExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__2__Impl
	rule__StatementIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getStatementIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__3__Impl
	rule__StatementIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getGroup_3()); }
	(rule__StatementIf__Group_3__0)*
	{ after(grammarAccess.getStatementIfAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__4__Impl
	rule__StatementIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getGroup_4()); }
	(rule__StatementIf__Group_4__0)*
	{ after(grammarAccess.getStatementIfAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__5__Impl
	rule__StatementIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getGroup_5()); }
	(rule__StatementIf__Group_5__0)?
	{ after(grammarAccess.getStatementIfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__6__Impl
	rule__StatementIf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getStatementIfAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getIfKeyword_7()); }
	'if'
	{ after(grammarAccess.getStatementIfAccess().getIfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_3__0__Impl
	rule__StatementIf__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getIfEqsAssignment_3_0()); }
	(rule__StatementIf__IfEqsAssignment_3_0)
	{ after(grammarAccess.getStatementIfAccess().getIfEqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStatementIfAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4__0__Impl
	rule__StatementIf__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getElseifKeyword_4_0()); }
	'elseif'
	{ after(grammarAccess.getStatementIfAccess().getElseifKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4__1__Impl
	rule__StatementIf__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getElseifExpAssignment_4_1()); }
	(rule__StatementIf__ElseifExpAssignment_4_1)
	{ after(grammarAccess.getStatementIfAccess().getElseifExpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4__2__Impl
	rule__StatementIf__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getStatementIfAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getGroup_4_3()); }
	(rule__StatementIf__Group_4_3__0)*
	{ after(grammarAccess.getStatementIfAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4_3__0__Impl
	rule__StatementIf__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getElseIfEqsAssignment_4_3_0()); }
	(rule__StatementIf__ElseIfEqsAssignment_4_3_0)
	{ after(grammarAccess.getStatementIfAccess().getElseIfEqsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getStatementIfAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_5__0__Impl
	rule__StatementIf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getStatementIfAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getGroup_5_1()); }
	(rule__StatementIf__Group_5_1__0)*
	{ after(grammarAccess.getStatementIfAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementIf__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_5_1__0__Impl
	rule__StatementIf__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getElseEqsAssignment_5_1_0()); }
	(rule__StatementIf__ElseEqsAssignment_5_1_0)
	{ after(grammarAccess.getStatementIfAccess().getElseEqsAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementIf__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementIfAccess().getSemicolonKeyword_5_1_1()); }
	';'
	{ after(grammarAccess.getStatementIfAccess().getSemicolonKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__0__Impl
	rule__EquationFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getEquationForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__1__Impl
	rule__EquationFor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getIteratorsAssignment_1()); }
	(rule__EquationFor__IteratorsAssignment_1)
	{ after(grammarAccess.getEquationForAccess().getIteratorsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__2__Impl
	rule__EquationFor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getEquationForAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__3__Impl
	rule__EquationFor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getGroup_3()); }
	(rule__EquationFor__Group_3__0)*
	{ after(grammarAccess.getEquationForAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__4__Impl
	rule__EquationFor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getEquationForAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getForKeyword_5()); }
	'for'
	{ after(grammarAccess.getEquationForAccess().getForKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationFor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group_3__0__Impl
	rule__EquationFor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getForEqsAssignment_3_0()); }
	(rule__EquationFor__ForEqsAssignment_3_0)
	{ after(grammarAccess.getEquationForAccess().getForEqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationFor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationForAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getEquationForAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__0__Impl
	rule__StatementFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getStatementForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__1__Impl
	rule__StatementFor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getIteratorsAssignment_1()); }
	(rule__StatementFor__IteratorsAssignment_1)
	{ after(grammarAccess.getStatementForAccess().getIteratorsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__2__Impl
	rule__StatementFor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getStatementForAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__3__Impl
	rule__StatementFor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getGroup_3()); }
	(rule__StatementFor__Group_3__0)*
	{ after(grammarAccess.getStatementForAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__4__Impl
	rule__StatementFor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getStatementForAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getForKeyword_5()); }
	'for'
	{ after(grammarAccess.getStatementForAccess().getForKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementFor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group_3__0__Impl
	rule__StatementFor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getForEqsAssignment_3_0()); }
	(rule__StatementFor__ForEqsAssignment_3_0)
	{ after(grammarAccess.getStatementForAccess().getForEqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementFor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementForAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStatementForAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndices__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group__0__Impl
	rule__ForIndices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getForIndexAssignment_0()); }
	(rule__ForIndices__ForIndexAssignment_0)
	{ after(grammarAccess.getForIndicesAccess().getForIndexAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getGroup_1()); }
	(rule__ForIndices__Group_1__0)*
	{ after(grammarAccess.getForIndicesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndices__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group_1__0__Impl
	rule__ForIndices__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getForIndicesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getForIndexAssignment_1_1()); }
	(rule__ForIndices__ForIndexAssignment_1_1)
	{ after(grammarAccess.getForIndicesAccess().getForIndexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__0__Impl
	rule__ForIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getIdAssignment_0()); }
	(rule__ForIndex__IdAssignment_0)
	{ after(grammarAccess.getForIndexAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__1__Impl
	rule__ForIndex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getInKeyword_1()); }
	'in'
	{ after(grammarAccess.getForIndexAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getExpressionAssignment_2()); }
	(rule__ForIndex__ExpressionAssignment_2)
	{ after(grammarAccess.getForIndexAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__0__Impl
	rule__StatementWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getStatementWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__1__Impl
	rule__StatementWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getBoolExprAssignment_1()); }
	(rule__StatementWhile__BoolExprAssignment_1)
	{ after(grammarAccess.getStatementWhileAccess().getBoolExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__2__Impl
	rule__StatementWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getStatementWhileAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__3__Impl
	rule__StatementWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getGroup_3()); }
	(rule__StatementWhile__Group_3__0)*
	{ after(grammarAccess.getStatementWhileAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__4__Impl
	rule__StatementWhile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getStatementWhileAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getWhileKeyword_5()); }
	'while'
	{ after(grammarAccess.getStatementWhileAccess().getWhileKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhile__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group_3__0__Impl
	rule__StatementWhile__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getStatAssignment_3_0()); }
	(rule__StatementWhile__StatAssignment_3_0)
	{ after(grammarAccess.getStatementWhileAccess().getStatAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhile__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhileAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStatementWhileAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationWhen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__0__Impl
	rule__EquationWhen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getEquationWhenAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__1__Impl
	rule__EquationWhen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getWhenExpAssignment_1()); }
	(rule__EquationWhen__WhenExpAssignment_1)
	{ after(grammarAccess.getEquationWhenAccess().getWhenExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__2__Impl
	rule__EquationWhen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getEquationWhenAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__3__Impl
	rule__EquationWhen__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getGroup_3()); }
	(rule__EquationWhen__Group_3__0)*
	{ after(grammarAccess.getEquationWhenAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__4__Impl
	rule__EquationWhen__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getGroup_4()); }
	(rule__EquationWhen__Group_4__0)*
	{ after(grammarAccess.getEquationWhenAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__5__Impl
	rule__EquationWhen__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getEquationWhenAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getWhenKeyword_6()); }
	'when'
	{ after(grammarAccess.getEquationWhenAccess().getWhenKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationWhen__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_3__0__Impl
	rule__EquationWhen__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getWhenEquationsAssignment_3_0()); }
	(rule__EquationWhen__WhenEquationsAssignment_3_0)
	{ after(grammarAccess.getEquationWhenAccess().getWhenEquationsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getEquationWhenAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationWhen__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4__0__Impl
	rule__EquationWhen__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getElsewhenKeyword_4_0()); }
	'elsewhen'
	{ after(grammarAccess.getEquationWhenAccess().getElsewhenKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4__1__Impl
	rule__EquationWhen__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getExpAssignment_4_1()); }
	(rule__EquationWhen__ExpAssignment_4_1)
	{ after(grammarAccess.getEquationWhenAccess().getExpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4__2__Impl
	rule__EquationWhen__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getEquationWhenAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getGroup_4_3()); }
	(rule__EquationWhen__Group_4_3__0)*
	{ after(grammarAccess.getEquationWhenAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationWhen__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4_3__0__Impl
	rule__EquationWhen__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getEquationItemAssignment_4_3_0()); }
	(rule__EquationWhen__EquationItemAssignment_4_3_0)
	{ after(grammarAccess.getEquationWhenAccess().getEquationItemAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationWhen__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationWhenAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getEquationWhenAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__0__Impl
	rule__StatementWhen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getStatementWhenAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__1__Impl
	rule__StatementWhen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getWhenExpAssignment_1()); }
	(rule__StatementWhen__WhenExpAssignment_1)
	{ after(grammarAccess.getStatementWhenAccess().getWhenExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__2__Impl
	rule__StatementWhen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getStatementWhenAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__3__Impl
	rule__StatementWhen__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getGroup_3()); }
	(rule__StatementWhen__Group_3__0)*
	{ after(grammarAccess.getStatementWhenAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__4__Impl
	rule__StatementWhen__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getGroup_4()); }
	(rule__StatementWhen__Group_4__0)*
	{ after(grammarAccess.getStatementWhenAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__5__Impl
	rule__StatementWhen__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getStatementWhenAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getWhenKeyword_6()); }
	'when'
	{ after(grammarAccess.getStatementWhenAccess().getWhenKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhen__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_3__0__Impl
	rule__StatementWhen__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getWhenEquationsAssignment_3_0()); }
	(rule__StatementWhen__WhenEquationsAssignment_3_0)
	{ after(grammarAccess.getStatementWhenAccess().getWhenEquationsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStatementWhenAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhen__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4__0__Impl
	rule__StatementWhen__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getElsewhenKeyword_4_0()); }
	'elsewhen'
	{ after(grammarAccess.getStatementWhenAccess().getElsewhenKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4__1__Impl
	rule__StatementWhen__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getExpAssignment_4_1()); }
	(rule__StatementWhen__ExpAssignment_4_1)
	{ after(grammarAccess.getStatementWhenAccess().getExpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4__2__Impl
	rule__StatementWhen__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getStatementWhenAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getGroup_4_3()); }
	(rule__StatementWhen__Group_4_3__0)*
	{ after(grammarAccess.getStatementWhenAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementWhen__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4_3__0__Impl
	rule__StatementWhen__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getEquationItemAssignment_4_3_0()); }
	(rule__StatementWhen__EquationItemAssignment_4_3_0)
	{ after(grammarAccess.getStatementWhenAccess().getEquationItemAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementWhen__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementWhenAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getStatementWhenAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__0__Impl
	rule__ConnectClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getConnectKeyword_0()); }
	'connect'
	{ after(grammarAccess.getConnectClauseAccess().getConnectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__1__Impl
	rule__ConnectClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__2__Impl
	rule__ConnectClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getNode1Assignment_2()); }
	(rule__ConnectClause__Node1Assignment_2)
	{ after(grammarAccess.getConnectClauseAccess().getNode1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__3__Impl
	rule__ConnectClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getConnectClauseAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__4__Impl
	rule__ConnectClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getNode2Assignment_4()); }
	(rule__ConnectClause__Node2Assignment_4)
	{ after(grammarAccess.getConnectClauseAccess().getNode2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__5__Impl
	rule__ConnectClause__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getAnnotationAssignment_6()); }
	(rule__ConnectClause__AnnotationAssignment_6)?
	{ after(grammarAccess.getConnectClauseAccess().getAnnotationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_1_0()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfAssignment_1_1()); }
	(rule__Expression__IfAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getIfAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
	rule__Expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_1_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__3__Impl
	rule__Expression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenAssignment_1_3()); }
	(rule__Expression__ThenAssignment_1_3)
	{ after(grammarAccess.getExpressionAccess().getThenAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__4__Impl
	rule__Expression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_4()); }
	(rule__Expression__Group_1_4__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__5__Impl
	rule__Expression__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseKeyword_1_5()); }
	'else'
	{ after(grammarAccess.getExpressionAccess().getElseKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseAssignment_1_6()); }
	(rule__Expression__ElseAssignment_1_6)
	{ after(grammarAccess.getExpressionAccess().getElseAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__0__Impl
	rule__Expression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0()); }
	'elseif'
	{ after(grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__1__Impl
	rule__Expression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifAssignment_1_4_1()); }
	(rule__Expression__ElseifAssignment_1_4_1)
	{ after(grammarAccess.getExpressionAccess().getElseifAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__2__Impl
	rule__Expression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_1_4_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifthenAssignment_1_4_3()); }
	(rule__Expression__ElseifthenAssignment_1_4_3)
	{ after(grammarAccess.getExpressionAccess().getElseifthenAssignment_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__0__Impl
	rule__SimpleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getStartAssignment_0()); }
	(rule__SimpleExpression__StartAssignment_0)
	{ after(grammarAccess.getSimpleExpressionAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
	(rule__SimpleExpression__Group_1__0)?
	{ after(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__0__Impl
	rule__SimpleExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__1__Impl
	rule__SimpleExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getStepAssignment_1_1()); }
	(rule__SimpleExpression__StepAssignment_1_1)
	{ after(grammarAccess.getSimpleExpressionAccess().getStepAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getGroup_1_2()); }
	(rule__SimpleExpression__Group_1_2__0)?
	{ after(grammarAccess.getSimpleExpressionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1_2__0__Impl
	rule__SimpleExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_2_0()); }
	':'
	{ after(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getStopAssignment_1_2_1()); }
	(rule__SimpleExpression__StopAssignment_1_2_1)
	{ after(grammarAccess.getSimpleExpressionAccess().getStopAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__0__Impl
	rule__LogicalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0()); }
	ruleLogicalTerm
	{ after(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
	(rule__LogicalExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__0__Impl
	rule__LogicalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__1__Impl
	rule__LogicalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_2()); }
	(rule__LogicalExpression__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group__0__Impl
	rule__LogicalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0()); }
	ruleLogicalFactor
	{ after(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getGroup_1()); }
	(rule__LogicalTerm__Group_1__0)*
	{ after(grammarAccess.getLogicalTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__0__Impl
	rule__LogicalTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getLogicalTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalTermAccess().getLogicalTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__1__Impl
	rule__LogicalTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getLogicalTermAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getRightAssignment_1_2()); }
	(rule__LogicalTerm__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalFactor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalFactor__Group__0__Impl
	rule__LogicalFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalFactorAccess().getNotKeyword_0()); }
	('not')?
	{ after(grammarAccess.getLogicalFactorAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalFactor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall_1()); }
	ruleRelation
	{ after(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0()); }
	ruleArithmeticExpression
	{ after(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_1()); }
	(rule__Relation__Group_1__0)?
	{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__1__Impl
	rule__Relation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelOpParserRuleCall_1_1()); }
	ruleRelOp
	{ after(grammarAccess.getRelationAccess().getRelOpParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
	(rule__Relation__RightAssignment_1_2)
	{ after(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__0__Impl
	rule__ArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionUnaryParserRuleCall_0()); }
	ruleArithmeticExpressionUnary
	{ after(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionUnaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
	(rule__ArithmeticExpression__Group_1__0)?
	{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__1__Impl
	rule__ArithmeticExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getAddOpParserRuleCall_1_1()); }
	ruleAddOp
	{ after(grammarAccess.getArithmeticExpressionAccess().getAddOpParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_2()); }
	(rule__ArithmeticExpression__RightAssignment_1_2)
	{ after(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression2__Group__0__Impl
	rule__ArithmeticExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpression2Access().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getArithmeticExpression2Access().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpression2Access().getGroup_1()); }
	(rule__ArithmeticExpression2__Group_1__0)?
	{ after(grammarAccess.getArithmeticExpression2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression2__Group_1__0__Impl
	rule__ArithmeticExpression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpression2Access().getArithmeticExpression2LeftAction_1_0()); }
	()
	{ after(grammarAccess.getArithmeticExpression2Access().getArithmeticExpression2LeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression2__Group_1__1__Impl
	rule__ArithmeticExpression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpression2Access().getAddOpParserRuleCall_1_1()); }
	ruleAddOp
	{ after(grammarAccess.getArithmeticExpression2Access().getAddOpParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpression2Access().getRightAssignment_1_2()); }
	(rule__ArithmeticExpression2__RightAssignment_1_2)
	{ after(grammarAccess.getArithmeticExpression2Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpressionUnary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpressionUnary__Group_1__0__Impl
	rule__ArithmeticExpressionUnary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpressionUnary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getAddOpParserRuleCall_1_0()); }
	ruleAddOp
	{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getAddOpParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpressionUnary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpressionUnary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpressionUnary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getExpAssignment_1_1()); }
	(rule__ArithmeticExpressionUnary__ExpAssignment_1_1)
	{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMulOpParserRuleCall_1_1()); }
	ruleMulOp
	{ after(grammarAccess.getTermAccess().getMulOpParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
	(rule__Term__RightAssignment_1_2)
	{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)?
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
	(rule__Factor__Alternatives_1_1)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
	(rule__Factor__RightAssignment_1_2)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_1()); }
	RULE_UNSIGNED_INTEGER
	{ after(grammarAccess.getPrimaryAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1()); }
	RULE_UNSIGNED_NUMBER
	{ after(grammarAccess.getPrimaryAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getSTRINGTerminalRuleCall_2_1()); }
	RULE_STRING
	{ after(grammarAccess.getPrimaryAccess().getSTRINGTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFalseKeyword_3_1()); }
	'false'
	{ after(grammarAccess.getPrimaryAccess().getFalseKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getTrueKeyword_4_1()); }
	'true'
	{ after(grammarAccess.getPrimaryAccess().getTrueKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_5_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__1__Impl
	rule__Primary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getAlternatives_5_1()); }
	(rule__Primary__Alternatives_5_1)
	{ after(grammarAccess.getPrimaryAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFcaAssignment_5_2()); }
	(rule__Primary__FcaAssignment_5_2)
	{ after(grammarAccess.getPrimaryAccess().getFcaAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__0__Impl
	rule__Primary__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__1__Impl
	rule__Primary__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOutputExpressionListParserRuleCall_7_1()); }
	ruleOutputExpressionList
	{ after(grammarAccess.getPrimaryAccess().getOutputExpressionListParserRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_7_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8__0__Impl
	rule__Primary__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_8_0()); }
	'['
	{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8__1__Impl
	rule__Primary__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getListAssignment_8_1()); }
	(rule__Primary__ListAssignment_8_1)
	{ after(grammarAccess.getPrimaryAccess().getListAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8__2__Impl
	rule__Primary__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getGroup_8_2()); }
	(rule__Primary__Group_8_2__0)*
	{ after(grammarAccess.getPrimaryAccess().getGroup_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_8_3()); }
	']'
	{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8_2__0__Impl
	rule__Primary__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getSemicolonKeyword_8_2_0()); }
	';'
	{ after(grammarAccess.getPrimaryAccess().getSemicolonKeyword_8_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_8_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getListAssignment_8_2_1()); }
	(rule__Primary__ListAssignment_8_2_1)
	{ after(grammarAccess.getPrimaryAccess().getListAssignment_8_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_9__0__Impl
	rule__Primary__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_9_0()); }
	'{'
	{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_9__1__Impl
	rule__Primary__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFaAssignment_9_1()); }
	(rule__Primary__FaAssignment_9_1)
	{ after(grammarAccess.getPrimaryAccess().getFaAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_9_2()); }
	'}'
	{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_10__0__Impl
	rule__Primary__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_10_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getEndKeyword_10_1()); }
	'end'
	{ after(grammarAccess.getPrimaryAccess().getEndKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAction_0()); }
	()
	{ after(grammarAccess.getNameAccess().getNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getFullStopKeyword_1()); }
	('.')?
	{ after(grammarAccess.getNameAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__2__Impl
	rule__Name__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2()); }
	RULE_IDENT
	{ after(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_3()); }
	(rule__Name__Group_3__0)*
	{ after(grammarAccess.getNameAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_3__0__Impl
	rule__Name__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getNameAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getIdAssignment_3_1()); }
	(rule__Name__IdAssignment_3_1)
	{ after(grammarAccess.getNameAccess().getIdAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__0__Impl
	rule__ComponentReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getComponentReferenceAction_0()); }
	()
	{ after(grammarAccess.getComponentReferenceAccess().getComponentReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__1__Impl
	rule__ComponentReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_1()); }
	('.')?
	{ after(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__2__Impl
	rule__ComponentReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getIDENTTerminalRuleCall_2()); }
	RULE_IDENT
	{ after(grammarAccess.getComponentReferenceAccess().getIDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__3__Impl
	rule__ComponentReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getSubsAssignment_3()); }
	(rule__ComponentReference__SubsAssignment_3)?
	{ after(grammarAccess.getComponentReferenceAccess().getSubsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getGroup_4()); }
	(rule__ComponentReference__Group_4__0)*
	{ after(grammarAccess.getComponentReferenceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group_4__0__Impl
	rule__ComponentReference__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_4_0()); }
	'.'
	{ after(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group_4__1__Impl
	rule__ComponentReference__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getIdAssignment_4_1()); }
	(rule__ComponentReference__IdAssignment_4_1)
	{ after(grammarAccess.getComponentReferenceAccess().getIdAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getSubsAssignment_4_2()); }
	(rule__ComponentReference__SubsAssignment_4_2)?
	{ after(grammarAccess.getComponentReferenceAccess().getSubsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArgs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__0__Impl
	rule__FunctionCallArgs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0()); }
	()
	{ after(grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__1__Impl
	rule__FunctionCallArgs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__2__Impl
	rule__FunctionCallArgs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getFunctionArgsAssignment_2()); }
	(rule__FunctionCallArgs__FunctionArgsAssignment_2)?
	{ after(grammarAccess.getFunctionCallArgsAccess().getFunctionArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0__0__Impl
	rule__FunctionArguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getFunctionArgumentAssignment_0_0()); }
	(rule__FunctionArguments__FunctionArgumentAssignment_0_0)
	{ after(grammarAccess.getFunctionArgumentsAccess().getFunctionArgumentAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getAlternatives_0_1()); }
	(rule__FunctionArguments__Alternatives_0_1)?
	{ after(grammarAccess.getFunctionArgumentsAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_0__0__Impl
	rule__FunctionArguments__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0()); }
	','
	{ after(grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_1_0_1()); }
	(rule__FunctionArguments__ArgsAssignment_0_1_0_1)
	{ after(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_1__0__Impl
	rule__FunctionArguments__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0()); }
	'for'
	{ after(grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getForIndicesAssignment_0_1_1_1()); }
	(rule__FunctionArguments__ForIndicesAssignment_0_1_1_1)
	{ after(grammarAccess.getFunctionArgumentsAccess().getForIndicesAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group__0__Impl
	rule__NamedArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getNamedArgumentAssignment_0()); }
	(rule__NamedArguments__NamedArgumentAssignment_0)
	{ after(grammarAccess.getNamedArgumentsAccess().getNamedArgumentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getGroup_1()); }
	(rule__NamedArguments__Group_1__0)?
	{ after(grammarAccess.getNamedArgumentsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArguments__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group_1__0__Impl
	rule__NamedArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getNamedArgumentsAssignment_1_1()); }
	(rule__NamedArguments__NamedArgumentsAssignment_1_1)
	{ after(grammarAccess.getNamedArgumentsAccess().getNamedArgumentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__0__Impl
	rule__NamedArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getNameAssignment_0()); }
	(rule__NamedArgument__NameAssignment_0)
	{ after(grammarAccess.getNamedArgumentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__1__Impl
	rule__NamedArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getFunctionArgumentAssignment_2()); }
	(rule__NamedArgument__FunctionArgumentAssignment_2)
	{ after(grammarAccess.getNamedArgumentAccess().getFunctionArgumentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArgument__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group_0__0__Impl
	rule__FunctionArgument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getFunctionKeyword_0_0()); }
	'function'
	{ after(grammarAccess.getFunctionArgumentAccess().getFunctionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group_0__1__Impl
	rule__FunctionArgument__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getNameAssignment_0_1()); }
	(rule__FunctionArgument__NameAssignment_0_1)
	{ after(grammarAccess.getFunctionArgumentAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group_0__2__Impl
	rule__FunctionArgument__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getFunctionArgumentAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group_0__3__Impl
	rule__FunctionArgument__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getNamedArgumentsAssignment_0_3()); }
	(rule__FunctionArgument__NamedArgumentsAssignment_0_3)?
	{ after(grammarAccess.getFunctionArgumentAccess().getNamedArgumentsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getFunctionArgumentAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__0__Impl
	rule__OutputExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getOutputExpresionListAction_0()); }
	()
	{ after(grammarAccess.getOutputExpressionListAccess().getOutputExpresionListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__1__Impl
	rule__OutputExpressionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getExpressionsAssignment_1()); }
	(rule__OutputExpressionList__ExpressionsAssignment_1)?
	{ after(grammarAccess.getOutputExpressionListAccess().getExpressionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getGroup_2()); }
	(rule__OutputExpressionList__Group_2__0)*
	{ after(grammarAccess.getOutputExpressionListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpressionList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group_2__0__Impl
	rule__OutputExpressionList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getExpressionsAssignment_2_1()); }
	(rule__OutputExpressionList__ExpressionsAssignment_2_1)?
	{ after(grammarAccess.getOutputExpressionListAccess().getExpressionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprExpressionList__Group__0__Impl
	rule__ExprExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprExpressionListAccess().getExpAssignment_0()); }
	(rule__ExprExpressionList__ExpAssignment_0)
	{ after(grammarAccess.getExprExpressionListAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprExpressionListAccess().getGroup_1()); }
	(rule__ExprExpressionList__Group_1__0)*
	{ after(grammarAccess.getExprExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprExpressionList__Group_1__0__Impl
	rule__ExprExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExprExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprExpressionListAccess().getExpAssignment_1_1()); }
	(rule__ExprExpressionList__ExpAssignment_1_1)
	{ after(grammarAccess.getExprExpressionListAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySubscripts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__0__Impl
	rule__ArraySubscripts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__1__Impl
	rule__ArraySubscripts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_1()); }
	(rule__ArraySubscripts__SubscriptsAssignment_1)
	{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__2__Impl
	rule__ArraySubscripts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getGroup_2()); }
	(rule__ArraySubscripts__Group_2__0)*
	{ after(grammarAccess.getArraySubscriptsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySubscripts__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group_2__0__Impl
	rule__ArraySubscripts__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_2_1()); }
	(rule__ArraySubscripts__SubscriptsAssignment_2_1)
	{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subscript__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subscript__Group_0__0__Impl
	rule__Subscript__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
	()
	{ after(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subscript__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getStringCommentAssignment_0()); }
	(rule__Comment__StringCommentAssignment_0)
	{ after(grammarAccess.getCommentAccess().getStringCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getAnnotationAssignment_1()); }
	(rule__Comment__AnnotationAssignment_1)?
	{ after(grammarAccess.getCommentAccess().getAnnotationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group__0__Impl
	rule__StringComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getStringCommentAction_0()); }
	()
	{ after(grammarAccess.getStringCommentAccess().getStringCommentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group__1__Impl
	rule__StringComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getGroup_2()); }
	(rule__StringComment__Group_2__0)*
	{ after(grammarAccess.getStringCommentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringComment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group_2__0__Impl
	rule__StringComment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getPlusSignKeyword_2_0()); }
	'+'
	{ after(grammarAccess.getStringCommentAccess().getPlusSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getStrAssignment_2_1()); }
	(rule__StringComment__StrAssignment_2_1)
	{ after(grammarAccess.getStringCommentAccess().getStrAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__0__Impl
	rule__Assert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getAssertKeyword_0()); }
	'assert'
	{ after(grammarAccess.getAssertAccess().getAssertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__1__Impl
	rule__Assert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAssertAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__2__Impl
	rule__Assert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getConditionAssignment_2()); }
	(rule__Assert__ConditionAssignment_2)
	{ after(grammarAccess.getAssertAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__3__Impl
	rule__Assert__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAssertAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__4__Impl
	rule__Assert__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getMessageAssignment_4()); }
	(rule__Assert__MessageAssignment_4)
	{ after(grammarAccess.getAssertAccess().getMessageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__5__Impl
	rule__Assert__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getGroup_5()); }
	(rule__Assert__Group_5__0)?
	{ after(grammarAccess.getAssertAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getAssertAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assert__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group_5__0__Impl
	rule__Assert__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getAssertAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group_5__1__Impl
	rule__Assert__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getGroup_5_1()); }
	(rule__Assert__Group_5_1__0)?
	{ after(grammarAccess.getAssertAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getLevelAssignment_5_2()); }
	(rule__Assert__LevelAssignment_5_2)
	{ after(grammarAccess.getAssertAccess().getLevelAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assert__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group_5_1__0__Impl
	rule__Assert__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getLevelKeyword_5_1_0()); }
	'level'
	{ after(grammarAccess.getAssertAccess().getLevelKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getEqualsSignKeyword_5_1_1()); }
	'='
	{ after(grammarAccess.getAssertAccess().getEqualsSignKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
	'annotation'
	{ after(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getArgsAssignment_2()); }
	(rule__Annotation__ArgsAssignment_2)
	{ after(grammarAccess.getAnnotationAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__3__Impl
	rule__Annotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_3()); }
	(rule__Annotation__Group_3__0)*
	{ after(grammarAccess.getAnnotationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_3__0__Impl
	rule__Annotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getArgsAssignment_3_1()); }
	(rule__Annotation__ArgsAssignment_3_1)
	{ after(grammarAccess.getAnnotationAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefComponentName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefComponentName__Group__0__Impl
	rule__DefComponentName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefComponentNameAccess().getDefaultComponentNameKeyword_0()); }
	'defaultComponentName'
	{ after(grammarAccess.getDefComponentNameAccess().getDefaultComponentNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefComponentName__Group__1__Impl
	rule__DefComponentName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefComponentNameAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDefComponentNameAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefComponentName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefComponentNameAccess().getValueAssignment_2()); }
	(rule__DefComponentName__ValueAssignment_2)
	{ after(grammarAccess.getDefComponentNameAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Choices__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__0__Impl
	rule__Choices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getChoicesKeyword_0()); }
	'choices'
	{ after(grammarAccess.getChoicesAccess().getChoicesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__1__Impl
	rule__Choices__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getChoicesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__2__Impl
	rule__Choices__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getTypesAssignment_2()); }
	(rule__Choices__TypesAssignment_2)
	{ after(grammarAccess.getChoicesAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__3__Impl
	rule__Choices__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getChoicesAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__4__Impl
	rule__Choices__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getValuesAssignment_4()); }
	(rule__Choices__ValuesAssignment_4)
	{ after(grammarAccess.getChoicesAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__5__Impl
	rule__Choices__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getGroup_5()); }
	(rule__Choices__Group_5__0)*
	{ after(grammarAccess.getChoicesAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getChoicesAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Choices__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group_5__0__Impl
	rule__Choices__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getChoicesAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group_5__1__Impl
	rule__Choices__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getTypesAssignment_5_1()); }
	(rule__Choices__TypesAssignment_5_1)
	{ after(grammarAccess.getChoicesAccess().getTypesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group_5__2__Impl
	rule__Choices__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getChoicesAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choices__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoicesAccess().getValuesAssignment_5_3()); }
	(rule__Choices__ValuesAssignment_5_3)
	{ after(grammarAccess.getChoicesAccess().getValuesAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationCode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationCode__Group__0__Impl
	rule__AnnotationCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationCodeAccess().getFlagAssignment_0()); }
	(rule__AnnotationCode__FlagAssignment_0)
	{ after(grammarAccess.getAnnotationCodeAccess().getFlagAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationCode__Group__1__Impl
	rule__AnnotationCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationCodeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAnnotationCodeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationCode__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationCodeAccess().getValueAssignment_2()); }
	(rule__AnnotationCode__ValueAssignment_2)
	{ after(grammarAccess.getAnnotationCodeAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayerIcon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group__0__Impl
	rule__LayerIcon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getIconKeyword_0()); }
	'Icon'
	{ after(grammarAccess.getLayerIconAccess().getIconKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group__1__Impl
	rule__LayerIcon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLayerIconAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group__2__Impl
	rule__LayerIcon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getGroup_2()); }
	(rule__LayerIcon__Group_2__0)?
	{ after(grammarAccess.getLayerIconAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group__3__Impl
	rule__LayerIcon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getGraphicsAssignment_3()); }
	(rule__LayerIcon__GraphicsAssignment_3)
	{ after(grammarAccess.getLayerIconAccess().getGraphicsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLayerIconAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayerIcon__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group_2__0__Impl
	rule__LayerIcon__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getCoordinateSystemAssignment_2_0()); }
	(rule__LayerIcon__CoordinateSystemAssignment_2_0)
	{ after(grammarAccess.getLayerIconAccess().getCoordinateSystemAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerIcon__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerIconAccess().getCommaKeyword_2_1()); }
	','
	{ after(grammarAccess.getLayerIconAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayerDiagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__0__Impl
	rule__LayerDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getLayerDiagramAction_0()); }
	()
	{ after(grammarAccess.getLayerDiagramAccess().getLayerDiagramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__1__Impl
	rule__LayerDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getDiagramKeyword_1()); }
	'Diagram'
	{ after(grammarAccess.getLayerDiagramAccess().getDiagramKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__2__Impl
	rule__LayerDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLayerDiagramAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__3__Impl
	rule__LayerDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getCoordinateSystemAssignment_3()); }
	(rule__LayerDiagram__CoordinateSystemAssignment_3)?
	{ after(grammarAccess.getLayerDiagramAccess().getCoordinateSystemAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__4__Impl
	rule__LayerDiagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getGroup_4()); }
	(rule__LayerDiagram__Group_4__0)?
	{ after(grammarAccess.getLayerDiagramAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getLayerDiagramAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayerDiagram__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group_4__0__Impl
	rule__LayerDiagram__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getLayerDiagramAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerDiagram__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerDiagramAccess().getGraphicsAssignment_4_1()); }
	(rule__LayerDiagram__GraphicsAssignment_4_1)
	{ after(grammarAccess.getLayerDiagramAccess().getGraphicsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinateSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group__0__Impl
	rule__CoordinateSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getCoordinateSystemKeyword_0()); }
	'coordinateSystem'
	{ after(grammarAccess.getCoordinateSpecificationAccess().getCoordinateSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group__1__Impl
	rule__CoordinateSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCoordinateSpecificationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group__2__Impl
	rule__CoordinateSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getArgsAssignment_2()); }
	(rule__CoordinateSpecification__ArgsAssignment_2)
	{ after(grammarAccess.getCoordinateSpecificationAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group__3__Impl
	rule__CoordinateSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getGroup_3()); }
	(rule__CoordinateSpecification__Group_3__0)*
	{ after(grammarAccess.getCoordinateSpecificationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCoordinateSpecificationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinateSpecification__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group_3__0__Impl
	rule__CoordinateSpecification__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getCoordinateSpecificationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoordinateSpecification__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateSpecificationAccess().getArgsAssignment_3_1()); }
	(rule__CoordinateSpecification__ArgsAssignment_3_1)
	{ after(grammarAccess.getCoordinateSpecificationAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__0__Impl
	rule__Extent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getExtentKeyword_0()); }
	'extent'
	{ after(grammarAccess.getExtentAccess().getExtentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__1__Impl
	rule__Extent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getExtentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__2__Impl
	rule__Extent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getExtentAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__3__Impl
	rule__Extent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getP1Assignment_3()); }
	(rule__Extent__P1Assignment_3)
	{ after(grammarAccess.getExtentAccess().getP1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__4__Impl
	rule__Extent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getExtentAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__5__Impl
	rule__Extent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getP2Assignment_5()); }
	(rule__Extent__P2Assignment_5)
	{ after(grammarAccess.getExtentAccess().getP2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extent__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getExtentAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreserveAR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreserveAR__Group__0__Impl
	rule__PreserveAR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreserveARAccess().getPreserveAspectRatioKeyword_0()); }
	'preserveAspectRatio'
	{ after(grammarAccess.getPreserveARAccess().getPreserveAspectRatioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreserveAR__Group__1__Impl
	rule__PreserveAR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreserveARAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getPreserveARAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreserveAR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreserveARAccess().getValueAssignment_2()); }
	(rule__PreserveAR__ValueAssignment_2)
	{ after(grammarAccess.getPreserveARAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialScale__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialScale__Group__0__Impl
	rule__InitialScale__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialScaleAccess().getInitialScaleKeyword_0()); }
	'initialScale'
	{ after(grammarAccess.getInitialScaleAccess().getInitialScaleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialScale__Group__1__Impl
	rule__InitialScale__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialScaleAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInitialScaleAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialScale__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialScaleAccess().getValueAssignment_2()); }
	(rule__InitialScale__ValueAssignment_2)
	{ after(grammarAccess.getInitialScaleAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Grid__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__0__Impl
	rule__Grid__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getGridKeyword_0()); }
	'grid'
	{ after(grammarAccess.getGridAccess().getGridKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__1__Impl
	rule__Grid__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getGridAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getValueAssignment_2()); }
	(rule__Grid__ValueAssignment_2)
	{ after(grammarAccess.getGridAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Placement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group__0__Impl
	rule__Placement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getNameAssignment_0()); }
	(rule__Placement__NameAssignment_0)
	{ after(grammarAccess.getPlacementAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group__1__Impl
	rule__Placement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPlacementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group__2__Impl
	rule__Placement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getArgsAssignment_2()); }
	(rule__Placement__ArgsAssignment_2)
	{ after(grammarAccess.getPlacementAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group__3__Impl
	rule__Placement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getGroup_3()); }
	(rule__Placement__Group_3__0)*
	{ after(grammarAccess.getPlacementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPlacementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Placement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group_3__0__Impl
	rule__Placement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getPlacementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Placement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlacementAccess().getArgsAssignment_3_1()); }
	(rule__Placement__ArgsAssignment_3_1)
	{ after(grammarAccess.getPlacementAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visible__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visible__Group__0__Impl
	rule__Visible__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibleAccess().getVisibleKeyword_0()); }
	'visible'
	{ after(grammarAccess.getVisibleAccess().getVisibleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visible__Group__1__Impl
	rule__Visible__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibleAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVisibleAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visible__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibleAccess().getValueAssignment_2()); }
	(rule__Visible__ValueAssignment_2)
	{ after(grammarAccess.getVisibleAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group__0__Impl
	rule__Transformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getNameAssignment_0()); }
	(rule__Transformation__NameAssignment_0)
	{ after(grammarAccess.getTransformationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group__1__Impl
	rule__Transformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group__2__Impl
	rule__Transformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getArgsAssignment_2()); }
	(rule__Transformation__ArgsAssignment_2)
	{ after(grammarAccess.getTransformationAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group__3__Impl
	rule__Transformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getGroup_3()); }
	(rule__Transformation__Group_3__0)*
	{ after(grammarAccess.getTransformationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTransformationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group_3__0__Impl
	rule__Transformation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTransformationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transformation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationAccess().getArgsAssignment_3_1()); }
	(rule__Transformation__ArgsAssignment_3_1)
	{ after(grammarAccess.getTransformationAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotation__Group__0__Impl
	rule__Rotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotationAccess().getNameAssignment_0()); }
	(rule__Rotation__NameAssignment_0)
	{ after(grammarAccess.getRotationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotation__Group__1__Impl
	rule__Rotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getRotationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotationAccess().getValueAssignment_2()); }
	(rule__Rotation__ValueAssignment_2)
	{ after(grammarAccess.getRotationAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__0__Impl
	rule__Origin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
	'origin'
	{ after(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__1__Impl
	rule__Origin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getOriginAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPointAssignment_2()); }
	(rule__Origin__PointAssignment_2)
	{ after(grammarAccess.getOriginAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXAssignment_1()); }
	(rule__Point__XAssignment_1)
	{ after(grammarAccess.getPointAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getPointAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYAssignment_3()); }
	(rule__Point__YAssignment_3)
	{ after(grammarAccess.getPointAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPointAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Radius__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_0__0__Impl
	rule__Radius__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getRadiusKeyword_0_0()); }
	'radius'
	{ after(grammarAccess.getRadiusAccess().getRadiusKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_0__1__Impl
	rule__Radius__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getRadiusAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_0__2__Impl
	rule__Radius__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getRadiusAction_0_2()); }
	()
	{ after(grammarAccess.getRadiusAccess().getRadiusAction_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_3()); }
	RULE_UNSIGNED_INTEGER
	{ after(grammarAccess.getRadiusAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Radius__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_1__0__Impl
	rule__Radius__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getRadiusAction_1_0()); }
	()
	{ after(grammarAccess.getRadiusAccess().getRadiusAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Radius__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRadiusAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1()); }
	RULE_UNSIGNED_NUMBER
	{ after(grammarAccess.getRadiusAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Smooth__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Smooth__Group__0__Impl
	rule__Smooth__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmoothAccess().getSmoothKeyword_0()); }
	'smooth'
	{ after(grammarAccess.getSmoothAccess().getSmoothKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Smooth__Group__1__Impl
	rule__Smooth__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmoothAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSmoothAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Smooth__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmoothAccess().getValueAssignment_2()); }
	(rule__Smooth__ValueAssignment_2)
	{ after(grammarAccess.getSmoothAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlternatives_0()); }
	(rule__Color__Alternatives_0)
	{ after(grammarAccess.getColorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getColorAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getColorAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__3__Impl
	rule__Color__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRAssignment_3()); }
	(rule__Color__RAssignment_3)
	{ after(grammarAccess.getColorAccess().getRAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__4__Impl
	rule__Color__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getColorAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__5__Impl
	rule__Color__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGAssignment_5()); }
	(rule__Color__GAssignment_5)
	{ after(grammarAccess.getColorAccess().getGAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__6__Impl
	rule__Color__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getColorAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__7__Impl
	rule__Color__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBAssignment_7()); }
	(rule__Color__BAssignment_7)
	{ after(grammarAccess.getColorAccess().getBAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getColorAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Thickness__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Thickness__Group__0__Impl
	rule__Thickness__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThicknessAccess().getThicknessKeyword_0()); }
	'thickness'
	{ after(grammarAccess.getThicknessAccess().getThicknessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Thickness__Group__1__Impl
	rule__Thickness__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThicknessAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getThicknessAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Thickness__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThicknessAccess().getValueAssignment_2()); }
	(rule__Thickness__ValueAssignment_2)
	{ after(grammarAccess.getThicknessAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graphics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__0__Impl
	rule__Graphics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getGraphicsKeyword_0()); }
	'graphics'
	{ after(grammarAccess.getGraphicsAccess().getGraphicsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__1__Impl
	rule__Graphics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getGraphicsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__2__Impl
	rule__Graphics__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGraphicsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__3__Impl
	rule__Graphics__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getPrimitiveAssignment_3()); }
	(rule__Graphics__PrimitiveAssignment_3)
	{ after(grammarAccess.getGraphicsAccess().getPrimitiveAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__4__Impl
	rule__Graphics__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getGroup_4()); }
	(rule__Graphics__Group_4__0)*
	{ after(grammarAccess.getGraphicsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getGraphicsAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graphics__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group_4__0__Impl
	rule__Graphics__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getGraphicsAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphics__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicsAccess().getPrimitiveAssignment_4_1()); }
	(rule__Graphics__PrimitiveAssignment_4_1)
	{ after(grammarAccess.getGraphicsAccess().getPrimitiveAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__0__Impl
	rule__Line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getNameAssignment_0()); }
	(rule__Line__NameAssignment_0)
	{ after(grammarAccess.getLineAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__1__Impl
	rule__Line__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLineAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__2__Impl
	rule__Line__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getArgsAssignment_2()); }
	(rule__Line__ArgsAssignment_2)
	{ after(grammarAccess.getLineAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__3__Impl
	rule__Line__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getGroup_3()); }
	(rule__Line__Group_3__0)*
	{ after(grammarAccess.getLineAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLineAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_3__0__Impl
	rule__Line__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getLineAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getArgsAssignment_3_1()); }
	(rule__Line__ArgsAssignment_3_1)
	{ after(grammarAccess.getLineAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__0__Impl
	rule__Polygon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getNameAssignment_0()); }
	(rule__Polygon__NameAssignment_0)
	{ after(grammarAccess.getPolygonAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__1__Impl
	rule__Polygon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPolygonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__2__Impl
	rule__Polygon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getArgsAssignment_2()); }
	(rule__Polygon__ArgsAssignment_2)
	{ after(grammarAccess.getPolygonAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__3__Impl
	rule__Polygon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getGroup_3()); }
	(rule__Polygon__Group_3__0)*
	{ after(grammarAccess.getPolygonAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPolygonAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group_3__0__Impl
	rule__Polygon__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getPolygonAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getArgsAssignment_3_1()); }
	(rule__Polygon__ArgsAssignment_3_1)
	{ after(grammarAccess.getPolygonAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__0__Impl
	rule__Rectangle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getNameAssignment_0()); }
	(rule__Rectangle__NameAssignment_0)
	{ after(grammarAccess.getRectangleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__1__Impl
	rule__Rectangle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRectangleAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__2__Impl
	rule__Rectangle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getArgsAssignment_2()); }
	(rule__Rectangle__ArgsAssignment_2)
	{ after(grammarAccess.getRectangleAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__3__Impl
	rule__Rectangle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getGroup_3()); }
	(rule__Rectangle__Group_3__0)*
	{ after(grammarAccess.getRectangleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRectangleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group_3__0__Impl
	rule__Rectangle__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRectangleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getArgsAssignment_3_1()); }
	(rule__Rectangle__ArgsAssignment_3_1)
	{ after(grammarAccess.getRectangleAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group__0__Impl
	rule__Ellipse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getNameAssignment_0()); }
	(rule__Ellipse__NameAssignment_0)
	{ after(grammarAccess.getEllipseAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group__1__Impl
	rule__Ellipse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEllipseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group__2__Impl
	rule__Ellipse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getArgsAssignment_2()); }
	(rule__Ellipse__ArgsAssignment_2)
	{ after(grammarAccess.getEllipseAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group__3__Impl
	rule__Ellipse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getGroup_3()); }
	(rule__Ellipse__Group_3__0)*
	{ after(grammarAccess.getEllipseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEllipseAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group_3__0__Impl
	rule__Ellipse__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getEllipseAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ellipse__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEllipseAccess().getArgsAssignment_3_1()); }
	(rule__Ellipse__ArgsAssignment_3_1)
	{ after(grammarAccess.getEllipseAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_0()); }
	(rule__Text__NameAssignment_0)
	{ after(grammarAccess.getTextAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getArgsAssignment_2()); }
	(rule__Text__ArgsAssignment_2)
	{ after(grammarAccess.getTextAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
	rule__Text__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getGroup_3()); }
	(rule__Text__Group_3__0)*
	{ after(grammarAccess.getTextAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTextAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_3__0__Impl
	rule__Text__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTextAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getArgsAssignment_3_1()); }
	(rule__Text__ArgsAssignment_3_1)
	{ after(grammarAccess.getTextAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bitmap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group__0__Impl
	rule__Bitmap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getNameAssignment_0()); }
	(rule__Bitmap__NameAssignment_0)
	{ after(grammarAccess.getBitmapAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group__1__Impl
	rule__Bitmap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBitmapAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group__2__Impl
	rule__Bitmap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getArgsAssignment_2()); }
	(rule__Bitmap__ArgsAssignment_2)
	{ after(grammarAccess.getBitmapAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group__3__Impl
	rule__Bitmap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getGroup_3()); }
	(rule__Bitmap__Group_3__0)*
	{ after(grammarAccess.getBitmapAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBitmapAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bitmap__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group_3__0__Impl
	rule__Bitmap__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getBitmapAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitmap__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitmapAccess().getArgsAssignment_3_1()); }
	(rule__Bitmap__ArgsAssignment_3_1)
	{ after(grammarAccess.getBitmapAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__0__Impl
	rule__GraphicalPrimitiveArgs__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsKeyword_7_0()); }
	'points'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__1__Impl
	rule__GraphicalPrimitiveArgs__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_7_1()); }
	'='
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__2__Impl
	rule__GraphicalPrimitiveArgs__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getLeftCurlyBracketKeyword_7_2()); }
	'{'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getLeftCurlyBracketKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__3__Impl
	rule__GraphicalPrimitiveArgs__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsAssignment_7_3()); }
	(rule__GraphicalPrimitiveArgs__PointsAssignment_7_3)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__4__Impl
	rule__GraphicalPrimitiveArgs__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_7_4()); }
	(rule__GraphicalPrimitiveArgs__Group_7_4__0)*
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getGroup_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getRightCurlyBracketKeyword_7_5()); }
	'}'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getRightCurlyBracketKeyword_7_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_7_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7_4__0__Impl
	rule__GraphicalPrimitiveArgs__Group_7_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getCommaKeyword_7_4_0()); }
	','
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getCommaKeyword_7_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_7_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_7_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsAssignment_7_4_1()); }
	(rule__GraphicalPrimitiveArgs__PointsAssignment_7_4_1)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsAssignment_7_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_8__0__Impl
	rule__GraphicalPrimitiveArgs__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getTextStringKeyword_8_0()); }
	'textString'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getTextStringKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_8__1__Impl
	rule__GraphicalPrimitiveArgs__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_8_1()); }
	'='
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getStrAssignment_8_2()); }
	(rule__GraphicalPrimitiveArgs__StrAssignment_8_2)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getStrAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_9__0__Impl
	rule__GraphicalPrimitiveArgs__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameKeyword_9_0()); }
	'fileName'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_9__1__Impl
	rule__GraphicalPrimitiveArgs__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_9_1()); }
	'='
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameAssignment_9_2()); }
	(rule__GraphicalPrimitiveArgs__FileNameAssignment_9_2)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_10__0__Impl
	rule__GraphicalPrimitiveArgs__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceKeyword_10_0()); }
	'imageSource'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_10__1__Impl
	rule__GraphicalPrimitiveArgs__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_10_1()); }
	'='
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceAssignment_10_2()); }
	(rule__GraphicalPrimitiveArgs__ImageSourceAssignment_10_2)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphicalPrimitiveArgs__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_11__0__Impl
	rule__GraphicalPrimitiveArgs__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternKeyword_11_0()); }
	'fillPattern'
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_11__1__Impl
	rule__GraphicalPrimitiveArgs__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_11_1()); }
	'='
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphicalPrimitiveArgs__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternAssignment_11_2()); }
	(rule__GraphicalPrimitiveArgs__FillPatternAssignment_11_2)
	{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dialog__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group__0__Impl
	rule__Dialog__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getNameAssignment_0()); }
	(rule__Dialog__NameAssignment_0)
	{ after(grammarAccess.getDialogAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group__1__Impl
	rule__Dialog__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDialogAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group__2__Impl
	rule__Dialog__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getArgsAssignment_2()); }
	(rule__Dialog__ArgsAssignment_2)
	{ after(grammarAccess.getDialogAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group__3__Impl
	rule__Dialog__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getGroup_3()); }
	(rule__Dialog__Group_3__0)*
	{ after(grammarAccess.getDialogAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDialogAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dialog__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group_3__0__Impl
	rule__Dialog__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getDialogAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dialog__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDialogAccess().getArgsAssignment_3_1()); }
	(rule__Dialog__ArgsAssignment_3_1)
	{ after(grammarAccess.getDialogAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__0__Impl
	rule__Enable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getEnableKeyword_0()); }
	'enable'
	{ after(grammarAccess.getEnableAccess().getEnableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__1__Impl
	rule__Enable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEnableAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__2__Impl
	rule__Enable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_2()); }
	RULE_IDENT
	{ after(grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__3__Impl
	rule__Enable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_3()); }
	'=='
	{ after(grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__4__Impl
	rule__Enable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getValueAssignment_4()); }
	(rule__Enable__ValueAssignment_4)
	{ after(grammarAccess.getEnableAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getGroup_5()); }
	(rule__Enable__Group_5__0)*
	{ after(grammarAccess.getEnableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enable__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group_5__0__Impl
	rule__Enable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getOrKeyword_5_0()); }
	'or'
	{ after(grammarAccess.getEnableAccess().getOrKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group_5__1__Impl
	rule__Enable__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_5_1()); }
	RULE_IDENT
	{ after(grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group_5__2__Impl
	rule__Enable__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_5_2()); }
	'=='
	{ after(grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enable__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnableAccess().getValueAssignment_5_3()); }
	(rule__Enable__ValueAssignment_5_3)
	{ after(grammarAccess.getEnableAccess().getValueAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
	'group'
	{ after(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getGroupAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getValueAssignment_2()); }
	(rule__Group__ValueAssignment_2)
	{ after(grammarAccess.getGroupAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tab__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tab__Group__0__Impl
	rule__Tab__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabAccess().getTabKeyword_0()); }
	'tab'
	{ after(grammarAccess.getTabAccess().getTabKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tab__Group__1__Impl
	rule__Tab__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getTabAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tab__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabAccess().getValueAssignment_2()); }
	(rule__Tab__ValueAssignment_2)
	{ after(grammarAccess.getTabAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDocumentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__0__Impl
	rule__AnnotationDocumentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getDocumentationKeyword_0()); }
	'Documentation'
	{ after(grammarAccess.getAnnotationDocumentationAccess().getDocumentationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__1__Impl
	rule__AnnotationDocumentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAnnotationDocumentationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__2__Impl
	rule__AnnotationDocumentation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getInfoKeyword_2()); }
	'info'
	{ after(grammarAccess.getAnnotationDocumentationAccess().getInfoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__3__Impl
	rule__AnnotationDocumentation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__4__Impl
	rule__AnnotationDocumentation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getValueAssignment_4()); }
	(rule__AnnotationDocumentation__ValueAssignment_4)
	{ after(grammarAccess.getAnnotationDocumentationAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__5__Impl
	rule__AnnotationDocumentation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getGroup_5()); }
	(rule__AnnotationDocumentation__Group_5__0)?
	{ after(grammarAccess.getAnnotationDocumentationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getAnnotationDocumentationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDocumentation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group_5__0__Impl
	rule__AnnotationDocumentation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getAnnotationDocumentationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group_5__1__Impl
	rule__AnnotationDocumentation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getRevisionsKeyword_5_1()); }
	'revisions'
	{ after(grammarAccess.getAnnotationDocumentationAccess().getRevisionsKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group_5__2__Impl
	rule__AnnotationDocumentation__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDocumentation__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDocumentationAccess().getRevAssignment_5_3()); }
	(rule__AnnotationDocumentation__RevAssignment_5_3)
	{ after(grammarAccess.getAnnotationDocumentationAccess().getRevAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group__0__Impl
	rule__AnnotationExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getAnnotationExperimentAction_0()); }
	()
	{ after(grammarAccess.getAnnotationExperimentAccess().getAnnotationExperimentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group__1__Impl
	rule__AnnotationExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getExperimentKeyword_1()); }
	'experiment'
	{ after(grammarAccess.getAnnotationExperimentAccess().getExperimentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group__2__Impl
	rule__AnnotationExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAnnotationExperimentAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group__3__Impl
	rule__AnnotationExperiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getGroup_3()); }
	(rule__AnnotationExperiment__Group_3__0)?
	{ after(grammarAccess.getAnnotationExperimentAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAnnotationExperimentAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationExperiment__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group_3__0__Impl
	rule__AnnotationExperiment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getOptionsAssignment_3_0()); }
	(rule__AnnotationExperiment__OptionsAssignment_3_0)
	{ after(grammarAccess.getAnnotationExperimentAccess().getOptionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getGroup_3_1()); }
	(rule__AnnotationExperiment__Group_3_1__0)*
	{ after(grammarAccess.getAnnotationExperimentAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationExperiment__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group_3_1__0__Impl
	rule__AnnotationExperiment__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getAnnotationExperimentAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationExperiment__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationExperimentAccess().getOptionsAssignment_3_1_1()); }
	(rule__AnnotationExperiment__OptionsAssignment_3_1_1)
	{ after(grammarAccess.getAnnotationExperimentAccess().getOptionsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentOption__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_0__0__Impl
	rule__ExperimentOption__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getStartTimeKeyword_0_0()); }
	'StartTime'
	{ after(grammarAccess.getExperimentOptionAccess().getStartTimeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_0__1__Impl
	rule__ExperimentOption__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_0__2__Impl
	rule__ExperimentOption__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getAlternatives_0_2()); }
	(rule__ExperimentOption__Alternatives_0_2)
	{ after(grammarAccess.getExperimentOptionAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getStartAssignment_0_3()); }
	(rule__ExperimentOption__StartAssignment_0_3)
	{ after(grammarAccess.getExperimentOptionAccess().getStartAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentOption__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_1__0__Impl
	rule__ExperimentOption__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getStopTimeKeyword_1_0()); }
	'StopTime'
	{ after(grammarAccess.getExperimentOptionAccess().getStopTimeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_1__1__Impl
	rule__ExperimentOption__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_1__2__Impl
	rule__ExperimentOption__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getAlternatives_1_2()); }
	(rule__ExperimentOption__Alternatives_1_2)
	{ after(grammarAccess.getExperimentOptionAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getStopAssignment_1_3()); }
	(rule__ExperimentOption__StopAssignment_1_3)
	{ after(grammarAccess.getExperimentOptionAccess().getStopAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentOption__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_2__0__Impl
	rule__ExperimentOption__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getIntervalKeyword_2_0()); }
	'Interval'
	{ after(grammarAccess.getExperimentOptionAccess().getIntervalKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_2__1__Impl
	rule__ExperimentOption__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_2_1()); }
	'='
	{ after(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getStepAssignment_2_2()); }
	(rule__ExperimentOption__StepAssignment_2_2)
	{ after(grammarAccess.getExperimentOptionAccess().getStepAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentOption__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_3__0__Impl
	rule__ExperimentOption__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getToleranceKeyword_3_0()); }
	'Tolerance'
	{ after(grammarAccess.getExperimentOptionAccess().getToleranceKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_3__1__Impl
	rule__ExperimentOption__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_3_1()); }
	'='
	{ after(grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentOption__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentOptionAccess().getTolAssignment_3_2()); }
	(rule__ExperimentOption__TolAssignment_3_2)
	{ after(grammarAccess.getExperimentOptionAccess().getTolAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameNameParserRuleCall_1_1_0()); }
		ruleName
		{ after(grammarAccess.getProgramAccess().getNameNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ClassesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getClassesClassDefinitionParserRuleCall_2_0_0()); }
		ruleClassDefinition
		{ after(grammarAccess.getProgramAccess().getClassesClassDefinitionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__EncapsulatedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
			'encapsulated'
			{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__ClassPrefixesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_1_0()); }
		ruleClassPrefixes
		{ after(grammarAccess.getClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__ClassSpecifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getClassSpecifierClassSpecifierParserRuleCall_2_0()); }
		ruleClassSpecifier
		{ after(grammarAccess.getClassDefinitionAccess().getClassSpecifierClassSpecifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__PartialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPartialPartialKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getPartialPartialKeyword_0_0()); }
			'partial'
			{ after(grammarAccess.getClassPrefixesAccess().getPartialPartialKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getPartialPartialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__ClassAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getClassClassKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getClassClassKeyword_1_0_0()); }
			'class'
			{ after(grammarAccess.getClassPrefixesAccess().getClassClassKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getClassClassKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__ModelAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getModelModelKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getModelModelKeyword_1_1_0()); }
			'model'
			{ after(grammarAccess.getClassPrefixesAccess().getModelModelKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getModelModelKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__OperatorAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_2_0_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_2_0_0()); }
			'operator'
			{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_2_0_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__RecordAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getRecordRecordKeyword_1_2_1_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getRecordRecordKeyword_1_2_1_0()); }
			'record'
			{ after(grammarAccess.getClassPrefixesAccess().getRecordRecordKeyword_1_2_1_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getRecordRecordKeyword_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__BlockAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getBlockBlockKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getBlockBlockKeyword_1_3_0()); }
			'block'
			{ after(grammarAccess.getClassPrefixesAccess().getBlockBlockKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getBlockBlockKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__ExpandableAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getExpandableExpandableKeyword_1_4_0_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getExpandableExpandableKeyword_1_4_0_0()); }
			'expandable'
			{ after(grammarAccess.getClassPrefixesAccess().getExpandableExpandableKeyword_1_4_0_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getExpandableExpandableKeyword_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__ConnectorAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getConnectorConnectorKeyword_1_4_1_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getConnectorConnectorKeyword_1_4_1_0()); }
			'connector'
			{ after(grammarAccess.getClassPrefixesAccess().getConnectorConnectorKeyword_1_4_1_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getConnectorConnectorKeyword_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__TypeAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getTypeTypeKeyword_1_5_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getTypeTypeKeyword_1_5_0()); }
			'type'
			{ after(grammarAccess.getClassPrefixesAccess().getTypeTypeKeyword_1_5_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getTypeTypeKeyword_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__PackageAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPackagePackageKeyword_1_6_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getPackagePackageKeyword_1_6_0()); }
			'package'
			{ after(grammarAccess.getClassPrefixesAccess().getPackagePackageKeyword_1_6_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getPackagePackageKeyword_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__PureAssignment_1_7_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPurePureKeyword_1_7_0_0_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getPurePureKeyword_1_7_0_0_0()); }
			'pure'
			{ after(grammarAccess.getClassPrefixesAccess().getPurePureKeyword_1_7_0_0_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getPurePureKeyword_1_7_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__OperatorAssignment_1_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_7_1_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_7_1_0()); }
			'operator'
			{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_7_1_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__FunctionAssignment_1_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getFunctionFunctionKeyword_1_7_2_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getFunctionFunctionKeyword_1_7_2_0()); }
			'function'
			{ after(grammarAccess.getClassPrefixesAccess().getFunctionFunctionKeyword_1_7_2_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getFunctionFunctionKeyword_1_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__OperatorAssignment_1_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_8_0()); }
		(
			{ before(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_8_0()); }
			'operator'
			{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_8_0()); }
		)
		{ after(grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__SringCommentAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_0_1_0()); }
		ruleStringComment
		{ after(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__CompositionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_0_2_0()); }
		ruleComposition
		{ after(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__NameEndAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_0_4_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__ExtendsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getExtendsExtendClauseParserRuleCall_1_0_0()); }
		ruleExtendClause
		{ after(grammarAccess.getLongClassSpecifierAccess().getExtendsExtendClauseParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__ClassModificationAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_1_2_0()); }
		ruleClassModification
		{ after(grammarAccess.getLongClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__SringCommentAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_1_3_0()); }
		ruleStringComment
		{ after(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__CompositionAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_1_4_0()); }
		ruleComposition
		{ after(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongClassSpecifier__NameEndAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_1_6_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__BasePrefixAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getBasePrefixBasePrefixParserRuleCall_0_2_0()); }
		ruleBasePrefix
		{ after(grammarAccess.getShortClassSpecifierAccess().getBasePrefixBasePrefixParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__InstanceNameAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getInstanceNameNameParserRuleCall_0_3_0()); }
		ruleName
		{ after(grammarAccess.getShortClassSpecifierAccess().getInstanceNameNameParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__ArraySubscriptsAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getArraySubscriptsArraySubscriptsParserRuleCall_0_4_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getShortClassSpecifierAccess().getArraySubscriptsArraySubscriptsParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__ClassModificationAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_0_5_0()); }
		ruleClassModification
		{ after(grammarAccess.getShortClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__CommentAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_0_6_0()); }
		ruleComment
		{ after(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__EnumListAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getEnumListEnumListParserRuleCall_1_4_0_0()); }
		ruleEnumList
		{ after(grammarAccess.getShortClassSpecifierAccess().getEnumListEnumListParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassSpecifier__CommentAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_1_6_0()); }
		ruleComment
		{ after(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerClassSpecifierAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getDerClassSpecifierAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerClassSpecifierAccess().getNameNameParserRuleCall_4_0()); }
		ruleName
		{ after(grammarAccess.getDerClassSpecifierAccess().getNameNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerClassSpecifier__CommentAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerClassSpecifierAccess().getCommentCommentParserRuleCall_9_0()); }
		ruleComment
		{ after(grammarAccess.getDerClassSpecifierAccess().getCommentCommentParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__EnumerationLiteralAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_0_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__EnumerationLiteralAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_1_1_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ElementListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getElementListElementListParserRuleCall_0_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getElementListElementListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ElementListPublicAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getElementListPublicElementListParserRuleCall_1_0_1_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getElementListPublicElementListParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ElementListProtectedAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getElementListProtectedElementListParserRuleCall_1_1_1_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getElementListProtectedElementListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__EquationSectionsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getEquationSectionsEquationSectionParserRuleCall_1_2_0()); }
		ruleEquationSection
		{ after(grammarAccess.getCompositionAccess().getEquationSectionsEquationSectionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__AlgorithmSectionsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAlgorithmSectionsAlgorithmSectionParserRuleCall_1_3_0()); }
		ruleAlgorithmSection
		{ after(grammarAccess.getCompositionAccess().getAlgorithmSectionsAlgorithmSectionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__LanguageSpecificationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getLanguageSpecificationLanguageSpecificationParserRuleCall_2_1_0()); }
		ruleLanguageSpecification
		{ after(grammarAccess.getCompositionAccess().getLanguageSpecificationLanguageSpecificationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__AnnotationAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAnnotationAnnotationParserRuleCall_3_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCompositionAccess().getAnnotationAnnotationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_0_0()); }
		ruleElement
		{ after(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ImportClauseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getImportClauseImportClauseParserRuleCall_0_0()); }
		ruleImportClause
		{ after(grammarAccess.getElementAccess().getImportClauseImportClauseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExtendClauseAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExtendClauseExtendClauseParserRuleCall_1_0()); }
		ruleExtendClause
		{ after(grammarAccess.getElementAccess().getExtendClauseExtendClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__RedeclareAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getRedeclareRedeclareKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getElementAccess().getRedeclareRedeclareKeyword_2_0_0()); }
			'redeclare'
			{ after(grammarAccess.getElementAccess().getRedeclareRedeclareKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getElementAccess().getRedeclareRedeclareKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__FinalAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getFinalFinalKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getFinalFinalKeyword_2_1_0()); }
			'final'
			{ after(grammarAccess.getElementAccess().getFinalFinalKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getElementAccess().getFinalFinalKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__InnerAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getInnerInnerKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getElementAccess().getInnerInnerKeyword_2_2_0()); }
			'inner'
			{ after(grammarAccess.getElementAccess().getInnerInnerKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getElementAccess().getInnerInnerKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__OuterAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getOuterOuterKeyword_2_3_0()); }
		(
			{ before(grammarAccess.getElementAccess().getOuterOuterKeyword_2_3_0()); }
			'outer'
			{ after(grammarAccess.getElementAccess().getOuterOuterKeyword_2_3_0()); }
		)
		{ after(grammarAccess.getElementAccess().getOuterOuterKeyword_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ClassAssignment_2_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getClassClassDefinitionParserRuleCall_2_5_0_0()); }
		ruleClassDefinition
		{ after(grammarAccess.getElementAccess().getClassClassDefinitionParserRuleCall_2_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__CompAssignment_2_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getCompComponentClauseParserRuleCall_2_5_1_0()); }
		ruleComponentClause
		{ after(grammarAccess.getElementAccess().getCompComponentClauseParserRuleCall_2_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__CcAssignment_2_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getCcConstrainingClauseParserRuleCall_2_6_0_0()); }
		ruleConstrainingClause
		{ after(grammarAccess.getElementAccess().getCcConstrainingClauseParserRuleCall_2_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__CommentAssignment_2_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getCommentCommentParserRuleCall_2_6_1_0()); }
		ruleComment
		{ after(grammarAccess.getElementAccess().getCommentCommentParserRuleCall_2_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__IdAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__NameAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
		ruleName
		{ after(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__NameAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_1_0_0()); }
		ruleName
		{ after(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ImportListAssignment_1_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getImportListImportListParserRuleCall_1_1_1_1_1_1_0()); }
		ruleImportList
		{ after(grammarAccess.getImportClauseAccess().getImportListImportListParserRuleCall_1_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0()); }
		ruleComment
		{ after(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendClauseAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getExtendClauseAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__ClassModificationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendClauseAccess().getClassModificationClassModificationParserRuleCall_2_0()); }
		ruleClassModification
		{ after(grammarAccess.getExtendClauseAccess().getClassModificationClassModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendClause__AnnotationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendClauseAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getExtendClauseAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__ClassModificationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getClassModificationClassModificationParserRuleCall_2_0()); }
		ruleClassModification
		{ after(grammarAccess.getConstrainingClauseAccess().getClassModificationClassModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ClassModificationAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getClassModificationClassModificationParserRuleCall_0_0_0()); }
		ruleClassModification
		{ after(grammarAccess.getModificationAccess().getClassModificationClassModificationParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExpressionAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__ArgumentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassModificationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getClassModificationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__ArgumentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_0_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__ArgumentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__EachAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getEachEachKeyword_0_0()); }
		(
			{ before(grammarAccess.getElementModificationOrReplaceableAccess().getEachEachKeyword_0_0()); }
			'each'
			{ after(grammarAccess.getElementModificationOrReplaceableAccess().getEachEachKeyword_0_0()); }
		)
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getEachEachKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__FinalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getFinalFinalKeyword_1_0()); }
		(
			{ before(grammarAccess.getElementModificationOrReplaceableAccess().getFinalFinalKeyword_1_0()); }
			'final'
			{ after(grammarAccess.getElementModificationOrReplaceableAccess().getFinalFinalKeyword_1_0()); }
		)
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getFinalFinalKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__ElementModOrRepAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementModificationParserRuleCall_2_0_0()); }
		ruleElementModification
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementModificationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModificationOrReplaceable__ElementModOrRepAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementReplaceableParserRuleCall_2_1_0()); }
		ruleElementReplaceable
		{ after(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementReplaceableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__ModificationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getModificationModificationParserRuleCall_1_0()); }
		ruleModification
		{ after(grammarAccess.getElementModificationAccess().getModificationModificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__StringCommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getStringCommentStringCommentParserRuleCall_2_0()); }
		ruleStringComment
		{ after(grammarAccess.getElementModificationAccess().getStringCommentStringCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__RedeclareAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getRedeclareRedeclareKeyword_0_0()); }
		(
			{ before(grammarAccess.getElementRedeclarationAccess().getRedeclareRedeclareKeyword_0_0()); }
			'redeclare'
			{ after(grammarAccess.getElementRedeclarationAccess().getRedeclareRedeclareKeyword_0_0()); }
		)
		{ after(grammarAccess.getElementRedeclarationAccess().getRedeclareRedeclareKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__EachAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getEachEachKeyword_1_0()); }
		(
			{ before(grammarAccess.getElementRedeclarationAccess().getEachEachKeyword_1_0()); }
			'each'
			{ after(grammarAccess.getElementRedeclarationAccess().getEachEachKeyword_1_0()); }
		)
		{ after(grammarAccess.getElementRedeclarationAccess().getEachEachKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__FinalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getFinalFinalKeyword_2_0()); }
		(
			{ before(grammarAccess.getElementRedeclarationAccess().getFinalFinalKeyword_2_0()); }
			'final'
			{ after(grammarAccess.getElementRedeclarationAccess().getFinalFinalKeyword_2_0()); }
		)
		{ after(grammarAccess.getElementRedeclarationAccess().getFinalFinalKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__ClassDefinitionAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getClassDefinitionShortClassDefinitionParserRuleCall_3_0_0_0()); }
		ruleShortClassDefinition
		{ after(grammarAccess.getElementRedeclarationAccess().getClassDefinitionShortClassDefinitionParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__ComponentClauseAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getComponentClauseComponentClause1ParserRuleCall_3_0_1_0()); }
		ruleComponentClause1
		{ after(grammarAccess.getElementRedeclarationAccess().getComponentClauseComponentClause1ParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__ElementAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getElementElementReplaceableParserRuleCall_3_1_0()); }
		ruleElementReplaceable
		{ after(grammarAccess.getElementRedeclarationAccess().getElementElementReplaceableParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__ReplaceableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getReplaceableReplaceableKeyword_0_0()); }
		(
			{ before(grammarAccess.getElementReplaceableAccess().getReplaceableReplaceableKeyword_0_0()); }
			'replaceable'
			{ after(grammarAccess.getElementReplaceableAccess().getReplaceableReplaceableKeyword_0_0()); }
		)
		{ after(grammarAccess.getElementReplaceableAccess().getReplaceableReplaceableKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__ElementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getElementShortClassDefinitionParserRuleCall_1_0_0()); }
		ruleShortClassDefinition
		{ after(grammarAccess.getElementReplaceableAccess().getElementShortClassDefinitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__ElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getElementComponentClause1ParserRuleCall_1_1_0()); }
		ruleComponentClause1
		{ after(grammarAccess.getElementReplaceableAccess().getElementComponentClause1ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__ConstraintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getConstraintConstrainingClauseParserRuleCall_2_0()); }
		ruleConstrainingClause
		{ after(grammarAccess.getElementReplaceableAccess().getConstraintConstrainingClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__TypePrefixAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getTypePrefixTypePrefixParserRuleCall_0_0()); }
		ruleTypePrefix
		{ after(grammarAccess.getComponentClause1Access().getTypePrefixTypePrefixParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__TypeSpecifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getTypeSpecifierTypeSpecifierParserRuleCall_1_0()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getComponentClause1Access().getTypeSpecifierTypeSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__ComponentDeclarationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getComponentDeclarationComponentDeclaration1ParserRuleCall_2_0()); }
		ruleComponentDeclaration1
		{ after(grammarAccess.getComponentClause1Access().getComponentDeclarationComponentDeclaration1ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__ClassPrefixesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_0_0()); }
		ruleClassPrefixes
		{ after(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__ClassSpecifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getClassSpecifierShortClassSpecifierParserRuleCall_1_0()); }
		ruleShortClassSpecifier
		{ after(grammarAccess.getShortClassDefinitionAccess().getClassSpecifierShortClassSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__TypePrefixAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getTypePrefixTypePrefixParserRuleCall_0_0()); }
		ruleTypePrefix
		{ after(grammarAccess.getComponentClauseAccess().getTypePrefixTypePrefixParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__TypeSpecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getTypeSpecTypeSpecifierParserRuleCall_1_0()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getComponentClauseAccess().getTypeSpecTypeSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__ArraySubscriptsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getArraySubscriptsArraySubscriptsParserRuleCall_2_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getComponentClauseAccess().getArraySubscriptsArraySubscriptsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__ComponentListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getComponentListComponentListParserRuleCall_3_0()); }
		ruleComponentList
		{ after(grammarAccess.getComponentClauseAccess().getComponentListComponentListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__FlowAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getFlowFlowKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getFlowFlowKeyword_1_0_0()); }
			'flow'
			{ after(grammarAccess.getTypePrefixAccess().getFlowFlowKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getFlowFlowKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__StreamAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getStreamStreamKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getStreamStreamKeyword_1_1_0()); }
			'stream'
			{ after(grammarAccess.getTypePrefixAccess().getStreamStreamKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getStreamStreamKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__ConstantAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getConstantConstantKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getConstantConstantKeyword_2_0_0()); }
			'constant'
			{ after(grammarAccess.getTypePrefixAccess().getConstantConstantKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getConstantConstantKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__ParameterAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getParameterParameterKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getParameterParameterKeyword_2_1_0()); }
			'parameter'
			{ after(grammarAccess.getTypePrefixAccess().getParameterParameterKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getParameterParameterKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__DiscreteAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getDiscreteDiscreteKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getDiscreteDiscreteKeyword_2_2_0()); }
			'discrete'
			{ after(grammarAccess.getTypePrefixAccess().getDiscreteDiscreteKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getDiscreteDiscreteKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__InputAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getInputInputKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getInputInputKeyword_3_0_0()); }
			'input'
			{ after(grammarAccess.getTypePrefixAccess().getInputInputKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getInputInputKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__OutputAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getOutputOutputKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getTypePrefixAccess().getOutputOutputKeyword_3_1_0()); }
			'output'
			{ after(grammarAccess.getTypePrefixAccess().getOutputOutputKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getTypePrefixAccess().getOutputOutputKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getNameNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getTypeSpecifierAccess().getNameNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__ComponentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_0_0()); }
		ruleComponentDeclaration
		{ after(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__ComponentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_1_1_0()); }
		ruleComponentDeclaration
		{ after(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getComponentDeclarationAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__ConditionAttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getConditionAttributeConditionAttributeParserRuleCall_1_0()); }
		ruleConditionAttribute
		{ after(grammarAccess.getComponentDeclarationAccess().getConditionAttributeConditionAttributeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getCommentStringCommentParserRuleCall_2_0()); }
		ruleStringComment
		{ after(grammarAccess.getComponentDeclarationAccess().getCommentStringCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__AnnotationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getComponentDeclarationAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAttributeAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAttributeAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ArraySubscriptsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getArraySubscriptsArraySubscriptsParserRuleCall_1_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getDeclarationAccess().getArraySubscriptsArraySubscriptsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ModificationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getModificationModificationParserRuleCall_2_0()); }
		ruleModification
		{ after(grammarAccess.getDeclarationAccess().getModificationModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__InitialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
		(
			{ before(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
			'initial'
			{ after(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
		)
		{ after(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__EquationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationSectionAccess().getEquationEquationKeyword_1_0()); }
		(
			{ before(grammarAccess.getEquationSectionAccess().getEquationEquationKeyword_1_0()); }
			'equation'
			{ after(grammarAccess.getEquationSectionAccess().getEquationEquationKeyword_1_0()); }
		)
		{ after(grammarAccess.getEquationSectionAccess().getEquationEquationKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__EquationsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__InitialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
		(
			{ before(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
			'initial'
			{ after(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
		)
		{ after(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__AlgorithmAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAlgorithmKeyword_1_0()); }
		(
			{ before(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAlgorithmKeyword_1_0()); }
			'algorithm'
			{ after(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAlgorithmKeyword_1_0()); }
		)
		{ after(grammarAccess.getAlgorithmSectionAccess().getAlgorithmAlgorithmKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__StatementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__EquationAssignment_0_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getEquationExpressionParserRuleCall_0_0_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationAccess().getEquationExpressionParserRuleCall_0_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__CommAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getCommCommentParserRuleCall_0_1_0()); }
		ruleComment
		{ after(grammarAccess.getEquationAccess().getCommCommentParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ConnectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getConnectionConnectClauseParserRuleCall_1_0()); }
		ruleConnectClause
		{ after(grammarAccess.getEquationAccess().getConnectionConnectClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ComponentAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_0_0_0()); }
		ruleComponentReference
		{ after(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionAssignment_0_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FcaAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_0_1_1_0()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getExpressionOutputExpressionListParserRuleCall_0_1_1_0()); }
		ruleOutputExpressionList
		{ after(grammarAccess.getStatementAccess().getExpressionOutputExpressionListParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ComponentAssignment_0_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_1_4_0()); }
		ruleComponentReference
		{ after(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FcaAssignment_0_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_1_5_0()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CommAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCommCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getStatementAccess().getCommCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__IfExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationIfAccess().getIfExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationIfAccess().getIfExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__IfEqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationIfAccess().getIfEqsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationIfAccess().getIfEqsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__ElseifExpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationIfAccess().getElseifExpExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationIfAccess().getElseifExpExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__ElseIfEqsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationIfAccess().getElseIfEqsEquationParserRuleCall_4_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationIfAccess().getElseIfEqsEquationParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationIf__ElseEqsAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationIfAccess().getElseEqsEquationParserRuleCall_5_1_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationIfAccess().getElseEqsEquationParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__IfExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementIfAccess().getIfExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementIfAccess().getIfExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__IfEqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementIfAccess().getIfEqsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementIfAccess().getIfEqsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__ElseifExpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementIfAccess().getElseifExpExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementIfAccess().getElseifExpExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__ElseIfEqsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementIfAccess().getElseIfEqsStatementParserRuleCall_4_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementIfAccess().getElseIfEqsStatementParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementIf__ElseEqsAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementIfAccess().getElseEqsStatementParserRuleCall_5_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementIfAccess().getElseEqsStatementParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__IteratorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationForAccess().getIteratorsForIndicesParserRuleCall_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getEquationForAccess().getIteratorsForIndicesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationFor__ForEqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationForAccess().getForEqsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationForAccess().getForEqsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__IteratorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementForAccess().getIteratorsForIndicesParserRuleCall_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getStatementForAccess().getIteratorsForIndicesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementFor__ForEqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementForAccess().getForEqsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementForAccess().getForEqsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__ForIndexAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_0_0()); }
		ruleForIndex
		{ after(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__ForIndexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_1_1_0()); }
		ruleForIndex
		{ after(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getForIndexAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__BoolExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhileAccess().getBoolExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementWhileAccess().getBoolExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhile__StatAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhileAccess().getStatStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementWhileAccess().getStatStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__WhenExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationWhenAccess().getWhenExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationWhenAccess().getWhenExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__WhenEquationsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationWhenAccess().getWhenEquationsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationWhenAccess().getWhenEquationsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__ExpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationWhenAccess().getExpExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationWhenAccess().getExpExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationWhen__EquationItemAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationWhenAccess().getEquationItemEquationParserRuleCall_4_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationWhenAccess().getEquationItemEquationParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__WhenExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhenAccess().getWhenExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementWhenAccess().getWhenExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__WhenEquationsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhenAccess().getWhenEquationsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementWhenAccess().getWhenEquationsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__ExpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhenAccess().getExpExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementWhenAccess().getExpExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementWhen__EquationItemAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementWhenAccess().getEquationItemStatementParserRuleCall_4_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementWhenAccess().getEquationItemStatementParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Node1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectClauseAccess().getNode1ComponentReferenceParserRuleCall_2_0()); }
		ruleComponentReference
		{ after(grammarAccess.getConnectClauseAccess().getNode1ComponentReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Node2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectClauseAccess().getNode2ComponentReferenceParserRuleCall_4_0()); }
		ruleComponentReference
		{ after(grammarAccess.getConnectClauseAccess().getNode2ComponentReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__AnnotationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectClauseAccess().getAnnotationAnnotationParserRuleCall_6_0()); }
		ruleAnnotation
		{ after(grammarAccess.getConnectClauseAccess().getAnnotationAnnotationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThenAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseifAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseifthenAssignment_1_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getStartLogicalExpressionParserRuleCall_0_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getStartLogicalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__StepAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getStepLogicalExpressionParserRuleCall_1_1_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getStepLogicalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__StopAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getStopLogicalExpressionParserRuleCall_1_2_1_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getStopLogicalExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRightLogicalTermParserRuleCall_1_2_0()); }
		ruleLogicalTerm
		{ after(grammarAccess.getLogicalExpressionAccess().getRightLogicalTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalTermAccess().getRightLogicalFactorParserRuleCall_1_2_0()); }
		ruleLogicalFactor
		{ after(grammarAccess.getLogicalTermAccess().getRightLogicalFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getRightArithmeticExpression2ParserRuleCall_1_2_0()); }
		ruleArithmeticExpression2
		{ after(grammarAccess.getArithmeticExpressionAccess().getRightArithmeticExpression2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression2__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpression2Access().getRightArithmeticExpression2ParserRuleCall_1_2_0()); }
		ruleArithmeticExpression2
		{ after(grammarAccess.getArithmeticExpression2Access().getRightArithmeticExpression2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpressionUnary__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionUnaryAccess().getExpTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getArithmeticExpressionUnaryAccess().getExpTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NameAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNameNameParserRuleCall_5_1_0_0()); }
		ruleName
		{ after(grammarAccess.getPrimaryAccess().getNameNameParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__FcaAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getFcaFunctionCallArgsParserRuleCall_5_2_0()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getPrimaryAccess().getFcaFunctionCallArgsParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ListAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_1_0()); }
		ruleExprExpressionList
		{ after(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ListAssignment_8_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_2_1_0()); }
		ruleExprExpressionList
		{ after(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__FaAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getFaFunctionArgumentsParserRuleCall_9_1_0()); }
		ruleFunctionArguments
		{ after(grammarAccess.getPrimaryAccess().getFaFunctionArgumentsParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__IdAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIdIDENTTerminalRuleCall_3_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNameAccess().getIdIDENTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__SubsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_3_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__IdAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getIdIDENTTerminalRuleCall_4_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getComponentReferenceAccess().getIdIDENTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__SubsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_4_2_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__FunctionArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgsAccess().getFunctionArgsFunctionArgumentsParserRuleCall_2_0()); }
		ruleFunctionArguments
		{ after(grammarAccess.getFunctionCallArgsAccess().getFunctionArgsFunctionArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__FunctionArgumentAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getFunctionArgumentFunctionArgumentParserRuleCall_0_0_0()); }
		ruleFunctionArgument
		{ after(grammarAccess.getFunctionArgumentsAccess().getFunctionArgumentFunctionArgumentParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__ArgsAssignment_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0()); }
		ruleFunctionArguments
		{ after(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__ForIndicesAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getForIndicesForIndicesParserRuleCall_0_1_1_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getFunctionArgumentsAccess().getForIndicesForIndicesParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__NamedArgumentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_0()); }
		ruleNamedArguments
		{ after(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__NamedArgumentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getNamedArgumentNamedArgumentParserRuleCall_0_0()); }
		ruleNamedArgument
		{ after(grammarAccess.getNamedArgumentsAccess().getNamedArgumentNamedArgumentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__NamedArgumentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_1_0()); }
		ruleNamedArguments
		{ after(grammarAccess.getNamedArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNamedArgumentAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__FunctionArgumentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getFunctionArgumentFunctionArgumentParserRuleCall_2_0()); }
		ruleFunctionArgument
		{ after(grammarAccess.getNamedArgumentAccess().getFunctionArgumentFunctionArgumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getNameNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getFunctionArgumentAccess().getNameNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__NamedArgumentsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getNamedArgumentsNamedArgumentsParserRuleCall_0_3_0()); }
		ruleNamedArguments
		{ after(grammarAccess.getFunctionArgumentAccess().getNamedArgumentsNamedArgumentsParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionArgumentAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__ExpressionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__ExpressionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprExpressionList__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__SubscriptsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0()); }
		ruleSubscript
		{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__SubscriptsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0()); }
		ruleSubscript
		{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__StringCommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getStringCommentStringCommentParserRuleCall_0_0()); }
		ruleStringComment
		{ after(grammarAccess.getCommentAccess().getStringCommentStringCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__AnnotationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__StrAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringCommentAccess().getStrSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringCommentAccess().getStrSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssertAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__MessageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getMessageExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getAssertAccess().getMessageExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__LevelAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getLevelAssertionLevelEnumRuleCall_5_2_0()); }
		ruleAssertionLevel
		{ after(grammarAccess.getAssertAccess().getLevelAssertionLevelEnumRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_2_0()); }
		ruleAnnotationArg
		{ after(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_3_1_0()); }
		ruleAnnotationArg
		{ after(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefComponentName__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefComponentNameAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDefComponentNameAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getValuesAlternatives_4_0()); }
		(rule__Choices__ValuesAlternatives_4_0)
		{ after(grammarAccess.getChoicesAccess().getValuesAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__TypesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_5_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choices__ValuesAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoicesAccess().getValuesAlternatives_5_3_0()); }
		(rule__Choices__ValuesAlternatives_5_3_0)
		{ after(grammarAccess.getChoicesAccess().getValuesAlternatives_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__FlagAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationCodeAccess().getFlagCodeGenerationFlagParserRuleCall_0_0()); }
		ruleCodeGenerationFlag
		{ after(grammarAccess.getAnnotationCodeAccess().getFlagCodeGenerationFlagParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationCode__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationCodeAccess().getValueAlternatives_2_0()); }
		(rule__AnnotationCode__ValueAlternatives_2_0)
		{ after(grammarAccess.getAnnotationCodeAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__CoordinateSystemAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerIconAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_2_0_0()); }
		ruleCoordinateSpecification
		{ after(grammarAccess.getLayerIconAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerIcon__GraphicsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerIconAccess().getGraphicsGraphicsParserRuleCall_3_0()); }
		ruleGraphics
		{ after(grammarAccess.getLayerIconAccess().getGraphicsGraphicsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__CoordinateSystemAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerDiagramAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_3_0()); }
		ruleCoordinateSpecification
		{ after(grammarAccess.getLayerDiagramAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerDiagram__GraphicsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerDiagramAccess().getGraphicsGraphicsParserRuleCall_4_1_0()); }
		ruleGraphics
		{ after(grammarAccess.getLayerDiagramAccess().getGraphicsGraphicsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_2_0()); }
		ruleCoordinateSpecificationArgs
		{ after(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinateSpecification__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_3_1_0()); }
		ruleCoordinateSpecificationArgs
		{ after(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__P1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtentAccess().getP1PointParserRuleCall_3_0()); }
		rulePoint
		{ after(grammarAccess.getExtentAccess().getP1PointParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extent__P2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtentAccess().getP2PointParserRuleCall_5_0()); }
		rulePoint
		{ after(grammarAccess.getExtentAccess().getP2PointParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreserveAR__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreserveARAccess().getValueAlternatives_2_0()); }
		(rule__PreserveAR__ValueAlternatives_2_0)
		{ after(grammarAccess.getPreserveARAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialScale__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialScaleAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getInitialScaleAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGridAccess().getValuePointParserRuleCall_2_0()); }
		rulePoint
		{ after(grammarAccess.getGridAccess().getValuePointParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlacementAccess().getNamePlacementKeyword_0_0()); }
		(
			{ before(grammarAccess.getPlacementAccess().getNamePlacementKeyword_0_0()); }
			'Placement'
			{ after(grammarAccess.getPlacementAccess().getNamePlacementKeyword_0_0()); }
		)
		{ after(grammarAccess.getPlacementAccess().getNamePlacementKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_2_0()); }
		rulePlacementArg
		{ after(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Placement__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_3_1_0()); }
		rulePlacementArg
		{ after(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visible__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibleAccess().getValueAlternatives_2_0()); }
		(rule__Visible__ValueAlternatives_2_0)
		{ after(grammarAccess.getVisibleAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getNameAlternatives_0_0()); }
		(rule__Transformation__NameAlternatives_0_0)
		{ after(grammarAccess.getTransformationAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_2_0()); }
		ruleTransformationArg
		{ after(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_3_1_0()); }
		ruleTransformationArg
		{ after(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotationAccess().getNameRotationKeyword_0_0()); }
		(
			{ before(grammarAccess.getRotationAccess().getNameRotationKeyword_0_0()); }
			'rotation'
			{ after(grammarAccess.getRotationAccess().getNameRotationKeyword_0_0()); }
		)
		{ after(grammarAccess.getRotationAccess().getNameRotationKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotation__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotationAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRotationAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getPointPointParserRuleCall_2_0()); }
		rulePoint
		{ after(grammarAccess.getOriginAccess().getPointPointParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getXNumParserRuleCall_1_0()); }
		rulenum
		{ after(grammarAccess.getPointAccess().getXNumParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getYNumParserRuleCall_3_0()); }
		rulenum
		{ after(grammarAccess.getPointAccess().getYNumParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Smooth__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmoothAccess().getValueSmoothEnumEnumRuleCall_2_0()); }
		ruleSmoothEnum
		{ after(grammarAccess.getSmoothAccess().getValueSmoothEnumEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRUNSIGNED_INTEGERTerminalRuleCall_3_0()); }
		RULE_UNSIGNED_INTEGER
		{ after(grammarAccess.getColorAccess().getRUNSIGNED_INTEGERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGUNSIGNED_INTEGERTerminalRuleCall_5_0()); }
		RULE_UNSIGNED_INTEGER
		{ after(grammarAccess.getColorAccess().getGUNSIGNED_INTEGERTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBUNSIGNED_INTEGERTerminalRuleCall_7_0()); }
		RULE_UNSIGNED_INTEGER
		{ after(grammarAccess.getColorAccess().getBUNSIGNED_INTEGERTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Thickness__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThicknessAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getThicknessAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__PrimitiveAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_3_0()); }
		ruleGraphicalPrimitive
		{ after(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphics__PrimitiveAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_4_1_0()); }
		ruleGraphicalPrimitive
		{ after(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getNameLineKeyword_0_0()); }
		(
			{ before(grammarAccess.getLineAccess().getNameLineKeyword_0_0()); }
			'Line'
			{ after(grammarAccess.getLineAccess().getNameLineKeyword_0_0()); }
		)
		{ after(grammarAccess.getLineAccess().getNameLineKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
		(
			{ before(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
			'Polygon'
			{ after(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
		)
		{ after(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getNameRectangleKeyword_0_0()); }
		(
			{ before(grammarAccess.getRectangleAccess().getNameRectangleKeyword_0_0()); }
			'Rectangle'
			{ after(grammarAccess.getRectangleAccess().getNameRectangleKeyword_0_0()); }
		)
		{ after(grammarAccess.getRectangleAccess().getNameRectangleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEllipseAccess().getNameEllipseKeyword_0_0()); }
		(
			{ before(grammarAccess.getEllipseAccess().getNameEllipseKeyword_0_0()); }
			'Ellipse'
			{ after(grammarAccess.getEllipseAccess().getNameEllipseKeyword_0_0()); }
		)
		{ after(grammarAccess.getEllipseAccess().getNameEllipseKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		(
			{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
			'Text'
			{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		)
		{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitmapAccess().getNameBitmapKeyword_0_0()); }
		(
			{ before(grammarAccess.getBitmapAccess().getNameBitmapKeyword_0_0()); }
			'Bitmap'
			{ after(grammarAccess.getBitmapAccess().getNameBitmapKeyword_0_0()); }
		)
		{ after(grammarAccess.getBitmapAccess().getNameBitmapKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitmap__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
		ruleGraphicalPrimitiveArgs
		{ after(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__PointsAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_3_0()); }
		rulePoint
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__PointsAssignment_7_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_4_1_0()); }
		rulePoint
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__StrAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getStrSTRINGTerminalRuleCall_8_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getStrSTRINGTerminalRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__FileNameAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameSTRINGTerminalRuleCall_9_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameSTRINGTerminalRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__ImageSourceAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceSTRINGTerminalRuleCall_10_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceSTRINGTerminalRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalPrimitiveArgs__FillPatternAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternFillPatternEnumRuleCall_11_2_0()); }
		ruleFillPattern
		{ after(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternFillPatternEnumRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDialogAccess().getNameDialogKeyword_0_0()); }
		(
			{ before(grammarAccess.getDialogAccess().getNameDialogKeyword_0_0()); }
			'Dialog'
			{ after(grammarAccess.getDialogAccess().getNameDialogKeyword_0_0()); }
		)
		{ after(grammarAccess.getDialogAccess().getNameDialogKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_2_0()); }
		ruleDialogArg
		{ after(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dialog__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_3_1_0()); }
		ruleDialogArg
		{ after(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_4_0()); }
		ruleComponentReference
		{ after(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enable__ValueAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_5_3_0()); }
		ruleComponentReference
		{ after(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGroupAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tab__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTabAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTabAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationDocumentationAccess().getValueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getAnnotationDocumentationAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDocumentation__RevAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationDocumentationAccess().getRevSTRINGTerminalRuleCall_5_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getAnnotationDocumentationAccess().getRevSTRINGTerminalRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__OptionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_0_0()); }
		ruleExperimentOption
		{ after(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationExperiment__OptionsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_1_1_0()); }
		ruleExperimentOption
		{ after(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__StartAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getStartUNSIGNED_NUMBERTerminalRuleCall_0_3_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getExperimentOptionAccess().getStartUNSIGNED_NUMBERTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__StopAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getStopUNSIGNED_NUMBERTerminalRuleCall_1_3_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getExperimentOptionAccess().getStopUNSIGNED_NUMBERTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__StepAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getStepUNSIGNED_NUMBERTerminalRuleCall_2_2_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getExperimentOptionAccess().getStepUNSIGNED_NUMBERTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentOption__TolAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentOptionAccess().getTolUNSIGNED_NUMBERTerminalRuleCall_3_2_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getExperimentOptionAccess().getTolUNSIGNED_NUMBERTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IDENT : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_S_ESCAPE : (' '|'\b'|'\t'|'\n'|'\f'|'\r'|'"'|'\''|'\\');

RULE_UNSIGNED_INTEGER : ('0'..'9')+;

RULE_UNSIGNED_NUMBER : ('+'|'-')? RULE_UNSIGNED_INTEGER ('.' RULE_UNSIGNED_INTEGER?)? (('E'|'e') ('+'|'-')? RULE_UNSIGNED_INTEGER)?;

RULE_ANY_OTHER : .;
