/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
grammar InternalModelicaMo;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package sc.modelica.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package sc.modelica.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import sc.modelica.xtext.services.ModelicaMoGrammarAccess;

}

@parser::members {

 	private ModelicaMoGrammarAccess grammarAccess;

    public InternalModelicaMoParser(TokenStream input, ModelicaMoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected ModelicaMoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProgramAccess().getProgramAction_0(),
					$current);
			}
		)
		(
			otherlv_1='within'
			{
				newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getWithinKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getNameNameParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"sc.modelica.xtext.ModelicaMo.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getProgramAccess().getSemicolonKeyword_1_2());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getClassesClassDefinitionParserRuleCall_2_0_0());
					}
					lv_classes_4_0=ruleClassDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"classes",
							lv_classes_4_0,
							"sc.modelica.xtext.ModelicaMo.ClassDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getProgramAccess().getSemicolonKeyword_2_1());
			}
		)*
	)
;

// Entry rule entryRuleClassDefinition
entryRuleClassDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDefinitionRule()); }
	iv_ruleClassDefinition=ruleClassDefinition
	{ $current=$iv_ruleClassDefinition.current; }
	EOF;

// Rule ClassDefinition
ruleClassDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_encapsulated_0_0='encapsulated'
				{
					newLeafNode(lv_encapsulated_0_0, grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDefinitionRule());
					}
					setWithLastConsumed($current, "encapsulated", true, "encapsulated");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_1_0());
				}
				lv_classPrefixes_1_0=ruleClassPrefixes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDefinitionRule());
					}
					set(
						$current,
						"classPrefixes",
						lv_classPrefixes_1_0,
						"sc.modelica.xtext.ModelicaMo.ClassPrefixes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassSpecifierClassSpecifierParserRuleCall_2_0());
				}
				lv_classSpecifier_2_0=ruleClassSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDefinitionRule());
					}
					set(
						$current,
						"classSpecifier",
						lv_classSpecifier_2_0,
						"sc.modelica.xtext.ModelicaMo.ClassSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassPrefixes
entryRuleClassPrefixes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassPrefixesRule()); }
	iv_ruleClassPrefixes=ruleClassPrefixes
	{ $current=$iv_ruleClassPrefixes.current; }
	EOF;

// Rule ClassPrefixes
ruleClassPrefixes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_partial_0_0='partial'
				{
					newLeafNode(lv_partial_0_0, grammarAccess.getClassPrefixesAccess().getPartialPartialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassPrefixesRule());
					}
					setWithLastConsumed($current, "partial", true, "partial");
				}
			)
		)?
		(
			(
				(
					lv_class_1_0='class'
					{
						newLeafNode(lv_class_1_0, grammarAccess.getClassPrefixesAccess().getClassClassKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "class", true, "class");
					}
				)
			)
			    |
			(
				(
					lv_model_2_0='model'
					{
						newLeafNode(lv_model_2_0, grammarAccess.getClassPrefixesAccess().getModelModelKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "model", true, "model");
					}
				)
			)
			    |
			(
				(
					(
						lv_operator_3_0='operator'
						{
							newLeafNode(lv_operator_3_0, grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "operator", true, "operator");
						}
					)
				)?
				(
					(
						lv_record_4_0='record'
						{
							newLeafNode(lv_record_4_0, grammarAccess.getClassPrefixesAccess().getRecordRecordKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "record", true, "record");
						}
					)
				)
			)
			    |
			(
				(
					lv_block_5_0='block'
					{
						newLeafNode(lv_block_5_0, grammarAccess.getClassPrefixesAccess().getBlockBlockKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "block", true, "block");
					}
				)
			)
			    |
			(
				(
					(
						lv_expandable_6_0='expandable'
						{
							newLeafNode(lv_expandable_6_0, grammarAccess.getClassPrefixesAccess().getExpandableExpandableKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "expandable", true, "expandable");
						}
					)
				)?
				(
					(
						lv_connector_7_0='connector'
						{
							newLeafNode(lv_connector_7_0, grammarAccess.getClassPrefixesAccess().getConnectorConnectorKeyword_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "connector", true, "connector");
						}
					)
				)
			)
			    |
			(
				(
					lv_type_8_0='type'
					{
						newLeafNode(lv_type_8_0, grammarAccess.getClassPrefixesAccess().getTypeTypeKeyword_1_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "type", true, "type");
					}
				)
			)
			    |
			(
				(
					lv_package_9_0='package'
					{
						newLeafNode(lv_package_9_0, grammarAccess.getClassPrefixesAccess().getPackagePackageKeyword_1_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "package", true, "package");
					}
				)
			)
			    |
			(
				(
					(
						(
							lv_pure_10_0='pure'
							{
								newLeafNode(lv_pure_10_0, grammarAccess.getClassPrefixesAccess().getPurePureKeyword_1_7_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getClassPrefixesRule());
								}
								setWithLastConsumed($current, "pure", true, "pure");
							}
						)
					)
					    |
					otherlv_11='impure'
					{
						newLeafNode(otherlv_11, grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1());
					}
				)?
				(
					(
						lv_operator_12_0='operator'
						{
							newLeafNode(lv_operator_12_0, grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_7_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "operator", true, "operator");
						}
					)
				)?
				(
					(
						lv_function_13_0='function'
						{
							newLeafNode(lv_function_13_0, grammarAccess.getClassPrefixesAccess().getFunctionFunctionKeyword_1_7_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassPrefixesRule());
							}
							setWithLastConsumed($current, "function", true, "function");
						}
					)
				)
			)
			    |
			(
				(
					lv_operator_14_0='operator'
					{
						newLeafNode(lv_operator_14_0, grammarAccess.getClassPrefixesAccess().getOperatorOperatorKeyword_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassPrefixesRule());
						}
						setWithLastConsumed($current, "operator", true, "operator");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleClassSpecifier
entryRuleClassSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassSpecifierRule()); }
	iv_ruleClassSpecifier=ruleClassSpecifier
	{ $current=$iv_ruleClassSpecifier.current; }
	EOF;

// Rule ClassSpecifier
ruleClassSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassSpecifierAccess().getLongClassSpecifierParserRuleCall_0());
		}
		this_LongClassSpecifier_0=ruleLongClassSpecifier
		{
			$current = $this_LongClassSpecifier_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassSpecifierAccess().getShortClassSpecifierParserRuleCall_1());
		}
		this_ShortClassSpecifier_1=ruleShortClassSpecifier
		{
			$current = $this_ShortClassSpecifier_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassSpecifierAccess().getDerClassSpecifierParserRuleCall_2());
		}
		this_DerClassSpecifier_2=ruleDerClassSpecifier
		{
			$current = $this_DerClassSpecifier_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLongClassSpecifier
entryRuleLongClassSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLongClassSpecifierRule()); }
	iv_ruleLongClassSpecifier=ruleLongClassSpecifier
	{ $current=$iv_ruleLongClassSpecifier.current; }
	EOF;

// Rule LongClassSpecifier
ruleLongClassSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_IDENT
					{
						newLeafNode(lv_name_0_0, grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLongClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_0_1_0());
					}
					lv_sringComment_1_0=ruleStringComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"sringComment",
							lv_sringComment_1_0,
							"sc.modelica.xtext.ModelicaMo.StringComment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_0_2_0());
					}
					lv_composition_2_0=ruleComposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"composition",
							lv_composition_2_0,
							"sc.modelica.xtext.ModelicaMo.Composition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='end'
			{
				newLeafNode(otherlv_3, grammarAccess.getLongClassSpecifierAccess().getEndKeyword_0_3());
			}
			(
				(
					lv_nameEnd_4_0=RULE_IDENT
					{
						newLeafNode(lv_nameEnd_4_0, grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLongClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"nameEnd",
							lv_nameEnd_4_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getExtendsExtendClauseParserRuleCall_1_0_0());
					}
					lv_extends_5_0=ruleExtendClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"extends",
							lv_extends_5_0,
							"sc.modelica.xtext.ModelicaMo.ExtendClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_6_0=RULE_IDENT
					{
						newLeafNode(lv_name_6_0, grammarAccess.getLongClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLongClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_1_2_0());
					}
					lv_classModification_7_0=ruleClassModification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"classModification",
							lv_classModification_7_0,
							"sc.modelica.xtext.ModelicaMo.ClassModification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getSringCommentStringCommentParserRuleCall_1_3_0());
					}
					lv_sringComment_8_0=ruleStringComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"sringComment",
							lv_sringComment_8_0,
							"sc.modelica.xtext.ModelicaMo.StringComment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getLongClassSpecifierAccess().getCompositionCompositionParserRuleCall_1_4_0());
					}
					lv_composition_9_0=ruleComposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLongClassSpecifierRule());
						}
						set(
							$current,
							"composition",
							lv_composition_9_0,
							"sc.modelica.xtext.ModelicaMo.Composition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='end'
			{
				newLeafNode(otherlv_10, grammarAccess.getLongClassSpecifierAccess().getEndKeyword_1_5());
			}
			(
				(
					lv_nameEnd_11_0=RULE_IDENT
					{
						newLeafNode(lv_nameEnd_11_0, grammarAccess.getLongClassSpecifierAccess().getNameEndIDENTTerminalRuleCall_1_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLongClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"nameEnd",
							lv_nameEnd_11_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleShortClassSpecifier
entryRuleShortClassSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortClassSpecifierRule()); }
	iv_ruleShortClassSpecifier=ruleShortClassSpecifier
	{ $current=$iv_ruleShortClassSpecifier.current; }
	EOF;

// Rule ShortClassSpecifier
ruleShortClassSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_IDENT
					{
						newLeafNode(lv_name_0_0, grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getBasePrefixBasePrefixParserRuleCall_0_2_0());
					}
					lv_basePrefix_2_0=ruleBasePrefix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"basePrefix",
							lv_basePrefix_2_0,
							"sc.modelica.xtext.ModelicaMo.BasePrefix");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getInstanceNameNameParserRuleCall_0_3_0());
					}
					lv_instanceName_3_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"instanceName",
							lv_instanceName_3_0,
							"sc.modelica.xtext.ModelicaMo.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getArraySubscriptsArraySubscriptsParserRuleCall_0_4_0());
					}
					lv_arraySubscripts_4_0=ruleArraySubscripts
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"arraySubscripts",
							lv_arraySubscripts_4_0,
							"sc.modelica.xtext.ModelicaMo.ArraySubscripts");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getClassModificationClassModificationParserRuleCall_0_5_0());
					}
					lv_classModification_5_0=ruleClassModification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"classModification",
							lv_classModification_5_0,
							"sc.modelica.xtext.ModelicaMo.ClassModification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_0_6_0());
					}
					lv_comment_6_0=ruleComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"comment",
							lv_comment_6_0,
							"sc.modelica.xtext.ModelicaMo.Comment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_name_7_0=RULE_IDENT
					{
						newLeafNode(lv_name_7_0, grammarAccess.getShortClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortClassSpecifierRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getShortClassSpecifierAccess().getEqualsSignKeyword_1_1());
			}
			otherlv_9='enumeration'
			{
				newLeafNode(otherlv_9, grammarAccess.getShortClassSpecifierAccess().getEnumerationKeyword_1_2());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getShortClassSpecifierAccess().getLeftParenthesisKeyword_1_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getEnumListEnumListParserRuleCall_1_4_0_0());
						}
						lv_enumList_11_0=ruleEnumList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
							}
							set(
								$current,
								"enumList",
								lv_enumList_11_0,
								"sc.modelica.xtext.ModelicaMo.EnumList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				    |
				otherlv_12=':'
				{
					newLeafNode(otherlv_12, grammarAccess.getShortClassSpecifierAccess().getColonKeyword_1_4_1());
				}
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getShortClassSpecifierAccess().getRightParenthesisKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShortClassSpecifierAccess().getCommentCommentParserRuleCall_1_6_0());
					}
					lv_comment_14_0=ruleComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortClassSpecifierRule());
						}
						set(
							$current,
							"comment",
							lv_comment_14_0,
							"sc.modelica.xtext.ModelicaMo.Comment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleDerClassSpecifier
entryRuleDerClassSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerClassSpecifierRule()); }
	iv_ruleDerClassSpecifier=ruleDerClassSpecifier
	{ $current=$iv_ruleDerClassSpecifier.current; }
	EOF;

// Rule DerClassSpecifier
ruleDerClassSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getDerClassSpecifierAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDerClassSpecifierRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDerClassSpecifierAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='der'
		{
			newLeafNode(otherlv_2, grammarAccess.getDerClassSpecifierAccess().getDerKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getDerClassSpecifierAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerClassSpecifierAccess().getNameNameParserRuleCall_4_0());
				}
				lv_name_4_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerClassSpecifierRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"sc.modelica.xtext.ModelicaMo.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_5());
		}
		this_IDENT_6=RULE_IDENT
		{
			newLeafNode(this_IDENT_6, grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_6());
		}
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getDerClassSpecifierAccess().getCommaKeyword_7_0());
			}
			this_IDENT_8=RULE_IDENT
			{
				newLeafNode(this_IDENT_8, grammarAccess.getDerClassSpecifierAccess().getIDENTTerminalRuleCall_7_1());
			}
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getDerClassSpecifierAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerClassSpecifierAccess().getCommentCommentParserRuleCall_9_0());
				}
				lv_comment_10_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerClassSpecifierRule());
					}
					set(
						$current,
						"comment",
						lv_comment_10_0,
						"sc.modelica.xtext.ModelicaMo.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBasePrefix
entryRuleBasePrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasePrefixRule()); }
	iv_ruleBasePrefix=ruleBasePrefix
	{ $current=$iv_ruleBasePrefix.current; }
	EOF;

// Rule BasePrefix
ruleBasePrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall());
	}
	this_TypePrefix_0=ruleTypePrefix
	{
		$current = $this_TypePrefix_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEnumList
entryRuleEnumList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumListRule()); }
	iv_ruleEnumList=ruleEnumList
	{ $current=$iv_ruleEnumList.current; }
	EOF;

// Rule EnumList
ruleEnumList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_0_0());
				}
				lv_enumerationLiteral_0_0=ruleEnumerationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumListRule());
					}
					add(
						$current,
						"enumerationLiteral",
						lv_enumerationLiteral_0_0,
						"sc.modelica.xtext.ModelicaMo.EnumerationLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumListAccess().getEnumerationLiteralEnumerationLiteralParserRuleCall_1_1_0());
					}
					lv_enumerationLiteral_2_0=ruleEnumerationLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumListRule());
						}
						add(
							$current,
							"enumerationLiteral",
							lv_enumerationLiteral_2_0,
							"sc.modelica.xtext.ModelicaMo.EnumerationLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralRule()); }
	iv_ruleEnumerationLiteral=ruleEnumerationLiteral
	{ $current=$iv_ruleEnumerationLiteral.current; }
	EOF;

// Rule EnumerationLiteral
ruleEnumerationLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENT_0=RULE_IDENT
		{
			newLeafNode(this_IDENT_0, grammarAccess.getEnumerationLiteralAccess().getIDENTTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationLiteralRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"sc.modelica.xtext.ModelicaMo.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getElementListElementListParserRuleCall_0_0());
				}
				lv_elementList_0_0=ruleElementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					set(
						$current,
						"elementList",
						lv_elementList_0_0,
						"sc.modelica.xtext.ModelicaMo.ElementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_1='public'
				{
					newLeafNode(otherlv_1, grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getElementListPublicElementListParserRuleCall_1_0_1_0());
						}
						lv_elementListPublic_2_0=ruleElementList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"elementListPublic",
								lv_elementListPublic_2_0,
								"sc.modelica.xtext.ModelicaMo.ElementList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_3='protected'
				{
					newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getElementListProtectedElementListParserRuleCall_1_1_1_0());
						}
						lv_elementListProtected_4_0=ruleElementList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"elementListProtected",
								lv_elementListProtected_4_0,
								"sc.modelica.xtext.ModelicaMo.ElementList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getEquationSectionsEquationSectionParserRuleCall_1_2_0());
					}
					lv_equationSections_5_0=ruleEquationSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"equationSections",
							lv_equationSections_5_0,
							"sc.modelica.xtext.ModelicaMo.EquationSection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAlgorithmSectionsAlgorithmSectionParserRuleCall_1_3_0());
					}
					lv_algorithmSections_6_0=ruleAlgorithmSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"algorithmSections",
							lv_algorithmSections_6_0,
							"sc.modelica.xtext.ModelicaMo.AlgorithmSection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='external'
			{
				newLeafNode(otherlv_7, grammarAccess.getCompositionAccess().getExternalKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getLanguageSpecificationLanguageSpecificationParserRuleCall_2_1_0());
					}
					lv_LanguageSpecification_8_0=ruleLanguageSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"LanguageSpecification",
							lv_LanguageSpecification_8_0,
							"sc.modelica.xtext.ModelicaMo.LanguageSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAnnotationAnnotationParserRuleCall_3_0_0());
					}
					lv_annotation_9_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"annotation",
							lv_annotation_9_0,
							"sc.modelica.xtext.ModelicaMo.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleLanguageSpecification
entryRuleLanguageSpecification returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLanguageSpecificationRule()); }
	iv_ruleLanguageSpecification=ruleLanguageSpecification
	{ $current=$iv_ruleLanguageSpecification.current.getText(); }
	EOF;

// Rule LanguageSpecification
ruleLanguageSpecification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElementListAccess().getElementListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_0_0());
					}
					lv_elements_1_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"elements",
							lv_elements_1_0,
							"sc.modelica.xtext.ModelicaMo.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getElementListAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getImportClauseImportClauseParserRuleCall_0_0());
				}
				lv_importClause_0_0=ruleImportClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"importClause",
						lv_importClause_0_0,
						"sc.modelica.xtext.ModelicaMo.ImportClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getExtendClauseExtendClauseParserRuleCall_1_0());
				}
				lv_extendClause_1_0=ruleExtendClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"extendClause",
						lv_extendClause_1_0,
						"sc.modelica.xtext.ModelicaMo.ExtendClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_redeclare_2_0='redeclare'
					{
						newLeafNode(lv_redeclare_2_0, grammarAccess.getElementAccess().getRedeclareRedeclareKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
						setWithLastConsumed($current, "redeclare", true, "redeclare");
					}
				)
			)?
			(
				(
					lv_final_3_0='final'
					{
						newLeafNode(lv_final_3_0, grammarAccess.getElementAccess().getFinalFinalKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
						setWithLastConsumed($current, "final", true, "final");
					}
				)
			)?
			(
				(
					lv_inner_4_0='inner'
					{
						newLeafNode(lv_inner_4_0, grammarAccess.getElementAccess().getInnerInnerKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
						setWithLastConsumed($current, "inner", true, "inner");
					}
				)
			)?
			(
				(
					lv_outer_5_0='outer'
					{
						newLeafNode(lv_outer_5_0, grammarAccess.getElementAccess().getOuterOuterKeyword_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
						setWithLastConsumed($current, "outer", true, "outer");
					}
				)
			)?
			(
				otherlv_6='replaceable'
				{
					newLeafNode(otherlv_6, grammarAccess.getElementAccess().getReplaceableKeyword_2_4());
				}
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getClassClassDefinitionParserRuleCall_2_5_0_0());
						}
						lv_class_7_0=ruleClassDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							set(
								$current,
								"class",
								lv_class_7_0,
								"sc.modelica.xtext.ModelicaMo.ClassDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getCompComponentClauseParserRuleCall_2_5_1_0());
						}
						lv_comp_8_0=ruleComponentClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							set(
								$current,
								"comp",
								lv_comp_8_0,
								"sc.modelica.xtext.ModelicaMo.ComponentClause");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getCcConstrainingClauseParserRuleCall_2_6_0_0());
						}
						lv_cc_9_0=ruleConstrainingClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							set(
								$current,
								"cc",
								lv_cc_9_0,
								"sc.modelica.xtext.ModelicaMo.ConstrainingClause");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getCommentCommentParserRuleCall_2_6_1_0());
						}
						lv_comment_10_0=ruleComment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							set(
								$current,
								"comment",
								lv_comment_10_0,
								"sc.modelica.xtext.ModelicaMo.Comment");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)?
		)
	)
;

// Entry rule entryRuleImportClause
entryRuleImportClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportClauseRule()); }
	iv_ruleImportClause=ruleImportClause
	{ $current=$iv_ruleImportClause.current; }
	EOF;

// Rule ImportClause
ruleImportClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportClauseAccess().getImportKeyword_0());
		}
		(
			(
				(
					(
						lv_id_1_0=RULE_IDENT
						{
							newLeafNode(lv_id_1_0, grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportClauseRule());
							}
							setWithLastConsumed(
								$current,
								"id",
								lv_id_1_0,
								"sc.modelica.xtext.ModelicaMo.IDENT");
						}
					)
				)
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0());
						}
						lv_name_3_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportClauseRule());
							}
							set(
								$current,
								"name",
								lv_name_3_0,
								"sc.modelica.xtext.ModelicaMo.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_1_0_0());
						}
						lv_name_4_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportClauseRule());
							}
							set(
								$current,
								"name",
								lv_name_4_0,
								"sc.modelica.xtext.ModelicaMo.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getImportClauseAccess().getFullStopKeyword_1_1_1_0());
					}
					(
						otherlv_6='*'
						{
							newLeafNode(otherlv_6, grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0());
						}
						    |
						(
							otherlv_7='{'
							{
								newLeafNode(otherlv_7, grammarAccess.getImportClauseAccess().getLeftCurlyBracketKeyword_1_1_1_1_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getImportClauseAccess().getImportListImportListParserRuleCall_1_1_1_1_1_1_0());
									}
									lv_importList_8_0=ruleImportList
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getImportClauseRule());
										}
										set(
											$current,
											"importList",
											lv_importList_8_0,
											"sc.modelica.xtext.ModelicaMo.ImportList");
										afterParserOrEnumRuleCall();
									}
								)
							)
							otherlv_9='}'
							{
								newLeafNode(otherlv_9, grammarAccess.getImportClauseAccess().getRightCurlyBracketKeyword_1_1_1_1_1_2());
							}
						)
					)
				)?
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0());
				}
				lv_comment_10_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportClauseRule());
					}
					set(
						$current,
						"comment",
						lv_comment_10_0,
						"sc.modelica.xtext.ModelicaMo.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleImportList
entryRuleImportList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportListRule()); }
	iv_ruleImportList=ruleImportList
	{ $current=$iv_ruleImportList.current; }
	EOF;

// Rule ImportList
ruleImportList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportListRule());
					}
					addWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getImportListAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_id_2_0=RULE_IDENT
					{
						newLeafNode(lv_id_2_0, grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportListRule());
						}
						addWithLastConsumed(
							$current,
							"id",
							lv_id_2_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExtendClause
entryRuleExtendClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendClauseRule()); }
	iv_ruleExtendClause=ruleExtendClause
	{ $current=$iv_ruleExtendClause.current; }
	EOF;

// Rule ExtendClause
ruleExtendClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtendClauseAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendClauseAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendClauseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"sc.modelica.xtext.ModelicaMo.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendClauseAccess().getClassModificationClassModificationParserRuleCall_2_0());
				}
				lv_classModification_2_0=ruleClassModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendClauseRule());
					}
					set(
						$current,
						"classModification",
						lv_classModification_2_0,
						"sc.modelica.xtext.ModelicaMo.ClassModification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendClauseAccess().getAnnotationAnnotationParserRuleCall_3_0());
				}
				lv_annotation_3_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendClauseRule());
					}
					set(
						$current,
						"annotation",
						lv_annotation_3_0,
						"sc.modelica.xtext.ModelicaMo.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConstrainingClause
entryRuleConstrainingClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrainingClauseRule()); }
	iv_ruleConstrainingClause=ruleConstrainingClause
	{ $current=$iv_ruleConstrainingClause.current; }
	EOF;

// Rule ConstrainingClause
ruleConstrainingClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constrainedby'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrainingClauseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"sc.modelica.xtext.ModelicaMo.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrainingClauseAccess().getClassModificationClassModificationParserRuleCall_2_0());
				}
				lv_classModification_2_0=ruleClassModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrainingClauseRule());
					}
					set(
						$current,
						"classModification",
						lv_classModification_2_0,
						"sc.modelica.xtext.ModelicaMo.ClassModification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleModification
entryRuleModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModificationRule()); }
	iv_ruleModification=ruleModification
	{ $current=$iv_ruleModification.current; }
	EOF;

// Rule Modification
ruleModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getClassModificationClassModificationParserRuleCall_0_0_0());
					}
					lv_classModification_0_0=ruleClassModification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"classModification",
							lv_classModification_0_0,
							"sc.modelica.xtext.ModelicaMo.ClassModification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_0_1_1_0());
						}
						lv_expression_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModificationRule());
							}
							set(
								$current,
								"expression",
								lv_expression_2_0,
								"sc.modelica.xtext.ModelicaMo.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_expression_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"expression",
							lv_expression_4_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_5=':='
			{
				newLeafNode(otherlv_5, grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleClassModification
entryRuleClassModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassModificationRule()); }
	iv_ruleClassModification=ruleClassModification
	{ $current=$iv_ruleClassModification.current; }
	EOF;

// Rule ClassModification
ruleClassModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassModificationAccess().getClassModificationAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassModificationAccess().getArgumentListArgumentListParserRuleCall_2_0());
				}
				lv_argumentList_2_0=ruleArgumentList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassModificationRule());
					}
					set(
						$current,
						"argumentList",
						lv_argumentList_2_0,
						"sc.modelica.xtext.ModelicaMo.ArgumentList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgumentList
entryRuleArgumentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	iv_ruleArgumentList=ruleArgumentList
	{ $current=$iv_ruleArgumentList.current; }
	EOF;

// Rule ArgumentList
ruleArgumentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_0_0());
				}
				lv_arguments_0_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentListRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_0_0,
						"sc.modelica.xtext.ModelicaMo.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentListRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"sc.modelica.xtext.ModelicaMo.Argument");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArgumentAccess().getElementModificationOrReplaceableParserRuleCall_0());
		}
		this_ElementModificationOrReplaceable_0=ruleElementModificationOrReplaceable
		{
			$current = $this_ElementModificationOrReplaceable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1());
		}
		this_ElementRedeclaration_1=ruleElementRedeclaration
		{
			$current = $this_ElementRedeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElementModificationOrReplaceable
entryRuleElementModificationOrReplaceable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementModificationOrReplaceableRule()); }
	iv_ruleElementModificationOrReplaceable=ruleElementModificationOrReplaceable
	{ $current=$iv_ruleElementModificationOrReplaceable.current; }
	EOF;

// Rule ElementModificationOrReplaceable
ruleElementModificationOrReplaceable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_each_0_0='each'
				{
					newLeafNode(lv_each_0_0, grammarAccess.getElementModificationOrReplaceableAccess().getEachEachKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementModificationOrReplaceableRule());
					}
					setWithLastConsumed($current, "each", true, "each");
				}
			)
		)?
		(
			(
				lv_final_1_0='final'
				{
					newLeafNode(lv_final_1_0, grammarAccess.getElementModificationOrReplaceableAccess().getFinalFinalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementModificationOrReplaceableRule());
					}
					setWithLastConsumed($current, "final", true, "final");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementModificationParserRuleCall_2_0_0());
					}
					lv_elementModOrRep_2_0=ruleElementModification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementModificationOrReplaceableRule());
						}
						set(
							$current,
							"elementModOrRep",
							lv_elementModOrRep_2_0,
							"sc.modelica.xtext.ModelicaMo.ElementModification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getElementModificationOrReplaceableAccess().getElementModOrRepElementReplaceableParserRuleCall_2_1_0());
					}
					lv_elementModOrRep_3_0=ruleElementReplaceable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementModificationOrReplaceableRule());
						}
						set(
							$current,
							"elementModOrRep",
							lv_elementModOrRep_3_0,
							"sc.modelica.xtext.ModelicaMo.ElementReplaceable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleElementModification
entryRuleElementModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementModificationRule()); }
	iv_ruleElementModification=ruleElementModification
	{ $current=$iv_ruleElementModification.current; }
	EOF;

// Rule ElementModification
ruleElementModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"sc.modelica.xtext.ModelicaMo.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getModificationModificationParserRuleCall_1_0());
				}
				lv_modification_1_0=ruleModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"modification",
						lv_modification_1_0,
						"sc.modelica.xtext.ModelicaMo.Modification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getStringCommentStringCommentParserRuleCall_2_0());
				}
				lv_stringComment_2_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"stringComment",
						lv_stringComment_2_0,
						"sc.modelica.xtext.ModelicaMo.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElementRedeclaration
entryRuleElementRedeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRedeclarationRule()); }
	iv_ruleElementRedeclaration=ruleElementRedeclaration
	{ $current=$iv_ruleElementRedeclaration.current; }
	EOF;

// Rule ElementRedeclaration
ruleElementRedeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_redeclare_0_0='redeclare'
				{
					newLeafNode(lv_redeclare_0_0, grammarAccess.getElementRedeclarationAccess().getRedeclareRedeclareKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRedeclarationRule());
					}
					setWithLastConsumed($current, "redeclare", true, "redeclare");
				}
			)
		)
		(
			(
				lv_each_1_0='each'
				{
					newLeafNode(lv_each_1_0, grammarAccess.getElementRedeclarationAccess().getEachEachKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRedeclarationRule());
					}
					setWithLastConsumed($current, "each", true, "each");
				}
			)
		)?
		(
			(
				lv_final_2_0='final'
				{
					newLeafNode(lv_final_2_0, grammarAccess.getElementRedeclarationAccess().getFinalFinalKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRedeclarationRule());
					}
					setWithLastConsumed($current, "final", true, "final");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getElementRedeclarationAccess().getClassDefinitionShortClassDefinitionParserRuleCall_3_0_0_0());
						}
						lv_classDefinition_3_0=ruleShortClassDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRedeclarationRule());
							}
							set(
								$current,
								"classDefinition",
								lv_classDefinition_3_0,
								"sc.modelica.xtext.ModelicaMo.ShortClassDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getElementRedeclarationAccess().getComponentClauseComponentClause1ParserRuleCall_3_0_1_0());
						}
						lv_componentClause_4_0=ruleComponentClause1
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRedeclarationRule());
							}
							set(
								$current,
								"componentClause",
								lv_componentClause_4_0,
								"sc.modelica.xtext.ModelicaMo.ComponentClause1");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getElementRedeclarationAccess().getElementElementReplaceableParserRuleCall_3_1_0());
					}
					lv_element_5_0=ruleElementReplaceable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRedeclarationRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"sc.modelica.xtext.ModelicaMo.ElementReplaceable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleElementReplaceable
entryRuleElementReplaceable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementReplaceableRule()); }
	iv_ruleElementReplaceable=ruleElementReplaceable
	{ $current=$iv_ruleElementReplaceable.current; }
	EOF;

// Rule ElementReplaceable
ruleElementReplaceable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_replaceable_0_0='replaceable'
				{
					newLeafNode(lv_replaceable_0_0, grammarAccess.getElementReplaceableAccess().getReplaceableReplaceableKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementReplaceableRule());
					}
					setWithLastConsumed($current, "replaceable", true, "replaceable");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementReplaceableAccess().getElementShortClassDefinitionParserRuleCall_1_0_0());
					}
					lv_element_1_0=ruleShortClassDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementReplaceableRule());
						}
						set(
							$current,
							"element",
							lv_element_1_0,
							"sc.modelica.xtext.ModelicaMo.ShortClassDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getElementReplaceableAccess().getElementComponentClause1ParserRuleCall_1_1_0());
					}
					lv_element_2_0=ruleComponentClause1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementReplaceableRule());
						}
						set(
							$current,
							"element",
							lv_element_2_0,
							"sc.modelica.xtext.ModelicaMo.ComponentClause1");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElementReplaceableAccess().getConstraintConstrainingClauseParserRuleCall_2_0());
				}
				lv_constraint_3_0=ruleConstrainingClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementReplaceableRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_3_0,
						"sc.modelica.xtext.ModelicaMo.ConstrainingClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleComponentClause1
entryRuleComponentClause1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClause1Rule()); }
	iv_ruleComponentClause1=ruleComponentClause1
	{ $current=$iv_ruleComponentClause1.current; }
	EOF;

// Rule ComponentClause1
ruleComponentClause1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getTypePrefixTypePrefixParserRuleCall_0_0());
				}
				lv_typePrefix_0_0=ruleTypePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"typePrefix",
						lv_typePrefix_0_0,
						"sc.modelica.xtext.ModelicaMo.TypePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getTypeSpecifierTypeSpecifierParserRuleCall_1_0());
				}
				lv_typeSpecifier_1_0=ruleTypeSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"typeSpecifier",
						lv_typeSpecifier_1_0,
						"sc.modelica.xtext.ModelicaMo.TypeSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getComponentDeclarationComponentDeclaration1ParserRuleCall_2_0());
				}
				lv_componentDeclaration_2_0=ruleComponentDeclaration1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"componentDeclaration",
						lv_componentDeclaration_2_0,
						"sc.modelica.xtext.ModelicaMo.ComponentDeclaration1");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentDeclaration1
entryRuleComponentDeclaration1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDeclaration1Rule()); }
	iv_ruleComponentDeclaration1=ruleComponentDeclaration1
	{ $current=$iv_ruleComponentDeclaration1.current; }
	EOF;

// Rule ComponentDeclaration1
ruleComponentDeclaration1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclaration1Rule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"sc.modelica.xtext.ModelicaMo.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleShortClassDefinition
entryRuleShortClassDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortClassDefinitionRule()); }
	iv_ruleShortClassDefinition=ruleShortClassDefinition
	{ $current=$iv_ruleShortClassDefinition.current; }
	EOF;

// Rule ShortClassDefinition
ruleShortClassDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesClassPrefixesParserRuleCall_0_0());
				}
				lv_classPrefixes_0_0=ruleClassPrefixes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
					}
					set(
						$current,
						"classPrefixes",
						lv_classPrefixes_0_0,
						"sc.modelica.xtext.ModelicaMo.ClassPrefixes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getClassSpecifierShortClassSpecifierParserRuleCall_1_0());
				}
				lv_classSpecifier_1_0=ruleShortClassSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
					}
					set(
						$current,
						"classSpecifier",
						lv_classSpecifier_1_0,
						"sc.modelica.xtext.ModelicaMo.ShortClassSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentClause
entryRuleComponentClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClauseRule()); }
	iv_ruleComponentClause=ruleComponentClause
	{ $current=$iv_ruleComponentClause.current; }
	EOF;

// Rule ComponentClause
ruleComponentClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getTypePrefixTypePrefixParserRuleCall_0_0());
				}
				lv_typePrefix_0_0=ruleTypePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"typePrefix",
						lv_typePrefix_0_0,
						"sc.modelica.xtext.ModelicaMo.TypePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getTypeSpecTypeSpecifierParserRuleCall_1_0());
				}
				lv_typeSpec_1_0=ruleTypeSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"typeSpec",
						lv_typeSpec_1_0,
						"sc.modelica.xtext.ModelicaMo.TypeSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getArraySubscriptsArraySubscriptsParserRuleCall_2_0());
				}
				lv_arraySubscripts_2_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"arraySubscripts",
						lv_arraySubscripts_2_0,
						"sc.modelica.xtext.ModelicaMo.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getComponentListComponentListParserRuleCall_3_0());
				}
				lv_componentList_3_0=ruleComponentList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"componentList",
						lv_componentList_3_0,
						"sc.modelica.xtext.ModelicaMo.ComponentList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypePrefix
entryRuleTypePrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypePrefixRule()); }
	iv_ruleTypePrefix=ruleTypePrefix
	{ $current=$iv_ruleTypePrefix.current; }
	EOF;

// Rule TypePrefix
ruleTypePrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypePrefixAccess().getTypePrefixAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_flow_1_0='flow'
					{
						newLeafNode(lv_flow_1_0, grammarAccess.getTypePrefixAccess().getFlowFlowKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "flow", true, "flow");
					}
				)
			)
			    |
			(
				(
					lv_stream_2_0='stream'
					{
						newLeafNode(lv_stream_2_0, grammarAccess.getTypePrefixAccess().getStreamStreamKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "stream", true, "stream");
					}
				)
			)
		)?
		(
			(
				(
					lv_constant_3_0='constant'
					{
						newLeafNode(lv_constant_3_0, grammarAccess.getTypePrefixAccess().getConstantConstantKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "constant", true, "constant");
					}
				)
			)
			    |
			(
				(
					lv_parameter_4_0='parameter'
					{
						newLeafNode(lv_parameter_4_0, grammarAccess.getTypePrefixAccess().getParameterParameterKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "parameter", true, "parameter");
					}
				)
			)
			    |
			(
				(
					lv_discrete_5_0='discrete'
					{
						newLeafNode(lv_discrete_5_0, grammarAccess.getTypePrefixAccess().getDiscreteDiscreteKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "discrete", true, "discrete");
					}
				)
			)
		)?
		(
			(
				(
					lv_input_6_0='input'
					{
						newLeafNode(lv_input_6_0, grammarAccess.getTypePrefixAccess().getInputInputKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "input", true, "input");
					}
				)
			)
			    |
			(
				(
					lv_output_7_0='output'
					{
						newLeafNode(lv_output_7_0, grammarAccess.getTypePrefixAccess().getOutputOutputKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypePrefixRule());
						}
						setWithLastConsumed($current, "output", true, "output");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecifierRule()); }
	iv_ruleTypeSpecifier=ruleTypeSpecifier
	{ $current=$iv_ruleTypeSpecifier.current; }
	EOF;

// Rule TypeSpecifier
ruleTypeSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeSpecifierAccess().getNameNameParserRuleCall_0());
			}
			lv_name_0_0=ruleName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"sc.modelica.xtext.ModelicaMo.Name");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleComponentList
entryRuleComponentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentListRule()); }
	iv_ruleComponentList=ruleComponentList
	{ $current=$iv_ruleComponentList.current; }
	EOF;

// Rule ComponentList
ruleComponentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_0_0());
				}
				lv_components_0_0=ruleComponentDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentListRule());
					}
					add(
						$current,
						"components",
						lv_components_0_0,
						"sc.modelica.xtext.ModelicaMo.ComponentDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getComponentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentListAccess().getComponentsComponentDeclarationParserRuleCall_1_1_0());
					}
					lv_components_2_0=ruleComponentDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentListRule());
						}
						add(
							$current,
							"components",
							lv_components_2_0,
							"sc.modelica.xtext.ModelicaMo.ComponentDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDeclarationRule()); }
	iv_ruleComponentDeclaration=ruleComponentDeclaration
	{ $current=$iv_ruleComponentDeclaration.current; }
	EOF;

// Rule ComponentDeclaration
ruleComponentDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getDeclarationDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"sc.modelica.xtext.ModelicaMo.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getConditionAttributeConditionAttributeParserRuleCall_1_0());
				}
				lv_conditionAttribute_1_0=ruleConditionAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"conditionAttribute",
						lv_conditionAttribute_1_0,
						"sc.modelica.xtext.ModelicaMo.ConditionAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getCommentStringCommentParserRuleCall_2_0());
				}
				lv_comment_2_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"comment",
						lv_comment_2_0,
						"sc.modelica.xtext.ModelicaMo.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getAnnotationAnnotationParserRuleCall_3_0());
				}
				lv_annotation_3_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"annotation",
						lv_annotation_3_0,
						"sc.modelica.xtext.ModelicaMo.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConditionAttribute
entryRuleConditionAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionAttributeRule()); }
	iv_ruleConditionAttribute=ruleConditionAttribute
	{ $current=$iv_ruleConditionAttribute.current; }
	EOF;

// Rule ConditionAttribute
ruleConditionAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAttributeAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAttributeAccess().getConditionExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionAttributeRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDENT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getArraySubscriptsArraySubscriptsParserRuleCall_1_0());
				}
				lv_arraySubscripts_1_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"arraySubscripts",
						lv_arraySubscripts_1_0,
						"sc.modelica.xtext.ModelicaMo.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getModificationModificationParserRuleCall_2_0());
				}
				lv_modification_2_0=ruleModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"modification",
						lv_modification_2_0,
						"sc.modelica.xtext.ModelicaMo.Modification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEquationSection
entryRuleEquationSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationSectionRule()); }
	iv_ruleEquationSection=ruleEquationSection
	{ $current=$iv_ruleEquationSection.current; }
	EOF;

// Rule EquationSection
ruleEquationSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_initial_0_0='initial'
				{
					newLeafNode(lv_initial_0_0, grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEquationSectionRule());
					}
					setWithLastConsumed($current, "initial", true, "initial");
				}
			)
		)?
		(
			(
				lv_equation_1_0='equation'
				{
					newLeafNode(lv_equation_1_0, grammarAccess.getEquationSectionAccess().getEquationEquationKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEquationSectionRule());
					}
					setWithLastConsumed($current, "equation", lv_equation_1_0, "equation");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0());
					}
					lv_equations_2_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationSectionRule());
						}
						add(
							$current,
							"equations",
							lv_equations_2_0,
							"sc.modelica.xtext.ModelicaMo.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1());
			}
		)*
	)
;

// Entry rule entryRuleAlgorithmSection
entryRuleAlgorithmSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlgorithmSectionRule()); }
	iv_ruleAlgorithmSection=ruleAlgorithmSection
	{ $current=$iv_ruleAlgorithmSection.current; }
	EOF;

// Rule AlgorithmSection
ruleAlgorithmSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_initial_0_0='initial'
				{
					newLeafNode(lv_initial_0_0, grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlgorithmSectionRule());
					}
					setWithLastConsumed($current, "initial", true, "initial");
				}
			)
		)?
		(
			(
				lv_algorithm_1_0='algorithm'
				{
					newLeafNode(lv_algorithm_1_0, grammarAccess.getAlgorithmSectionAccess().getAlgorithmAlgorithmKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlgorithmSectionRule());
					}
					setWithLastConsumed($current, "algorithm", lv_algorithm_1_0, "algorithm");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmSectionRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"sc.modelica.xtext.ModelicaMo.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1());
			}
		)*
	)
;

// Entry rule entryRuleEquation
entryRuleEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationRule()); }
	iv_ruleEquation=ruleEquation
	{ $current=$iv_ruleEquation.current; }
	EOF;

// Rule Equation
ruleEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationAccess().getSimpleExpressionParserRuleCall_0_0_0_0());
					}
					this_SimpleExpression_0=ruleSimpleExpression
					{
						$current = $this_SimpleExpression_0.current;
						afterParserOrEnumRuleCall();
					}
					(
						otherlv_1='='
						{
							newLeafNode(otherlv_1, grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_0_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getEquationAccess().getEquationExpressionParserRuleCall_0_0_0_1_1_0());
								}
								lv_equation_2_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getEquationRule());
									}
									set(
										$current,
										"equation",
										lv_equation_2_0,
										"sc.modelica.xtext.ModelicaMo.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
				    |
				{
					newCompositeNode(grammarAccess.getEquationAccess().getEquationIfParserRuleCall_0_0_1());
				}
				this_EquationIf_3=ruleEquationIf
				{
					$current = $this_EquationIf_3.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getEquationAccess().getEquationForParserRuleCall_0_0_2());
				}
				this_EquationFor_4=ruleEquationFor
				{
					$current = $this_EquationFor_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getEquationAccess().getEquationWhenParserRuleCall_0_0_3());
				}
				this_EquationWhen_5=ruleEquationWhen
				{
					$current = $this_EquationWhen_5.current;
					afterParserOrEnumRuleCall();
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationAccess().getCommCommentParserRuleCall_0_1_0());
					}
					lv_comm_6_0=ruleComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationRule());
						}
						set(
							$current,
							"comm",
							lv_comm_6_0,
							"sc.modelica.xtext.ModelicaMo.Comment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationAccess().getConnectionConnectClauseParserRuleCall_1_0());
				}
				lv_connection_7_0=ruleConnectClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationRule());
					}
					set(
						$current,
						"connection",
						lv_connection_7_0,
						"sc.modelica.xtext.ModelicaMo.ConnectClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getEquationAccess().getAssertParserRuleCall_2());
		}
		this_Assert_8=ruleAssert
		{
			$current = $this_Assert_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_0_0_0());
						}
						lv_component_0_0=ruleComponentReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"component",
								lv_component_0_0,
								"sc.modelica.xtext.ModelicaMo.ComponentReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						otherlv_1=':='
						{
							newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_0_1_0());
								}
								lv_expression_2_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getStatementRule());
									}
									set(
										$current,
										"expression",
										lv_expression_2_0,
										"sc.modelica.xtext.ModelicaMo.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_0_1_1_0());
							}
							lv_fca_3_0=ruleFunctionCallArgs
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStatementRule());
								}
								set(
									$current,
									"fca",
									lv_fca_3_0,
									"sc.modelica.xtext.ModelicaMo.FunctionCallArgs");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getExpressionOutputExpressionListParserRuleCall_0_1_1_0());
						}
						lv_expression_5_0=ruleOutputExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"expression",
								lv_expression_5_0,
								"sc.modelica.xtext.ModelicaMo.OutputExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2());
				}
				otherlv_7=':='
				{
					newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getComponentComponentReferenceParserRuleCall_0_1_4_0());
						}
						lv_component_8_0=ruleComponentReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"component",
								lv_component_8_0,
								"sc.modelica.xtext.ModelicaMo.ComponentReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getFcaFunctionCallArgsParserRuleCall_0_1_5_0());
						}
						lv_fca_9_0=ruleFunctionCallArgs
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"fca",
								lv_fca_9_0,
								"sc.modelica.xtext.ModelicaMo.FunctionCallArgs");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getStatementAccess().getStatementAction_0_2_0(),
							$current);
					}
				)
				otherlv_11='return'
				{
					newLeafNode(otherlv_11, grammarAccess.getStatementAccess().getReturnKeyword_0_2_1());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getStatementAccess().getStatementAction_0_3_0(),
							$current);
					}
				)
				otherlv_13='break'
				{
					newLeafNode(otherlv_13, grammarAccess.getStatementAccess().getBreakKeyword_0_3_1());
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getStatementIfParserRuleCall_0_4());
			}
			this_StatementIf_14=ruleStatementIf
			{
				$current = $this_StatementIf_14.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getStatementForParserRuleCall_0_5());
			}
			this_StatementFor_15=ruleStatementFor
			{
				$current = $this_StatementFor_15.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getStatementWhileParserRuleCall_0_6());
			}
			this_StatementWhile_16=ruleStatementWhile
			{
				$current = $this_StatementWhile_16.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getStatementWhenParserRuleCall_0_7());
			}
			this_StatementWhen_17=ruleStatementWhen
			{
				$current = $this_StatementWhen_17.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getCommCommentParserRuleCall_1_0());
				}
				lv_comm_18_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"comm",
						lv_comm_18_0,
						"sc.modelica.xtext.ModelicaMo.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEquationIf
entryRuleEquationIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationIfRule()); }
	iv_ruleEquationIf=ruleEquationIf
	{ $current=$iv_ruleEquationIf.current; }
	EOF;

// Rule EquationIf
ruleEquationIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getEquationIfAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationIfAccess().getIfExpExpressionParserRuleCall_1_0());
				}
				lv_ifExp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationIfRule());
					}
					set(
						$current,
						"ifExp",
						lv_ifExp_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getEquationIfAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationIfAccess().getIfEqsEquationParserRuleCall_3_0_0());
					}
					lv_ifEqs_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationIfRule());
						}
						add(
							$current,
							"ifEqs",
							lv_ifEqs_3_0,
							"sc.modelica.xtext.ModelicaMo.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getEquationIfAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elseif'
			{
				newLeafNode(otherlv_5, grammarAccess.getEquationIfAccess().getElseifKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationIfAccess().getElseifExpExpressionParserRuleCall_4_1_0());
					}
					lv_elseifExp_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationIfRule());
						}
						add(
							$current,
							"elseifExp",
							lv_elseifExp_6_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getEquationIfAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationIfAccess().getElseIfEqsEquationParserRuleCall_4_3_0_0());
						}
						lv_elseIfEqs_8_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationIfRule());
							}
							add(
								$current,
								"elseIfEqs",
								lv_elseIfEqs_8_0,
								"sc.modelica.xtext.ModelicaMo.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getEquationIfAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		(
			otherlv_10='else'
			{
				newLeafNode(otherlv_10, grammarAccess.getEquationIfAccess().getElseKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationIfAccess().getElseEqsEquationParserRuleCall_5_1_0_0());
						}
						lv_elseEqs_11_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationIfRule());
							}
							add(
								$current,
								"elseEqs",
								lv_elseEqs_11_0,
								"sc.modelica.xtext.ModelicaMo.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getEquationIfAccess().getSemicolonKeyword_5_1_1());
				}
			)*
		)?
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getEquationIfAccess().getEndKeyword_6());
		}
		otherlv_14='if'
		{
			newLeafNode(otherlv_14, grammarAccess.getEquationIfAccess().getIfKeyword_7());
		}
	)
;

// Entry rule entryRuleStatementIf
entryRuleStatementIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementIfRule()); }
	iv_ruleStatementIf=ruleStatementIf
	{ $current=$iv_ruleStatementIf.current; }
	EOF;

// Rule StatementIf
ruleStatementIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatementIfAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementIfAccess().getIfExpExpressionParserRuleCall_1_0());
				}
				lv_ifExp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementIfRule());
					}
					set(
						$current,
						"ifExp",
						lv_ifExp_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatementIfAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementIfAccess().getIfEqsStatementParserRuleCall_3_0_0());
					}
					lv_ifEqs_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementIfRule());
						}
						add(
							$current,
							"ifEqs",
							lv_ifEqs_3_0,
							"sc.modelica.xtext.ModelicaMo.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatementIfAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elseif'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementIfAccess().getElseifKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementIfAccess().getElseifExpExpressionParserRuleCall_4_1_0());
					}
					lv_elseifExp_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementIfRule());
						}
						add(
							$current,
							"elseifExp",
							lv_elseifExp_6_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementIfAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementIfAccess().getElseIfEqsStatementParserRuleCall_4_3_0_0());
						}
						lv_elseIfEqs_8_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementIfRule());
							}
							add(
								$current,
								"elseIfEqs",
								lv_elseIfEqs_8_0,
								"sc.modelica.xtext.ModelicaMo.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getStatementIfAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		(
			otherlv_10='else'
			{
				newLeafNode(otherlv_10, grammarAccess.getStatementIfAccess().getElseKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementIfAccess().getElseEqsStatementParserRuleCall_5_1_0_0());
						}
						lv_elseEqs_11_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementIfRule());
							}
							add(
								$current,
								"elseEqs",
								lv_elseEqs_11_0,
								"sc.modelica.xtext.ModelicaMo.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getStatementIfAccess().getSemicolonKeyword_5_1_1());
				}
			)*
		)?
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getStatementIfAccess().getEndKeyword_6());
		}
		otherlv_14='if'
		{
			newLeafNode(otherlv_14, grammarAccess.getStatementIfAccess().getIfKeyword_7());
		}
	)
;

// Entry rule entryRuleEquationFor
entryRuleEquationFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationForRule()); }
	iv_ruleEquationFor=ruleEquationFor
	{ $current=$iv_ruleEquationFor.current; }
	EOF;

// Rule EquationFor
ruleEquationFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getEquationForAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationForAccess().getIteratorsForIndicesParserRuleCall_1_0());
				}
				lv_iterators_1_0=ruleForIndices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationForRule());
					}
					set(
						$current,
						"iterators",
						lv_iterators_1_0,
						"sc.modelica.xtext.ModelicaMo.ForIndices");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getEquationForAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationForAccess().getForEqsEquationParserRuleCall_3_0_0());
					}
					lv_forEqs_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationForRule());
						}
						add(
							$current,
							"forEqs",
							lv_forEqs_3_0,
							"sc.modelica.xtext.ModelicaMo.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getEquationForAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getEquationForAccess().getEndKeyword_4());
		}
		otherlv_6='for'
		{
			newLeafNode(otherlv_6, grammarAccess.getEquationForAccess().getForKeyword_5());
		}
	)
;

// Entry rule entryRuleStatementFor
entryRuleStatementFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementForRule()); }
	iv_ruleStatementFor=ruleStatementFor
	{ $current=$iv_ruleStatementFor.current; }
	EOF;

// Rule StatementFor
ruleStatementFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatementForAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementForAccess().getIteratorsForIndicesParserRuleCall_1_0());
				}
				lv_iterators_1_0=ruleForIndices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementForRule());
					}
					set(
						$current,
						"iterators",
						lv_iterators_1_0,
						"sc.modelica.xtext.ModelicaMo.ForIndices");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatementForAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementForAccess().getForEqsStatementParserRuleCall_3_0_0());
					}
					lv_forEqs_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementForRule());
						}
						add(
							$current,
							"forEqs",
							lv_forEqs_3_0,
							"sc.modelica.xtext.ModelicaMo.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatementForAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getStatementForAccess().getEndKeyword_4());
		}
		otherlv_6='for'
		{
			newLeafNode(otherlv_6, grammarAccess.getStatementForAccess().getForKeyword_5());
		}
	)
;

// Entry rule entryRuleForIndices
entryRuleForIndices returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForIndicesRule()); }
	iv_ruleForIndices=ruleForIndices
	{ $current=$iv_ruleForIndices.current; }
	EOF;

// Rule ForIndices
ruleForIndices returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_0_0());
				}
				lv_forIndex_0_0=ruleForIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForIndicesRule());
					}
					add(
						$current,
						"forIndex",
						lv_forIndex_0_0,
						"sc.modelica.xtext.ModelicaMo.ForIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getForIndicesAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForIndicesAccess().getForIndexForIndexParserRuleCall_1_1_0());
					}
					lv_forIndex_2_0=ruleForIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForIndicesRule());
						}
						add(
							$current,
							"forIndex",
							lv_forIndex_2_0,
							"sc.modelica.xtext.ModelicaMo.ForIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleForIndex
entryRuleForIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForIndexRule()); }
	iv_ruleForIndex=ruleForIndex
	{ $current=$iv_ruleForIndex.current; }
	EOF;

// Rule ForIndex
ruleForIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForIndexRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		otherlv_1='in'
		{
			newLeafNode(otherlv_1, grammarAccess.getForIndexAccess().getInKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForIndexAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForIndexRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatementWhile
entryRuleStatementWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementWhileRule()); }
	iv_ruleStatementWhile=ruleStatementWhile
	{ $current=$iv_ruleStatementWhile.current; }
	EOF;

// Rule StatementWhile
ruleStatementWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatementWhileAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementWhileAccess().getBoolExprExpressionParserRuleCall_1_0());
				}
				lv_boolExpr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementWhileRule());
					}
					set(
						$current,
						"boolExpr",
						lv_boolExpr_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatementWhileAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementWhileAccess().getStatStatementParserRuleCall_3_0_0());
					}
					lv_stat_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementWhileRule());
						}
						add(
							$current,
							"stat",
							lv_stat_3_0,
							"sc.modelica.xtext.ModelicaMo.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatementWhileAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getStatementWhileAccess().getEndKeyword_4());
		}
		otherlv_6='while'
		{
			newLeafNode(otherlv_6, grammarAccess.getStatementWhileAccess().getWhileKeyword_5());
		}
	)
;

// Entry rule entryRuleEquationWhen
entryRuleEquationWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationWhenRule()); }
	iv_ruleEquationWhen=ruleEquationWhen
	{ $current=$iv_ruleEquationWhen.current; }
	EOF;

// Rule EquationWhen
ruleEquationWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getEquationWhenAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationWhenAccess().getWhenExpExpressionParserRuleCall_1_0());
				}
				lv_whenExp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationWhenRule());
					}
					set(
						$current,
						"whenExp",
						lv_whenExp_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getEquationWhenAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationWhenAccess().getWhenEquationsEquationParserRuleCall_3_0_0());
					}
					lv_whenEquations_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationWhenRule());
						}
						add(
							$current,
							"whenEquations",
							lv_whenEquations_3_0,
							"sc.modelica.xtext.ModelicaMo.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getEquationWhenAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elsewhen'
			{
				newLeafNode(otherlv_5, grammarAccess.getEquationWhenAccess().getElsewhenKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationWhenAccess().getExpExpressionParserRuleCall_4_1_0());
					}
					lv_exp_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationWhenRule());
						}
						add(
							$current,
							"exp",
							lv_exp_6_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getEquationWhenAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationWhenAccess().getEquationItemEquationParserRuleCall_4_3_0_0());
						}
						lv_equationItem_8_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationWhenRule());
							}
							add(
								$current,
								"equationItem",
								lv_equationItem_8_0,
								"sc.modelica.xtext.ModelicaMo.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getEquationWhenAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getEquationWhenAccess().getEndKeyword_5());
		}
		otherlv_11='when'
		{
			newLeafNode(otherlv_11, grammarAccess.getEquationWhenAccess().getWhenKeyword_6());
		}
	)
;

// Entry rule entryRuleStatementWhen
entryRuleStatementWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementWhenRule()); }
	iv_ruleStatementWhen=ruleStatementWhen
	{ $current=$iv_ruleStatementWhen.current; }
	EOF;

// Rule StatementWhen
ruleStatementWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatementWhenAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementWhenAccess().getWhenExpExpressionParserRuleCall_1_0());
				}
				lv_whenExp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementWhenRule());
					}
					set(
						$current,
						"whenExp",
						lv_whenExp_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getStatementWhenAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementWhenAccess().getWhenEquationsStatementParserRuleCall_3_0_0());
					}
					lv_whenEquations_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementWhenRule());
						}
						add(
							$current,
							"whenEquations",
							lv_whenEquations_3_0,
							"sc.modelica.xtext.ModelicaMo.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatementWhenAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elsewhen'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementWhenAccess().getElsewhenKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementWhenAccess().getExpExpressionParserRuleCall_4_1_0());
					}
					lv_exp_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementWhenRule());
						}
						add(
							$current,
							"exp",
							lv_exp_6_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementWhenAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementWhenAccess().getEquationItemStatementParserRuleCall_4_3_0_0());
						}
						lv_equationItem_8_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementWhenRule());
							}
							add(
								$current,
								"equationItem",
								lv_equationItem_8_0,
								"sc.modelica.xtext.ModelicaMo.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getStatementWhenAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getStatementWhenAccess().getEndKeyword_5());
		}
		otherlv_11='when'
		{
			newLeafNode(otherlv_11, grammarAccess.getStatementWhenAccess().getWhenKeyword_6());
		}
	)
;

// Entry rule entryRuleConnectClause
entryRuleConnectClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectClauseRule()); }
	iv_ruleConnectClause=ruleConnectClause
	{ $current=$iv_ruleConnectClause.current; }
	EOF;

// Rule ConnectClause
ruleConnectClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connect'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectClauseAccess().getConnectKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectClauseAccess().getNode1ComponentReferenceParserRuleCall_2_0());
				}
				lv_node1_2_0=ruleComponentReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectClauseRule());
					}
					set(
						$current,
						"node1",
						lv_node1_2_0,
						"sc.modelica.xtext.ModelicaMo.ComponentReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectClauseAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectClauseAccess().getNode2ComponentReferenceParserRuleCall_4_0());
				}
				lv_node2_4_0=ruleComponentReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectClauseRule());
					}
					set(
						$current,
						"node2",
						lv_node2_4_0,
						"sc.modelica.xtext.ModelicaMo.ComponentReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectClauseAccess().getAnnotationAnnotationParserRuleCall_6_0());
				}
				lv_annotation_6_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectClauseRule());
					}
					set(
						$current,
						"annotation",
						lv_annotation_6_0,
						"sc.modelica.xtext.ModelicaMo.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0());
		}
		this_SimpleExpression_0=ruleSimpleExpression
		{
			$current = $this_SimpleExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='if'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getIfKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0());
					}
					lv_if_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"if",
							lv_if_2_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='then'
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionAccess().getThenKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0());
					}
					lv_then_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"then",
							lv_then_4_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5='elseif'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0());
						}
						lv_elseif_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionRule());
							}
							add(
								$current,
								"elseif",
								lv_elseif_6_0,
								"sc.modelica.xtext.ModelicaMo.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='then'
				{
					newLeafNode(otherlv_7, grammarAccess.getExpressionAccess().getThenKeyword_1_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0());
						}
						lv_elseifthen_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionRule());
							}
							add(
								$current,
								"elseifthen",
								lv_elseifthen_8_0,
								"sc.modelica.xtext.ModelicaMo.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='else'
			{
				newLeafNode(otherlv_9, grammarAccess.getExpressionAccess().getElseKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0());
					}
					lv_else_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_10_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleExpressionRule()); }
	iv_ruleSimpleExpression=ruleSimpleExpression
	{ $current=$iv_ruleSimpleExpression.current; }
	EOF;

// Rule SimpleExpression
ruleSimpleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleExpressionAccess().getStartLogicalExpressionParserRuleCall_0_0());
				}
				lv_start_0_0=ruleLogicalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
					}
					set(
						$current,
						"start",
						lv_start_0_0,
						"sc.modelica.xtext.ModelicaMo.LogicalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleExpressionAccess().getStepLogicalExpressionParserRuleCall_1_1_0());
					}
					lv_step_2_0=ruleLogicalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
						}
						set(
							$current,
							"step",
							lv_step_2_0,
							"sc.modelica.xtext.ModelicaMo.LogicalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=':'
				{
					newLeafNode(otherlv_3, grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleExpressionAccess().getStopLogicalExpressionParserRuleCall_1_2_1_0());
						}
						lv_stop_4_0=ruleLogicalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
							}
							set(
								$current,
								"stop",
								lv_stop_4_0,
								"sc.modelica.xtext.ModelicaMo.LogicalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalExpressionRule()); }
	iv_ruleLogicalExpression=ruleLogicalExpression
	{ $current=$iv_ruleLogicalExpression.current; }
	EOF;

// Rule LogicalExpression
ruleLogicalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0());
		}
		this_LogicalTerm_0=ruleLogicalTerm
		{
			$current = $this_LogicalTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalExpressionAccess().getLogicalExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalExpressionAccess().getRightLogicalTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleLogicalTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
						}
						add(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.LogicalTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalTerm
entryRuleLogicalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalTermRule()); }
	iv_ruleLogicalTerm=ruleLogicalTerm
	{ $current=$iv_ruleLogicalTerm.current; }
	EOF;

// Rule LogicalTerm
ruleLogicalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0());
		}
		this_LogicalFactor_0=ruleLogicalFactor
		{
			$current = $this_LogicalFactor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalTermAccess().getLogicalTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getLogicalTermAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalTermAccess().getRightLogicalFactorParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleLogicalFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.LogicalFactor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalFactor
entryRuleLogicalFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalFactorRule()); }
	iv_ruleLogicalFactor=ruleLogicalFactor
	{ $current=$iv_ruleLogicalFactor.current; }
	EOF;

// Rule LogicalFactor
ruleLogicalFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='not'
			{
				newLeafNode(otherlv_0, grammarAccess.getLogicalFactorAccess().getNotKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall_1());
		}
		this_Relation_1=ruleRelation
		{
			$current = $this_Relation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0());
		}
		this_ArithmeticExpression_0=ruleArithmeticExpression
		{
			$current = $this_ArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationAccess().getRelationLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getRelationAccess().getRelOpParserRuleCall_1_1());
			}
			ruleRelOp
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRelOp
entryRuleRelOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelOpRule()); }
	iv_ruleRelOp=ruleRelOp
	{ $current=$iv_ruleRelOp.current.getText(); }
	EOF;

// Rule RelOp
ruleRelOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_0());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_1());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignKeyword_2());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_3());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5());
		}
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionUnaryParserRuleCall_0());
		}
		this_ArithmeticExpressionUnary_0=ruleArithmeticExpressionUnary
		{
			$current = $this_ArithmeticExpressionUnary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getAddOpParserRuleCall_1_1());
			}
			ruleAddOp
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getRightArithmeticExpression2ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithmeticExpression2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.ArithmeticExpression2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArithmeticExpression2
entryRuleArithmeticExpression2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpression2Rule()); }
	iv_ruleArithmeticExpression2=ruleArithmeticExpression2
	{ $current=$iv_ruleArithmeticExpression2.current; }
	EOF;

// Rule ArithmeticExpression2
ruleArithmeticExpression2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticExpression2Access().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getArithmeticExpression2Access().getArithmeticExpression2LeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getArithmeticExpression2Access().getAddOpParserRuleCall_1_1());
			}
			ruleAddOp
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpression2Access().getRightArithmeticExpression2ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithmeticExpression2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpression2Rule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.ArithmeticExpression2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArithmeticExpressionUnary
entryRuleArithmeticExpressionUnary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionUnaryRule()); }
	iv_ruleArithmeticExpressionUnary=ruleArithmeticExpressionUnary
	{ $current=$iv_ruleArithmeticExpressionUnary.current; }
	EOF;

// Rule ArithmeticExpressionUnary
ruleArithmeticExpressionUnary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticExpressionUnaryAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getArithmeticExpressionUnaryAccess().getAddOpParserRuleCall_1_0());
			}
			ruleAddOp
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionUnaryAccess().getExpTermParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionUnaryRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"sc.modelica.xtext.ModelicaMo.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAddOp
entryRuleAddOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAddOpRule()); }
	iv_ruleAddOp=ruleAddOp
	{ $current=$iv_ruleAddOp.current.getText(); }
	EOF;

// Rule AddOp
ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='.+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2());
		}
		    |
		kw='.-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3());
		}
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTermAccess().getTermLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTermAccess().getMulOpParserRuleCall_1_1());
			}
			ruleMulOp
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"sc.modelica.xtext.ModelicaMo.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMulOp
entryRuleMulOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMulOpRule()); }
	iv_ruleMulOp=ruleMulOp
	{ $current=$iv_ruleMulOp.current.getText(); }
	EOF;

// Rule MulOp
ruleMulOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getSolidusKeyword_1());
		}
		    |
		kw='.*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2());
		}
		    |
		kw='./'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3());
		}
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getFactorAccess().getFactorLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='^'
				{
					newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0());
				}
				    |
				otherlv_3='.^'
				{
					newLeafNode(otherlv_3, grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_4_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"sc.modelica.xtext.ModelicaMo.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_0_0(),
						$current);
				}
			)
			this_UNSIGNED_INTEGER_1=RULE_UNSIGNED_INTEGER
			{
				newLeafNode(this_UNSIGNED_INTEGER_1, grammarAccess.getPrimaryAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_1_0(),
						$current);
				}
			)
			this_UNSIGNED_NUMBER_3=RULE_UNSIGNED_NUMBER
			{
				newLeafNode(this_UNSIGNED_NUMBER_3, grammarAccess.getPrimaryAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_2_0(),
						$current);
				}
			)
			this_STRING_5=RULE_STRING
			{
				newLeafNode(this_STRING_5, grammarAccess.getPrimaryAccess().getSTRINGTerminalRuleCall_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_3_0(),
						$current);
				}
			)
			otherlv_7='false'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getFalseKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_4_0(),
						$current);
				}
			)
			otherlv_9='true'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimaryAccess().getTrueKeyword_4_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_5_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryAccess().getNameNameParserRuleCall_5_1_0_0());
						}
						lv_name_11_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryRule());
							}
							set(
								$current,
								"name",
								lv_name_11_0,
								"sc.modelica.xtext.ModelicaMo.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				otherlv_12='der'
				{
					newLeafNode(otherlv_12, grammarAccess.getPrimaryAccess().getDerKeyword_5_1_1());
				}
				    |
				otherlv_13='initial'
				{
					newLeafNode(otherlv_13, grammarAccess.getPrimaryAccess().getInitialKeyword_5_1_2());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getFcaFunctionCallArgsParserRuleCall_5_2_0());
					}
					lv_fca_14_0=ruleFunctionCallArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"fca",
							lv_fca_14_0,
							"sc.modelica.xtext.ModelicaMo.FunctionCallArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_6());
		}
		this_ComponentReference_15=ruleComponentReference
		{
			$current = $this_ComponentReference_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_7_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getOutputExpressionListParserRuleCall_7_1());
			}
			this_OutputExpressionList_17=ruleOutputExpressionList
			{
				$current = $this_OutputExpressionList_17.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_18=')'
			{
				newLeafNode(otherlv_18, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_7_2());
			}
		)
		    |
		(
			otherlv_19='['
			{
				newLeafNode(otherlv_19, grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_1_0());
					}
					lv_list_20_0=ruleExprExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						add(
							$current,
							"list",
							lv_list_20_0,
							"sc.modelica.xtext.ModelicaMo.ExprExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=';'
				{
					newLeafNode(otherlv_21, grammarAccess.getPrimaryAccess().getSemicolonKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryAccess().getListExprExpressionListParserRuleCall_8_2_1_0());
						}
						lv_list_22_0=ruleExprExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryRule());
							}
							add(
								$current,
								"list",
								lv_list_22_0,
								"sc.modelica.xtext.ModelicaMo.ExprExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23=']'
			{
				newLeafNode(otherlv_23, grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_8_3());
			}
		)
		    |
		(
			otherlv_24='{'
			{
				newLeafNode(otherlv_24, grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getFaFunctionArgumentsParserRuleCall_9_1_0());
					}
					lv_fa_25_0=ruleFunctionArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"fa",
							lv_fa_25_0,
							"sc.modelica.xtext.ModelicaMo.FunctionArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_26='}'
			{
				newLeafNode(otherlv_26, grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_9_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPrimaryAction_10_0(),
						$current);
				}
			)
			otherlv_28='end'
			{
				newLeafNode(otherlv_28, grammarAccess.getPrimaryAccess().getEndKeyword_10_1());
			}
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current; }
	EOF;

// Rule Name
ruleName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNameAccess().getNameAction_0(),
					$current);
			}
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getNameAccess().getFullStopKeyword_1());
			}
		)?
		this_IDENT_2=RULE_IDENT
		{
			newLeafNode(this_IDENT_2, grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2());
		}
		(
			otherlv_3='.'
			{
				newLeafNode(otherlv_3, grammarAccess.getNameAccess().getFullStopKeyword_3_0());
			}
			(
				(
					lv_id_4_0=RULE_IDENT
					{
						newLeafNode(lv_id_4_0, grammarAccess.getNameAccess().getIdIDENTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNameRule());
						}
						addWithLastConsumed(
							$current,
							"id",
							lv_id_4_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComponentReference
entryRuleComponentReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentReferenceRule()); }
	iv_ruleComponentReference=ruleComponentReference
	{ $current=$iv_ruleComponentReference.current; }
	EOF;

// Rule ComponentReference
ruleComponentReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComponentReferenceAccess().getComponentReferenceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getComponentReferenceAccess().getFullStopKeyword_1());
			}
		)?
		this_IDENT_2=RULE_IDENT
		{
			newLeafNode(this_IDENT_2, grammarAccess.getComponentReferenceAccess().getIDENTTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_3_0());
				}
				lv_subs_3_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentReferenceRule());
					}
					add(
						$current,
						"subs",
						lv_subs_3_0,
						"sc.modelica.xtext.ModelicaMo.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getComponentReferenceAccess().getFullStopKeyword_4_0());
			}
			(
				(
					lv_id_5_0=RULE_IDENT
					{
						newLeafNode(lv_id_5_0, grammarAccess.getComponentReferenceAccess().getIdIDENTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentReferenceRule());
						}
						addWithLastConsumed(
							$current,
							"id",
							lv_id_5_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentReferenceAccess().getSubsArraySubscriptsParserRuleCall_4_2_0());
					}
					lv_subs_6_0=ruleArraySubscripts
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentReferenceRule());
						}
						add(
							$current,
							"subs",
							lv_subs_6_0,
							"sc.modelica.xtext.ModelicaMo.ArraySubscripts");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleFunctionCallArgs
entryRuleFunctionCallArgs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallArgsRule()); }
	iv_ruleFunctionCallArgs=ruleFunctionCallArgs
	{ $current=$iv_ruleFunctionCallArgs.current; }
	EOF;

// Rule FunctionCallArgs
ruleFunctionCallArgs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallArgsAccess().getFunctionArgsFunctionArgumentsParserRuleCall_2_0());
				}
				lv_functionArgs_2_0=ruleFunctionArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallArgsRule());
					}
					set(
						$current,
						"functionArgs",
						lv_functionArgs_2_0,
						"sc.modelica.xtext.ModelicaMo.FunctionArguments");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFunctionArguments
entryRuleFunctionArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgumentsRule()); }
	iv_ruleFunctionArguments=ruleFunctionArguments
	{ $current=$iv_ruleFunctionArguments.current; }
	EOF;

// Rule FunctionArguments
ruleFunctionArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getFunctionArgumentFunctionArgumentParserRuleCall_0_0_0());
					}
					lv_functionArgument_0_0=ruleFunctionArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
						}
						set(
							$current,
							"functionArgument",
							lv_functionArgument_0_0,
							"sc.modelica.xtext.ModelicaMo.FunctionArgument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_1=','
					{
						newLeafNode(otherlv_1, grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0());
							}
							lv_args_2_0=ruleFunctionArguments
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
								}
								add(
									$current,
									"args",
									lv_args_2_0,
									"sc.modelica.xtext.ModelicaMo.FunctionArguments");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_3='for'
					{
						newLeafNode(otherlv_3, grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getForIndicesForIndicesParserRuleCall_0_1_1_1_0());
							}
							lv_forIndices_4_0=ruleForIndices
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
								}
								add(
									$current,
									"forIndices",
									lv_forIndices_4_0,
									"sc.modelica.xtext.ModelicaMo.ForIndices");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_0());
				}
				lv_namedArguments_5_0=ruleNamedArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
					}
					set(
						$current,
						"namedArguments",
						lv_namedArguments_5_0,
						"sc.modelica.xtext.ModelicaMo.NamedArguments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNamedArguments
entryRuleNamedArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedArgumentsRule()); }
	iv_ruleNamedArguments=ruleNamedArguments
	{ $current=$iv_ruleNamedArguments.current; }
	EOF;

// Rule NamedArguments
ruleNamedArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedArgumentsAccess().getNamedArgumentNamedArgumentParserRuleCall_0_0());
				}
				lv_namedArgument_0_0=ruleNamedArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedArgumentsRule());
					}
					add(
						$current,
						"namedArgument",
						lv_namedArgument_0_0,
						"sc.modelica.xtext.ModelicaMo.NamedArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedArgumentsAccess().getNamedArgumentsNamedArgumentsParserRuleCall_1_1_0());
					}
					lv_namedArguments_2_0=ruleNamedArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedArgumentsRule());
						}
						set(
							$current,
							"namedArguments",
							lv_namedArguments_2_0,
							"sc.modelica.xtext.ModelicaMo.NamedArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNamedArgument
entryRuleNamedArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedArgumentRule()); }
	iv_ruleNamedArgument=ruleNamedArgument
	{ $current=$iv_ruleNamedArgument.current; }
	EOF;

// Rule NamedArgument
ruleNamedArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDENT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getNamedArgumentAccess().getNameIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNamedArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedArgumentAccess().getFunctionArgumentFunctionArgumentParserRuleCall_2_0());
				}
				lv_functionArgument_2_0=ruleFunctionArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
					}
					set(
						$current,
						"functionArgument",
						lv_functionArgument_2_0,
						"sc.modelica.xtext.ModelicaMo.FunctionArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgumentRule()); }
	iv_ruleFunctionArgument=ruleFunctionArgument
	{ $current=$iv_ruleFunctionArgument.current; }
	EOF;

// Rule FunctionArgument
ruleFunctionArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='function'
			{
				newLeafNode(otherlv_0, grammarAccess.getFunctionArgumentAccess().getFunctionKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionArgumentAccess().getNameNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionArgumentRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"sc.modelica.xtext.ModelicaMo.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionArgumentAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionArgumentAccess().getNamedArgumentsNamedArgumentsParserRuleCall_0_3_0());
					}
					lv_namedArguments_3_0=ruleNamedArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionArgumentRule());
						}
						set(
							$current,
							"namedArguments",
							lv_namedArguments_3_0,
							"sc.modelica.xtext.ModelicaMo.NamedArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionArgumentAccess().getRightParenthesisKeyword_0_4());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionArgumentAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionArgumentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOutputExpressionList
entryRuleOutputExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputExpressionListRule()); }
	iv_ruleOutputExpressionList=ruleOutputExpressionList
	{ $current=$iv_ruleOutputExpressionList.current; }
	EOF;

// Rule OutputExpressionList
ruleOutputExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOutputExpressionListAccess().getOutputExpresionListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_1_0());
				}
				lv_expressions_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputExpressionListRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_1_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputExpressionListAccess().getExpressionsExpressionParserRuleCall_2_1_0());
					}
					lv_expressions_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputExpressionListRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_3_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleExprExpressionList
entryRuleExprExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprExpressionListRule()); }
	iv_ruleExprExpressionList=ruleExprExpressionList
	{ $current=$iv_ruleExprExpressionList.current; }
	EOF;

// Rule ExprExpressionList
ruleExprExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprExpressionListRule());
					}
					add(
						$current,
						"exp",
						lv_exp_0_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExprExpressionListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprExpressionListAccess().getExpExpressionParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprExpressionListRule());
						}
						add(
							$current,
							"exp",
							lv_exp_2_0,
							"sc.modelica.xtext.ModelicaMo.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArraySubscripts
entryRuleArraySubscripts returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArraySubscriptsRule()); }
	iv_ruleArraySubscripts=ruleArraySubscripts
	{ $current=$iv_ruleArraySubscripts.current; }
	EOF;

// Rule ArraySubscripts
ruleArraySubscripts returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0());
				}
				lv_subscripts_1_0=ruleSubscript
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArraySubscriptsRule());
					}
					add(
						$current,
						"subscripts",
						lv_subscripts_1_0,
						"sc.modelica.xtext.ModelicaMo.Subscript");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0());
					}
					lv_subscripts_3_0=ruleSubscript
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArraySubscriptsRule());
						}
						add(
							$current,
							"subscripts",
							lv_subscripts_3_0,
							"sc.modelica.xtext.ModelicaMo.Subscript");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSubscript
entryRuleSubscript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubscriptRule()); }
	iv_ruleSubscript=ruleSubscript
	{ $current=$iv_ruleSubscript.current; }
	EOF;

// Rule Subscript
ruleSubscript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSubscriptAccess().getSubscriptAction_0_0(),
						$current);
				}
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getSubscriptAccess().getColonKeyword_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_2=ruleExpression
		{
			$current = $this_Expression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommentAccess().getStringCommentStringCommentParserRuleCall_0_0());
				}
				lv_stringComment_0_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommentRule());
					}
					set(
						$current,
						"stringComment",
						lv_stringComment_0_0,
						"sc.modelica.xtext.ModelicaMo.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0());
				}
				lv_annotation_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommentRule());
					}
					set(
						$current,
						"annotation",
						lv_annotation_1_0,
						"sc.modelica.xtext.ModelicaMo.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStringComment
entryRuleStringComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringCommentRule()); }
	iv_ruleStringComment=ruleStringComment
	{ $current=$iv_ruleStringComment.current; }
	EOF;

// Rule StringComment
ruleStringComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringCommentAccess().getStringCommentAction_0(),
					$current);
			}
		)
		this_STRING_1=RULE_STRING
		{
			newLeafNode(this_STRING_1, grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1());
		}
		(
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getStringCommentAccess().getPlusSignKeyword_2_0());
			}
			(
				(
					lv_str_3_0=RULE_STRING
					{
						newLeafNode(lv_str_3_0, grammarAccess.getStringCommentAccess().getStrSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStringCommentRule());
						}
						addWithLastConsumed(
							$current,
							"str",
							lv_str_3_0,
							"sc.modelica.xtext.ModelicaMo.STRING");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAssert
entryRuleAssert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertRule()); }
	iv_ruleAssert=ruleAssert
	{ $current=$iv_ruleAssert.current; }
	EOF;

// Rule Assert
ruleAssert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assert'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssertAccess().getAssertKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAssertAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAssertAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertAccess().getMessageExpressionParserRuleCall_4_0());
				}
				lv_message_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertRule());
					}
					set(
						$current,
						"message",
						lv_message_4_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAssertAccess().getCommaKeyword_5_0());
			}
			(
				otherlv_6='level'
				{
					newLeafNode(otherlv_6, grammarAccess.getAssertAccess().getLevelKeyword_5_1_0());
				}
				otherlv_7='='
				{
					newLeafNode(otherlv_7, grammarAccess.getAssertAccess().getEqualsSignKeyword_5_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertAccess().getLevelAssertionLevelEnumRuleCall_5_2_0());
					}
					lv_level_8_0=ruleAssertionLevel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertRule());
						}
						set(
							$current,
							"level",
							lv_level_8_0,
							"sc.modelica.xtext.ModelicaMo.AssertionLevel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getAssertAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='annotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_2_0());
				}
				lv_args_2_0=ruleAnnotationArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.AnnotationArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotationAccess().getArgsAnnotationArgParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleAnnotationArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotationRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.AnnotationArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAnnotationArg
entryRuleAnnotationArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationArgRule()); }
	iv_ruleAnnotationArg=ruleAnnotationArg
	{ $current=$iv_ruleAnnotationArg.current; }
	EOF;

// Rule AnnotationArg
ruleAnnotationArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getAnnotationCodeParserRuleCall_0());
		}
		this_AnnotationCode_0=ruleAnnotationCode
		{
			$current = $this_AnnotationCode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getPlacementParserRuleCall_1());
		}
		this_Placement_1=rulePlacement
		{
			$current = $this_Placement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getLineParserRuleCall_2());
		}
		this_Line_2=ruleLine
		{
			$current = $this_Line_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getAnnotationLayerParserRuleCall_3());
		}
		this_AnnotationLayer_3=ruleAnnotationLayer
		{
			$current = $this_AnnotationLayer_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getAnnotationDocumentationParserRuleCall_4());
		}
		this_AnnotationDocumentation_4=ruleAnnotationDocumentation
		{
			$current = $this_AnnotationDocumentation_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getDialogParserRuleCall_5());
		}
		this_Dialog_5=ruleDialog
		{
			$current = $this_Dialog_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getAnnotationExperimentParserRuleCall_6());
		}
		this_AnnotationExperiment_6=ruleAnnotationExperiment
		{
			$current = $this_AnnotationExperiment_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getChoicesParserRuleCall_7());
		}
		this_Choices_7=ruleChoices
		{
			$current = $this_Choices_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationArgAccess().getDefComponentNameParserRuleCall_8());
		}
		this_DefComponentName_8=ruleDefComponentName
		{
			$current = $this_DefComponentName_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefComponentName
entryRuleDefComponentName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefComponentNameRule()); }
	iv_ruleDefComponentName=ruleDefComponentName
	{ $current=$iv_ruleDefComponentName.current; }
	EOF;

// Rule DefComponentName
ruleDefComponentName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='defaultComponentName'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefComponentNameAccess().getDefaultComponentNameKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDefComponentNameAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDefComponentNameAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefComponentNameRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleChoices
entryRuleChoices returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChoicesRule()); }
	iv_ruleChoices=ruleChoices
	{ $current=$iv_ruleChoices.current; }
	EOF;

// Rule Choices
ruleChoices returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='choices'
		{
			newLeafNode(otherlv_0, grammarAccess.getChoicesAccess().getChoicesKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getChoicesAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_types_2_0=RULE_IDENT
				{
					newLeafNode(lv_types_2_0, grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChoicesRule());
					}
					addWithLastConsumed(
						$current,
						"types",
						lv_types_2_0,
						"sc.modelica.xtext.ModelicaMo.IDENT");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getChoicesAccess().getEqualsSignKeyword_3());
		}
		(
			(
				(
					lv_values_4_1='true'
					{
						newLeafNode(lv_values_4_1, grammarAccess.getChoicesAccess().getValuesTrueKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChoicesRule());
						}
						addWithLastConsumed($current, "values", lv_values_4_1, null);
					}
					    |
					lv_values_4_2='false'
					{
						newLeafNode(lv_values_4_2, grammarAccess.getChoicesAccess().getValuesFalseKeyword_4_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChoicesRule());
						}
						addWithLastConsumed($current, "values", lv_values_4_2, null);
					}
				)
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getChoicesAccess().getCommaKeyword_5_0());
			}
			(
				(
					lv_types_6_0=RULE_IDENT
					{
						newLeafNode(lv_types_6_0, grammarAccess.getChoicesAccess().getTypesIDENTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChoicesRule());
						}
						addWithLastConsumed(
							$current,
							"types",
							lv_types_6_0,
							"sc.modelica.xtext.ModelicaMo.IDENT");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getChoicesAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					(
						lv_values_8_1='true'
						{
							newLeafNode(lv_values_8_1, grammarAccess.getChoicesAccess().getValuesTrueKeyword_5_3_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChoicesRule());
							}
							addWithLastConsumed($current, "values", lv_values_8_1, null);
						}
						    |
						lv_values_8_2='false'
						{
							newLeafNode(lv_values_8_2, grammarAccess.getChoicesAccess().getValuesFalseKeyword_5_3_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChoicesRule());
							}
							addWithLastConsumed($current, "values", lv_values_8_2, null);
						}
					)
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getChoicesAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleAnnotationCode
entryRuleAnnotationCode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationCodeRule()); }
	iv_ruleAnnotationCode=ruleAnnotationCode
	{ $current=$iv_ruleAnnotationCode.current; }
	EOF;

// Rule AnnotationCode
ruleAnnotationCode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationCodeAccess().getFlagCodeGenerationFlagParserRuleCall_0_0());
				}
				lv_flag_0_0=ruleCodeGenerationFlag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationCodeRule());
					}
					set(
						$current,
						"flag",
						lv_flag_0_0,
						"sc.modelica.xtext.ModelicaMo.CodeGenerationFlag");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationCodeAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					lv_value_2_1='true'
					{
						newLeafNode(lv_value_2_1, grammarAccess.getAnnotationCodeAccess().getValueTrueKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnnotationCodeRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_1, null);
					}
					    |
					lv_value_2_2='false'
					{
						newLeafNode(lv_value_2_2, grammarAccess.getAnnotationCodeAccess().getValueFalseKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnnotationCodeRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCodeGenerationFlag
entryRuleCodeGenerationFlag returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCodeGenerationFlagRule()); }
	iv_ruleCodeGenerationFlag=ruleCodeGenerationFlag
	{ $current=$iv_ruleCodeGenerationFlag.current.getText(); }
	EOF;

// Rule CodeGenerationFlag
ruleCodeGenerationFlag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Evaluate'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeGenerationFlagAccess().getEvaluateKeyword_0());
		}
		    |
		kw='HideResult'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeGenerationFlagAccess().getHideResultKeyword_1());
		}
		    |
		kw='Inline'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeGenerationFlagAccess().getInlineKeyword_2());
		}
		    |
		kw='LateInline'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeGenerationFlagAccess().getLateInlineKeyword_3());
		}
		    |
		kw='GenerateEvents'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeGenerationFlagAccess().getGenerateEventsKeyword_4());
		}
	)
;

// Entry rule entryRuleAnnotationLayer
entryRuleAnnotationLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationLayerRule()); }
	iv_ruleAnnotationLayer=ruleAnnotationLayer
	{ $current=$iv_ruleAnnotationLayer.current; }
	EOF;

// Rule AnnotationLayer
ruleAnnotationLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnnotationLayerAccess().getLayerIconParserRuleCall_0());
		}
		this_LayerIcon_0=ruleLayerIcon
		{
			$current = $this_LayerIcon_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnnotationLayerAccess().getLayerDiagramParserRuleCall_1());
		}
		this_LayerDiagram_1=ruleLayerDiagram
		{
			$current = $this_LayerDiagram_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLayerIcon
entryRuleLayerIcon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerIconRule()); }
	iv_ruleLayerIcon=ruleLayerIcon
	{ $current=$iv_ruleLayerIcon.current; }
	EOF;

// Rule LayerIcon
ruleLayerIcon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Icon'
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerIconAccess().getIconKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLayerIconAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLayerIconAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_2_0_0());
					}
					lv_coordinateSystem_2_0=ruleCoordinateSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLayerIconRule());
						}
						set(
							$current,
							"coordinateSystem",
							lv_coordinateSystem_2_0,
							"sc.modelica.xtext.ModelicaMo.CoordinateSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getLayerIconAccess().getCommaKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerIconAccess().getGraphicsGraphicsParserRuleCall_3_0());
				}
				lv_graphics_4_0=ruleGraphics
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerIconRule());
					}
					set(
						$current,
						"graphics",
						lv_graphics_4_0,
						"sc.modelica.xtext.ModelicaMo.Graphics");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLayerIconAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLayerDiagram
entryRuleLayerDiagram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerDiagramRule()); }
	iv_ruleLayerDiagram=ruleLayerDiagram
	{ $current=$iv_ruleLayerDiagram.current; }
	EOF;

// Rule LayerDiagram
ruleLayerDiagram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLayerDiagramAccess().getLayerDiagramAction_0(),
					$current);
			}
		)
		otherlv_1='Diagram'
		{
			newLeafNode(otherlv_1, grammarAccess.getLayerDiagramAccess().getDiagramKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLayerDiagramAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerDiagramAccess().getCoordinateSystemCoordinateSpecificationParserRuleCall_3_0());
				}
				lv_coordinateSystem_3_0=ruleCoordinateSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerDiagramRule());
					}
					set(
						$current,
						"coordinateSystem",
						lv_coordinateSystem_3_0,
						"sc.modelica.xtext.ModelicaMo.CoordinateSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getLayerDiagramAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLayerDiagramAccess().getGraphicsGraphicsParserRuleCall_4_1_0());
					}
					lv_graphics_5_0=ruleGraphics
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLayerDiagramRule());
						}
						set(
							$current,
							"graphics",
							lv_graphics_5_0,
							"sc.modelica.xtext.ModelicaMo.Graphics");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getLayerDiagramAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleCoordinateSpecification
entryRuleCoordinateSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoordinateSpecificationRule()); }
	iv_ruleCoordinateSpecification=ruleCoordinateSpecification
	{ $current=$iv_ruleCoordinateSpecification.current; }
	EOF;

// Rule CoordinateSpecification
ruleCoordinateSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='coordinateSystem'
		{
			newLeafNode(otherlv_0, grammarAccess.getCoordinateSpecificationAccess().getCoordinateSystemKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCoordinateSpecificationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleCoordinateSpecificationArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoordinateSpecificationRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.CoordinateSpecificationArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getCoordinateSpecificationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCoordinateSpecificationAccess().getArgsCoordinateSpecificationArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleCoordinateSpecificationArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCoordinateSpecificationRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.CoordinateSpecificationArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCoordinateSpecificationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleCoordinateSpecificationArgs
entryRuleCoordinateSpecificationArgs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoordinateSpecificationArgsRule()); }
	iv_ruleCoordinateSpecificationArgs=ruleCoordinateSpecificationArgs
	{ $current=$iv_ruleCoordinateSpecificationArgs.current; }
	EOF;

// Rule CoordinateSpecificationArgs
ruleCoordinateSpecificationArgs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCoordinateSpecificationArgsAccess().getExtentParserRuleCall_0());
		}
		this_Extent_0=ruleExtent
		{
			$current = $this_Extent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCoordinateSpecificationArgsAccess().getPreserveARParserRuleCall_1());
		}
		this_PreserveAR_1=rulePreserveAR
		{
			$current = $this_PreserveAR_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCoordinateSpecificationArgsAccess().getInitialScaleParserRuleCall_2());
		}
		this_InitialScale_2=ruleInitialScale
		{
			$current = $this_InitialScale_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCoordinateSpecificationArgsAccess().getGridParserRuleCall_3());
		}
		this_Grid_3=ruleGrid
		{
			$current = $this_Grid_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExtent
entryRuleExtent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtentRule()); }
	iv_ruleExtent=ruleExtent
	{ $current=$iv_ruleExtent.current; }
	EOF;

// Rule Extent
ruleExtent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extent'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtentAccess().getExtentKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getExtentAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExtentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtentAccess().getP1PointParserRuleCall_3_0());
				}
				lv_p1_3_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtentRule());
					}
					set(
						$current,
						"p1",
						lv_p1_3_0,
						"sc.modelica.xtext.ModelicaMo.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getExtentAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtentAccess().getP2PointParserRuleCall_5_0());
				}
				lv_p2_5_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtentRule());
					}
					set(
						$current,
						"p2",
						lv_p2_5_0,
						"sc.modelica.xtext.ModelicaMo.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getExtentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePreserveAR
entryRulePreserveAR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreserveARRule()); }
	iv_rulePreserveAR=rulePreserveAR
	{ $current=$iv_rulePreserveAR.current; }
	EOF;

// Rule PreserveAR
rulePreserveAR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='preserveAspectRatio'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreserveARAccess().getPreserveAspectRatioKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getPreserveARAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					lv_value_2_1='true'
					{
						newLeafNode(lv_value_2_1, grammarAccess.getPreserveARAccess().getValueTrueKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPreserveARRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_1, null);
					}
					    |
					lv_value_2_2='false'
					{
						newLeafNode(lv_value_2_2, grammarAccess.getPreserveARAccess().getValueFalseKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPreserveARRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInitialScale
entryRuleInitialScale returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialScaleRule()); }
	iv_ruleInitialScale=ruleInitialScale
	{ $current=$iv_ruleInitialScale.current; }
	EOF;

// Rule InitialScale
ruleInitialScale returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='initialScale'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialScaleAccess().getInitialScaleKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialScaleAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_UNSIGNED_NUMBER
				{
					newLeafNode(lv_value_2_0, grammarAccess.getInitialScaleAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialScaleRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
				}
			)
		)
	)
;

// Entry rule entryRuleGrid
entryRuleGrid returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGridRule()); }
	iv_ruleGrid=ruleGrid
	{ $current=$iv_ruleGrid.current; }
	EOF;

// Rule Grid
ruleGrid returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='grid'
		{
			newLeafNode(otherlv_0, grammarAccess.getGridAccess().getGridKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getGridAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGridAccess().getValuePointParserRuleCall_2_0());
				}
				lv_value_2_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGridRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePlacement
entryRulePlacement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlacementRule()); }
	iv_rulePlacement=rulePlacement
	{ $current=$iv_rulePlacement.current; }
	EOF;

// Rule Placement
rulePlacement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Placement'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPlacementAccess().getNamePlacementKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlacementRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Placement");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPlacementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_2_0());
				}
				lv_args_2_0=rulePlacementArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlacementRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.PlacementArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getPlacementAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPlacementAccess().getArgsPlacementArgParserRuleCall_3_1_0());
					}
					lv_args_4_0=rulePlacementArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlacementRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.PlacementArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPlacementAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePlacementArg
entryRulePlacementArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlacementArgRule()); }
	iv_rulePlacementArg=rulePlacementArg
	{ $current=$iv_rulePlacementArg.current; }
	EOF;

// Rule PlacementArg
rulePlacementArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlacementArgAccess().getVisibleParserRuleCall_0());
		}
		this_Visible_0=ruleVisible
		{
			$current = $this_Visible_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPlacementArgAccess().getTransformationParserRuleCall_1());
		}
		this_Transformation_1=ruleTransformation
		{
			$current = $this_Transformation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVisible
entryRuleVisible returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisibleRule()); }
	iv_ruleVisible=ruleVisible
	{ $current=$iv_ruleVisible.current; }
	EOF;

// Rule Visible
ruleVisible returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='visible'
		{
			newLeafNode(otherlv_0, grammarAccess.getVisibleAccess().getVisibleKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVisibleAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					lv_value_2_1='true'
					{
						newLeafNode(lv_value_2_1, grammarAccess.getVisibleAccess().getValueTrueKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVisibleRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_1, null);
					}
					    |
					lv_value_2_2='false'
					{
						newLeafNode(lv_value_2_2, grammarAccess.getVisibleAccess().getValueFalseKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVisibleRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTransformation
entryRuleTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationRule()); }
	iv_ruleTransformation=ruleTransformation
	{ $current=$iv_ruleTransformation.current; }
	EOF;

// Rule Transformation
ruleTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_1='transformation'
					{
						newLeafNode(lv_name_0_1, grammarAccess.getTransformationAccess().getNameTransformationKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransformationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_1, null);
					}
					    |
					lv_name_0_2='iconTransformation'
					{
						newLeafNode(lv_name_0_2, grammarAccess.getTransformationAccess().getNameIconTransformationKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransformationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_2, null);
					}
				)
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_2_0());
				}
				lv_args_2_0=ruleTransformationArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.TransformationArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTransformationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationAccess().getArgsTransformationArgParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleTransformationArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.TransformationArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransformationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTransformationArg
entryRuleTransformationArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationArgRule()); }
	iv_ruleTransformationArg=ruleTransformationArg
	{ $current=$iv_ruleTransformationArg.current; }
	EOF;

// Rule TransformationArg
ruleTransformationArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTransformationArgAccess().getOriginParserRuleCall_0());
		}
		this_Origin_0=ruleOrigin
		{
			$current = $this_Origin_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationArgAccess().getExtentParserRuleCall_1());
		}
		this_Extent_1=ruleExtent
		{
			$current = $this_Extent_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationArgAccess().getRotationParserRuleCall_2());
		}
		this_Rotation_2=ruleRotation
		{
			$current = $this_Rotation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='rotation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRotationAccess().getNameRotationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRotationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "rotation");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotationAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotationRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrigin
entryRuleOrigin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOriginRule()); }
	iv_ruleOrigin=ruleOrigin
	{ $current=$iv_ruleOrigin.current; }
	EOF;

// Rule Origin
ruleOrigin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='origin'
		{
			newLeafNode(otherlv_0, grammarAccess.getOriginAccess().getOriginKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getOriginAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOriginAccess().getPointPointParserRuleCall_2_0());
				}
				lv_point_2_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOriginRule());
					}
					set(
						$current,
						"point",
						lv_point_2_0,
						"sc.modelica.xtext.ModelicaMo.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getXNumParserRuleCall_1_0());
				}
				lv_x_1_0=rulenum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"sc.modelica.xtext.ModelicaMo.num");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getPointAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getYNumParserRuleCall_3_0());
				}
				lv_y_3_0=rulenum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"y",
						lv_y_3_0,
						"sc.modelica.xtext.ModelicaMo.num");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPointAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulenum
entryRulenum returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumRule()); }
	iv_rulenum=rulenum
	{ $current=$iv_rulenum.current.getText(); }
	EOF;

// Rule num
rulenum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_UNSIGNED_INTEGER_0=RULE_UNSIGNED_INTEGER
		{
			$current.merge(this_UNSIGNED_INTEGER_0);
		}
		{
			newLeafNode(this_UNSIGNED_INTEGER_0, grammarAccess.getNumAccess().getUNSIGNED_INTEGERTerminalRuleCall_0());
		}
		    |
		this_UNSIGNED_NUMBER_1=RULE_UNSIGNED_NUMBER
		{
			$current.merge(this_UNSIGNED_NUMBER_1);
		}
		{
			newLeafNode(this_UNSIGNED_NUMBER_1, grammarAccess.getNumAccess().getUNSIGNED_NUMBERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleRadius
entryRuleRadius returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRadiusRule()); }
	iv_ruleRadius=ruleRadius
	{ $current=$iv_ruleRadius.current; }
	EOF;

// Rule Radius
ruleRadius returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='radius'
			{
				newLeafNode(otherlv_0, grammarAccess.getRadiusAccess().getRadiusKeyword_0_0());
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getRadiusAccess().getEqualsSignKeyword_0_1());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRadiusAccess().getRadiusAction_0_2(),
						$current);
				}
			)
			this_UNSIGNED_INTEGER_3=RULE_UNSIGNED_INTEGER
			{
				newLeafNode(this_UNSIGNED_INTEGER_3, grammarAccess.getRadiusAccess().getUNSIGNED_INTEGERTerminalRuleCall_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRadiusAccess().getRadiusAction_1_0(),
						$current);
				}
			)
			this_UNSIGNED_NUMBER_5=RULE_UNSIGNED_NUMBER
			{
				newLeafNode(this_UNSIGNED_NUMBER_5, grammarAccess.getRadiusAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRuleSmooth
entryRuleSmooth returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmoothRule()); }
	iv_ruleSmooth=ruleSmooth
	{ $current=$iv_ruleSmooth.current; }
	EOF;

// Rule Smooth
ruleSmooth returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='smooth'
		{
			newLeafNode(otherlv_0, grammarAccess.getSmoothAccess().getSmoothKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSmoothAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmoothAccess().getValueSmoothEnumEnumRuleCall_2_0());
				}
				lv_value_2_0=ruleSmoothEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmoothRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.SmoothEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='color'
			{
				newLeafNode(otherlv_0, grammarAccess.getColorAccess().getColorKeyword_0_0());
			}
			    |
			otherlv_1='lineColor'
			{
				newLeafNode(otherlv_1, grammarAccess.getColorAccess().getLineColorKeyword_0_1());
			}
			    |
			otherlv_2='fillColor'
			{
				newLeafNode(otherlv_2, grammarAccess.getColorAccess().getFillColorKeyword_0_2());
			}
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getColorAccess().getEqualsSignKeyword_1());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getColorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_r_5_0=RULE_UNSIGNED_INTEGER
				{
					newLeafNode(lv_r_5_0, grammarAccess.getColorAccess().getRUNSIGNED_INTEGERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColorRule());
					}
					setWithLastConsumed(
						$current,
						"r",
						lv_r_5_0,
						"sc.modelica.xtext.ModelicaMo.UNSIGNED_INTEGER");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getColorAccess().getCommaKeyword_4());
		}
		(
			(
				lv_g_7_0=RULE_UNSIGNED_INTEGER
				{
					newLeafNode(lv_g_7_0, grammarAccess.getColorAccess().getGUNSIGNED_INTEGERTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColorRule());
					}
					setWithLastConsumed(
						$current,
						"g",
						lv_g_7_0,
						"sc.modelica.xtext.ModelicaMo.UNSIGNED_INTEGER");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getColorAccess().getCommaKeyword_6());
		}
		(
			(
				lv_b_9_0=RULE_UNSIGNED_INTEGER
				{
					newLeafNode(lv_b_9_0, grammarAccess.getColorAccess().getBUNSIGNED_INTEGERTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColorRule());
					}
					setWithLastConsumed(
						$current,
						"b",
						lv_b_9_0,
						"sc.modelica.xtext.ModelicaMo.UNSIGNED_INTEGER");
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getColorAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleThickness
entryRuleThickness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThicknessRule()); }
	iv_ruleThickness=ruleThickness
	{ $current=$iv_ruleThickness.current; }
	EOF;

// Rule Thickness
ruleThickness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='thickness'
		{
			newLeafNode(otherlv_0, grammarAccess.getThicknessAccess().getThicknessKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getThicknessAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_UNSIGNED_NUMBER
				{
					newLeafNode(lv_value_2_0, grammarAccess.getThicknessAccess().getValueUNSIGNED_NUMBERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThicknessRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
				}
			)
		)
	)
;

// Entry rule entryRuleGraphics
entryRuleGraphics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphicsRule()); }
	iv_ruleGraphics=ruleGraphics
	{ $current=$iv_ruleGraphics.current; }
	EOF;

// Rule Graphics
ruleGraphics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='graphics'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphicsAccess().getGraphicsKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getGraphicsAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGraphicsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_3_0());
				}
				lv_primitive_3_0=ruleGraphicalPrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicsRule());
					}
					add(
						$current,
						"primitive",
						lv_primitive_3_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getGraphicsAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGraphicsAccess().getPrimitiveGraphicalPrimitiveParserRuleCall_4_1_0());
					}
					lv_primitive_5_0=ruleGraphicalPrimitive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGraphicsRule());
						}
						add(
							$current,
							"primitive",
							lv_primitive_5_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitive");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGraphicsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleGraphicalPrimitive
entryRuleGraphicalPrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphicalPrimitiveRule()); }
	iv_ruleGraphicalPrimitive=ruleGraphicalPrimitive
	{ $current=$iv_ruleGraphicalPrimitive.current; }
	EOF;

// Rule GraphicalPrimitive
ruleGraphicalPrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getLineParserRuleCall_0());
		}
		this_Line_0=ruleLine
		{
			$current = $this_Line_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getPolygonParserRuleCall_1());
		}
		this_Polygon_1=rulePolygon
		{
			$current = $this_Polygon_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getRectangleParserRuleCall_2());
		}
		this_Rectangle_2=ruleRectangle
		{
			$current = $this_Rectangle_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getEllipseParserRuleCall_3());
		}
		this_Ellipse_3=ruleEllipse
		{
			$current = $this_Ellipse_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getTextParserRuleCall_4());
		}
		this_Text_4=ruleText
		{
			$current = $this_Text_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveAccess().getBitmapParserRuleCall_5());
		}
		this_Bitmap_5=ruleBitmap
		{
			$current = $this_Bitmap_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	iv_ruleLine=ruleLine
	{ $current=$iv_ruleLine.current; }
	EOF;

// Rule Line
ruleLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Line'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLineAccess().getNameLineKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Line");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLineAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getLineAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLineAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLineRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLineAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePolygon
entryRulePolygon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolygonRule()); }
	iv_rulePolygon=rulePolygon
	{ $current=$iv_rulePolygon.current; }
	EOF;

// Rule Polygon
rulePolygon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Polygon'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolygonRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Polygon");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPolygonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolygonRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getPolygonAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPolygonAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPolygonRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPolygonAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRectangle
entryRuleRectangle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRectangleRule()); }
	iv_ruleRectangle=ruleRectangle
	{ $current=$iv_ruleRectangle.current; }
	EOF;

// Rule Rectangle
ruleRectangle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Rectangle'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRectangleAccess().getNameRectangleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRectangleRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Rectangle");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRectangleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRectangleRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRectangleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRectangleAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRectangleRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getRectangleAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEllipse
entryRuleEllipse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEllipseRule()); }
	iv_ruleEllipse=ruleEllipse
	{ $current=$iv_ruleEllipse.current; }
	EOF;

// Rule Ellipse
ruleEllipse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Ellipse'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEllipseAccess().getNameEllipseKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEllipseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Ellipse");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEllipseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEllipseRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEllipseAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEllipseAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEllipseRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getEllipseAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Text'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTextAccess().getNameTextKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Text");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTextAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTextAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleBitmap
entryRuleBitmap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitmapRule()); }
	iv_ruleBitmap=ruleBitmap
	{ $current=$iv_ruleBitmap.current; }
	EOF;

// Rule Bitmap
ruleBitmap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Bitmap'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBitmapAccess().getNameBitmapKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitmapRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Bitmap");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBitmapAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleGraphicalPrimitiveArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBitmapRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getBitmapAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBitmapAccess().getArgsGraphicalPrimitiveArgsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleGraphicalPrimitiveArgs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitmapRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.GraphicalPrimitiveArgs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBitmapAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleGraphicalPrimitiveArgs
entryRuleGraphicalPrimitiveArgs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsRule()); }
	iv_ruleGraphicalPrimitiveArgs=ruleGraphicalPrimitiveArgs
	{ $current=$iv_ruleGraphicalPrimitiveArgs.current; }
	EOF;

// Rule GraphicalPrimitiveArgs
ruleGraphicalPrimitiveArgs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getVisibleParserRuleCall_0());
		}
		this_Visible_0=ruleVisible
		{
			$current = $this_Visible_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getOriginParserRuleCall_1());
		}
		this_Origin_1=ruleOrigin
		{
			$current = $this_Origin_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getExtentParserRuleCall_2());
		}
		this_Extent_2=ruleExtent
		{
			$current = $this_Extent_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getColorParserRuleCall_3());
		}
		this_Color_3=ruleColor
		{
			$current = $this_Color_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getSmoothParserRuleCall_4());
		}
		this_Smooth_4=ruleSmooth
		{
			$current = $this_Smooth_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getThicknessParserRuleCall_5());
		}
		this_Thickness_5=ruleThickness
		{
			$current = $this_Thickness_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getRadiusParserRuleCall_6());
		}
		this_Radius_6=ruleRadius
		{
			$current = $this_Radius_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_7='points'
			{
				newLeafNode(otherlv_7, grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsKeyword_7_0());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_7_1());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getGraphicalPrimitiveArgsAccess().getLeftCurlyBracketKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_3_0());
					}
					lv_points_10_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGraphicalPrimitiveArgsRule());
						}
						add(
							$current,
							"points",
							lv_points_10_0,
							"sc.modelica.xtext.ModelicaMo.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getGraphicalPrimitiveArgsAccess().getCommaKeyword_7_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getPointsPointParserRuleCall_7_4_1_0());
						}
						lv_points_12_0=rulePoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGraphicalPrimitiveArgsRule());
							}
							add(
								$current,
								"points",
								lv_points_12_0,
								"sc.modelica.xtext.ModelicaMo.Point");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getGraphicalPrimitiveArgsAccess().getRightCurlyBracketKeyword_7_5());
			}
		)
		    |
		(
			otherlv_14='textString'
			{
				newLeafNode(otherlv_14, grammarAccess.getGraphicalPrimitiveArgsAccess().getTextStringKeyword_8_0());
			}
			otherlv_15='='
			{
				newLeafNode(otherlv_15, grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_8_1());
			}
			(
				(
					lv_str_16_0=RULE_STRING
					{
						newLeafNode(lv_str_16_0, grammarAccess.getGraphicalPrimitiveArgsAccess().getStrSTRINGTerminalRuleCall_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGraphicalPrimitiveArgsRule());
						}
						setWithLastConsumed(
							$current,
							"str",
							lv_str_16_0,
							"sc.modelica.xtext.ModelicaMo.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_17='fileName'
			{
				newLeafNode(otherlv_17, grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameKeyword_9_0());
			}
			otherlv_18='='
			{
				newLeafNode(otherlv_18, grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					lv_fileName_19_0=RULE_STRING
					{
						newLeafNode(lv_fileName_19_0, grammarAccess.getGraphicalPrimitiveArgsAccess().getFileNameSTRINGTerminalRuleCall_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGraphicalPrimitiveArgsRule());
						}
						setWithLastConsumed(
							$current,
							"fileName",
							lv_fileName_19_0,
							"sc.modelica.xtext.ModelicaMo.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_20='imageSource'
			{
				newLeafNode(otherlv_20, grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceKeyword_10_0());
			}
			otherlv_21='='
			{
				newLeafNode(otherlv_21, grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_10_1());
			}
			(
				(
					lv_imageSource_22_0=RULE_STRING
					{
						newLeafNode(lv_imageSource_22_0, grammarAccess.getGraphicalPrimitiveArgsAccess().getImageSourceSTRINGTerminalRuleCall_10_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGraphicalPrimitiveArgsRule());
						}
						setWithLastConsumed(
							$current,
							"imageSource",
							lv_imageSource_22_0,
							"sc.modelica.xtext.ModelicaMo.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_23='fillPattern'
			{
				newLeafNode(otherlv_23, grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternKeyword_11_0());
			}
			otherlv_24='='
			{
				newLeafNode(otherlv_24, grammarAccess.getGraphicalPrimitiveArgsAccess().getEqualsSignKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGraphicalPrimitiveArgsAccess().getFillPatternFillPatternEnumRuleCall_11_2_0());
					}
					lv_fillPattern_25_0=ruleFillPattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGraphicalPrimitiveArgsRule());
						}
						set(
							$current,
							"fillPattern",
							lv_fillPattern_25_0,
							"sc.modelica.xtext.ModelicaMo.FillPattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDialog
entryRuleDialog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDialogRule()); }
	iv_ruleDialog=ruleDialog
	{ $current=$iv_ruleDialog.current; }
	EOF;

// Rule Dialog
ruleDialog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Dialog'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDialogAccess().getNameDialogKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDialogRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Dialog");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDialogAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_2_0());
				}
				lv_args_2_0=ruleDialogArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDialogRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"sc.modelica.xtext.ModelicaMo.DialogArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getDialogAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDialogAccess().getArgsDialogArgParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleDialogArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDialogRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"sc.modelica.xtext.ModelicaMo.DialogArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDialogAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleDialogArg
entryRuleDialogArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDialogArgRule()); }
	iv_ruleDialogArg=ruleDialogArg
	{ $current=$iv_ruleDialogArg.current; }
	EOF;

// Rule DialogArg
ruleDialogArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDialogArgAccess().getEnableParserRuleCall_0());
		}
		this_Enable_0=ruleEnable
		{
			$current = $this_Enable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDialogArgAccess().getGroupParserRuleCall_1());
		}
		this_Group_1=ruleGroup
		{
			$current = $this_Group_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDialogArgAccess().getTabParserRuleCall_2());
		}
		this_Tab_2=ruleTab
		{
			$current = $this_Tab_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnable
entryRuleEnable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnableRule()); }
	iv_ruleEnable=ruleEnable
	{ $current=$iv_ruleEnable.current; }
	EOF;

// Rule Enable
ruleEnable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enable'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnableAccess().getEnableKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getEnableAccess().getEqualsSignKeyword_1());
		}
		this_IDENT_2=RULE_IDENT
		{
			newLeafNode(this_IDENT_2, grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_2());
		}
		otherlv_3='=='
		{
			newLeafNode(otherlv_3, grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_4_0());
				}
				lv_value_4_0=ruleComponentReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnableRule());
					}
					add(
						$current,
						"value",
						lv_value_4_0,
						"sc.modelica.xtext.ModelicaMo.ComponentReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='or'
			{
				newLeafNode(otherlv_5, grammarAccess.getEnableAccess().getOrKeyword_5_0());
			}
			this_IDENT_6=RULE_IDENT
			{
				newLeafNode(this_IDENT_6, grammarAccess.getEnableAccess().getIDENTTerminalRuleCall_5_1());
			}
			otherlv_7='=='
			{
				newLeafNode(otherlv_7, grammarAccess.getEnableAccess().getEqualsSignEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnableAccess().getValueComponentReferenceParserRuleCall_5_3_0());
					}
					lv_value_8_0=ruleComponentReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnableRule());
						}
						add(
							$current,
							"value",
							lv_value_8_0,
							"sc.modelica.xtext.ModelicaMo.ComponentReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getGroupAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTab
entryRuleTab returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTabRule()); }
	iv_ruleTab=ruleTab
	{ $current=$iv_ruleTab.current; }
	EOF;

// Rule Tab
ruleTab returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tab'
		{
			newLeafNode(otherlv_0, grammarAccess.getTabAccess().getTabKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getTabAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTabAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTabRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"sc.modelica.xtext.ModelicaMo.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotationDocumentation
entryRuleAnnotationDocumentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationDocumentationRule()); }
	iv_ruleAnnotationDocumentation=ruleAnnotationDocumentation
	{ $current=$iv_ruleAnnotationDocumentation.current; }
	EOF;

// Rule AnnotationDocumentation
ruleAnnotationDocumentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Documentation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationDocumentationAccess().getDocumentationKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationDocumentationAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='info'
		{
			newLeafNode(otherlv_2, grammarAccess.getAnnotationDocumentationAccess().getInfoKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_value_4_0=RULE_STRING
				{
					newLeafNode(lv_value_4_0, grammarAccess.getAnnotationDocumentationAccess().getValueSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationDocumentationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_4_0,
						"sc.modelica.xtext.ModelicaMo.STRING");
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAnnotationDocumentationAccess().getCommaKeyword_5_0());
			}
			otherlv_6='revisions'
			{
				newLeafNode(otherlv_6, grammarAccess.getAnnotationDocumentationAccess().getRevisionsKeyword_5_1());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getAnnotationDocumentationAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					lv_rev_8_0=RULE_STRING
					{
						newLeafNode(lv_rev_8_0, grammarAccess.getAnnotationDocumentationAccess().getRevSTRINGTerminalRuleCall_5_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnnotationDocumentationRule());
						}
						setWithLastConsumed(
							$current,
							"rev",
							lv_rev_8_0,
							"sc.modelica.xtext.ModelicaMo.STRING");
					}
				)
			)
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getAnnotationDocumentationAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleAnnotationExperiment
entryRuleAnnotationExperiment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationExperimentRule()); }
	iv_ruleAnnotationExperiment=ruleAnnotationExperiment
	{ $current=$iv_ruleAnnotationExperiment.current; }
	EOF;

// Rule AnnotationExperiment
ruleAnnotationExperiment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAnnotationExperimentAccess().getAnnotationExperimentAction_0(),
					$current);
			}
		)
		otherlv_1='experiment'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationExperimentAccess().getExperimentKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getAnnotationExperimentAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_0_0());
					}
					lv_options_3_0=ruleExperimentOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotationExperimentRule());
						}
						add(
							$current,
							"options",
							lv_options_3_0,
							"sc.modelica.xtext.ModelicaMo.ExperimentOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getAnnotationExperimentAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAnnotationExperimentAccess().getOptionsExperimentOptionParserRuleCall_3_1_1_0());
						}
						lv_options_5_0=ruleExperimentOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAnnotationExperimentRule());
							}
							add(
								$current,
								"options",
								lv_options_5_0,
								"sc.modelica.xtext.ModelicaMo.ExperimentOption");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getAnnotationExperimentAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExperimentOption
entryRuleExperimentOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExperimentOptionRule()); }
	iv_ruleExperimentOption=ruleExperimentOption
	{ $current=$iv_ruleExperimentOption.current; }
	EOF;

// Rule ExperimentOption
ruleExperimentOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='StartTime'
			{
				newLeafNode(otherlv_0, grammarAccess.getExperimentOptionAccess().getStartTimeKeyword_0_0());
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_0_1());
			}
			(
				otherlv_2='+'
				{
					newLeafNode(otherlv_2, grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_0_2_0());
				}
				    |
				otherlv_3='-'
				{
					newLeafNode(otherlv_3, grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_0_2_1());
				}
			)
			(
				(
					lv_start_4_0=RULE_UNSIGNED_NUMBER
					{
						newLeafNode(lv_start_4_0, grammarAccess.getExperimentOptionAccess().getStartUNSIGNED_NUMBERTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExperimentOptionRule());
						}
						setWithLastConsumed(
							$current,
							"start",
							lv_start_4_0,
							"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
					}
				)
			)
		)
		    |
		(
			otherlv_5='StopTime'
			{
				newLeafNode(otherlv_5, grammarAccess.getExperimentOptionAccess().getStopTimeKeyword_1_0());
			}
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_1_1());
			}
			(
				otherlv_7='+'
				{
					newLeafNode(otherlv_7, grammarAccess.getExperimentOptionAccess().getPlusSignKeyword_1_2_0());
				}
				    |
				otherlv_8='-'
				{
					newLeafNode(otherlv_8, grammarAccess.getExperimentOptionAccess().getHyphenMinusKeyword_1_2_1());
				}
			)
			(
				(
					lv_stop_9_0=RULE_UNSIGNED_NUMBER
					{
						newLeafNode(lv_stop_9_0, grammarAccess.getExperimentOptionAccess().getStopUNSIGNED_NUMBERTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExperimentOptionRule());
						}
						setWithLastConsumed(
							$current,
							"stop",
							lv_stop_9_0,
							"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
					}
				)
			)
		)
		    |
		(
			otherlv_10='Interval'
			{
				newLeafNode(otherlv_10, grammarAccess.getExperimentOptionAccess().getIntervalKeyword_2_0());
			}
			otherlv_11='='
			{
				newLeafNode(otherlv_11, grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					lv_step_12_0=RULE_UNSIGNED_NUMBER
					{
						newLeafNode(lv_step_12_0, grammarAccess.getExperimentOptionAccess().getStepUNSIGNED_NUMBERTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExperimentOptionRule());
						}
						setWithLastConsumed(
							$current,
							"step",
							lv_step_12_0,
							"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
					}
				)
			)
		)
		    |
		(
			otherlv_13='Tolerance'
			{
				newLeafNode(otherlv_13, grammarAccess.getExperimentOptionAccess().getToleranceKeyword_3_0());
			}
			otherlv_14='='
			{
				newLeafNode(otherlv_14, grammarAccess.getExperimentOptionAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					lv_tol_15_0=RULE_UNSIGNED_NUMBER
					{
						newLeafNode(lv_tol_15_0, grammarAccess.getExperimentOptionAccess().getTolUNSIGNED_NUMBERTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExperimentOptionRule());
						}
						setWithLastConsumed(
							$current,
							"tol",
							lv_tol_15_0,
							"sc.modelica.xtext.ModelicaMo.UNSIGNED_NUMBER");
					}
				)
			)
		)
	)
;

// Rule AssertionLevel
ruleAssertionLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AssertionLevel.error'
			{
				$current = grammarAccess.getAssertionLevelAccess().getErrorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAssertionLevelAccess().getErrorEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='AssertionLevel.warning'
			{
				$current = grammarAccess.getAssertionLevelAccess().getWarningEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAssertionLevelAccess().getWarningEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule FillPattern
ruleFillPattern returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FillPattern.None'
			{
				$current = grammarAccess.getFillPatternAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFillPatternAccess().getNoneEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FillPattern.Solid'
			{
				$current = grammarAccess.getFillPatternAccess().getSolidEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFillPatternAccess().getSolidEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='FillPattern.Horizontal'
			{
				$current = grammarAccess.getFillPatternAccess().getHorizontalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFillPatternAccess().getHorizontalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='FillPattern.Vertical'
			{
				$current = grammarAccess.getFillPatternAccess().getVerticalEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFillPatternAccess().getVerticalEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule SmoothEnum
ruleSmoothEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Smooth.None'
			{
				$current = grammarAccess.getSmoothEnumAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSmoothEnumAccess().getNoneEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Smooth.Bezier'
			{
				$current = grammarAccess.getSmoothEnumAccess().getBezierEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSmoothEnumAccess().getBezierEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IDENT : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_S_ESCAPE : (' '|'\b'|'\t'|'\n'|'\f'|'\r'|'"'|'\''|'\\');

RULE_UNSIGNED_INTEGER : ('0'..'9')+;

RULE_UNSIGNED_NUMBER : ('+'|'-')? RULE_UNSIGNED_INTEGER ('.' RULE_UNSIGNED_INTEGER?)? (('E'|'e') ('+'|'-')? RULE_UNSIGNED_INTEGER)?;

RULE_ANY_OTHER : .;
