/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Assert</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Assert#getCondition <em>Condition</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Assert#getMessage <em>Message</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Assert#getLevel <em>Level</em>}</li>
 * </ul>
 *
 * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getAssert()
 * @model
 * @generated
 */
public interface Assert extends Equation
{
  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Condition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Expression)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getAssert_Condition()
   * @model containment="true"
   * @generated
   */
  Expression getCondition();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Assert#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Expression value);

  /**
   * Returns the value of the '<em><b>Message</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Message</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Message</em>' containment reference.
   * @see #setMessage(Expression)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getAssert_Message()
   * @model containment="true"
   * @generated
   */
  Expression getMessage();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Assert#getMessage <em>Message</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Message</em>' containment reference.
   * @see #getMessage()
   * @generated
   */
  void setMessage(Expression value);

  /**
   * Returns the value of the '<em><b>Level</b></em>' attribute.
   * The literals are from the enumeration {@link sc.modelica.xtext.modelicaMo.AssertionLevel}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Level</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Level</em>' attribute.
   * @see sc.modelica.xtext.modelicaMo.AssertionLevel
   * @see #setLevel(AssertionLevel)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getAssert_Level()
   * @model
   * @generated
   */
  AssertionLevel getLevel();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Assert#getLevel <em>Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Level</em>' attribute.
   * @see sc.modelica.xtext.modelicaMo.AssertionLevel
   * @see #getLevel()
   * @generated
   */
  void setLevel(AssertionLevel value);

} // Assert
