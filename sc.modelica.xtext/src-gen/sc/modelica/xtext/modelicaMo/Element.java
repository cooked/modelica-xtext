/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Element</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getImportClause <em>Import Clause</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getExtendClause <em>Extend Clause</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#isRedeclare <em>Redeclare</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#isFinal <em>Final</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#isInner <em>Inner</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#isOuter <em>Outer</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getClass_ <em>Class</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getComp <em>Comp</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getCc <em>Cc</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.Element#getComment <em>Comment</em>}</li>
 * </ul>
 *
 * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement()
 * @model
 * @generated
 */
public interface Element extends EObject
{
  /**
   * Returns the value of the '<em><b>Import Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Import Clause</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Import Clause</em>' containment reference.
   * @see #setImportClause(ImportClause)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_ImportClause()
   * @model containment="true"
   * @generated
   */
  ImportClause getImportClause();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getImportClause <em>Import Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Import Clause</em>' containment reference.
   * @see #getImportClause()
   * @generated
   */
  void setImportClause(ImportClause value);

  /**
   * Returns the value of the '<em><b>Extend Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Extend Clause</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Extend Clause</em>' containment reference.
   * @see #setExtendClause(ExtendClause)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_ExtendClause()
   * @model containment="true"
   * @generated
   */
  ExtendClause getExtendClause();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getExtendClause <em>Extend Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Extend Clause</em>' containment reference.
   * @see #getExtendClause()
   * @generated
   */
  void setExtendClause(ExtendClause value);

  /**
   * Returns the value of the '<em><b>Redeclare</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Redeclare</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Redeclare</em>' attribute.
   * @see #setRedeclare(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Redeclare()
   * @model
   * @generated
   */
  boolean isRedeclare();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#isRedeclare <em>Redeclare</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Redeclare</em>' attribute.
   * @see #isRedeclare()
   * @generated
   */
  void setRedeclare(boolean value);

  /**
   * Returns the value of the '<em><b>Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Final</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Final</em>' attribute.
   * @see #setFinal(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Final()
   * @model
   * @generated
   */
  boolean isFinal();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#isFinal <em>Final</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Final</em>' attribute.
   * @see #isFinal()
   * @generated
   */
  void setFinal(boolean value);

  /**
   * Returns the value of the '<em><b>Inner</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Inner</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Inner</em>' attribute.
   * @see #setInner(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Inner()
   * @model
   * @generated
   */
  boolean isInner();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#isInner <em>Inner</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Inner</em>' attribute.
   * @see #isInner()
   * @generated
   */
  void setInner(boolean value);

  /**
   * Returns the value of the '<em><b>Outer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Outer</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Outer</em>' attribute.
   * @see #setOuter(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Outer()
   * @model
   * @generated
   */
  boolean isOuter();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#isOuter <em>Outer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Outer</em>' attribute.
   * @see #isOuter()
   * @generated
   */
  void setOuter(boolean value);

  /**
   * Returns the value of the '<em><b>Class</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Class</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Class</em>' containment reference.
   * @see #setClass(ClassDefinition)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Class()
   * @model containment="true"
   * @generated
   */
  ClassDefinition getClass_();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getClass_ <em>Class</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Class</em>' containment reference.
   * @see #getClass_()
   * @generated
   */
  void setClass(ClassDefinition value);

  /**
   * Returns the value of the '<em><b>Comp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Comp</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Comp</em>' containment reference.
   * @see #setComp(ComponentClause)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Comp()
   * @model containment="true"
   * @generated
   */
  ComponentClause getComp();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getComp <em>Comp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Comp</em>' containment reference.
   * @see #getComp()
   * @generated
   */
  void setComp(ComponentClause value);

  /**
   * Returns the value of the '<em><b>Cc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cc</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cc</em>' containment reference.
   * @see #setCc(ConstrainingClause)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Cc()
   * @model containment="true"
   * @generated
   */
  ConstrainingClause getCc();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getCc <em>Cc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cc</em>' containment reference.
   * @see #getCc()
   * @generated
   */
  void setCc(ConstrainingClause value);

  /**
   * Returns the value of the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Comment</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Comment</em>' containment reference.
   * @see #setComment(Comment)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getElement_Comment()
   * @model containment="true"
   * @generated
   */
  Comment getComment();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.Element#getComment <em>Comment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Comment</em>' containment reference.
   * @see #getComment()
   * @generated
   */
  void setComment(Comment value);

} // Element
