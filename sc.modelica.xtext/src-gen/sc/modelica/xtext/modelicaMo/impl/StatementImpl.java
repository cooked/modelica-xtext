/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import sc.modelica.xtext.modelicaMo.Comment;
import sc.modelica.xtext.modelicaMo.ComponentReference;
import sc.modelica.xtext.modelicaMo.Expression;
import sc.modelica.xtext.modelicaMo.FunctionCallArgs;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;
import sc.modelica.xtext.modelicaMo.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl#getFca <em>Fca</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl#getComm <em>Comm</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementImpl extends MinimalEObjectImpl.Container implements Statement
{
  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected ComponentReference component;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * The cached value of the '{@link #getFca() <em>Fca</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFca()
   * @generated
   * @ordered
   */
  protected FunctionCallArgs fca;

  /**
   * The cached value of the '{@link #getComm() <em>Comm</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComm()
   * @generated
   * @ordered
   */
  protected Comment comm;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentReference getComponent()
  {
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComponent(ComponentReference newComponent, NotificationChain msgs)
  {
    ComponentReference oldComponent = component;
    component = newComponent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__COMPONENT, oldComponent, newComponent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComponent(ComponentReference newComponent)
  {
    if (newComponent != component)
    {
      NotificationChain msgs = null;
      if (component != null)
        msgs = ((InternalEObject)component).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__COMPONENT, null, msgs);
      if (newComponent != null)
        msgs = ((InternalEObject)newComponent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__COMPONENT, null, msgs);
      msgs = basicSetComponent(newComponent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__COMPONENT, newComponent, newComponent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCallArgs getFca()
  {
    return fca;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFca(FunctionCallArgs newFca, NotificationChain msgs)
  {
    FunctionCallArgs oldFca = fca;
    fca = newFca;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__FCA, oldFca, newFca);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFca(FunctionCallArgs newFca)
  {
    if (newFca != fca)
    {
      NotificationChain msgs = null;
      if (fca != null)
        msgs = ((InternalEObject)fca).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__FCA, null, msgs);
      if (newFca != null)
        msgs = ((InternalEObject)newFca).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__FCA, null, msgs);
      msgs = basicSetFca(newFca, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__FCA, newFca, newFca));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comment getComm()
  {
    return comm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComm(Comment newComm, NotificationChain msgs)
  {
    Comment oldComm = comm;
    comm = newComm;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__COMM, oldComm, newComm);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComm(Comment newComm)
  {
    if (newComm != comm)
    {
      NotificationChain msgs = null;
      if (comm != null)
        msgs = ((InternalEObject)comm).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__COMM, null, msgs);
      if (newComm != null)
        msgs = ((InternalEObject)newComm).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.STATEMENT__COMM, null, msgs);
      msgs = basicSetComm(newComm, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.STATEMENT__COMM, newComm, newComm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.STATEMENT__COMPONENT:
        return basicSetComponent(null, msgs);
      case ModelicaMoPackage.STATEMENT__EXPRESSION:
        return basicSetExpression(null, msgs);
      case ModelicaMoPackage.STATEMENT__FCA:
        return basicSetFca(null, msgs);
      case ModelicaMoPackage.STATEMENT__COMM:
        return basicSetComm(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.STATEMENT__COMPONENT:
        return getComponent();
      case ModelicaMoPackage.STATEMENT__EXPRESSION:
        return getExpression();
      case ModelicaMoPackage.STATEMENT__FCA:
        return getFca();
      case ModelicaMoPackage.STATEMENT__COMM:
        return getComm();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.STATEMENT__COMPONENT:
        setComponent((ComponentReference)newValue);
        return;
      case ModelicaMoPackage.STATEMENT__EXPRESSION:
        setExpression((Expression)newValue);
        return;
      case ModelicaMoPackage.STATEMENT__FCA:
        setFca((FunctionCallArgs)newValue);
        return;
      case ModelicaMoPackage.STATEMENT__COMM:
        setComm((Comment)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.STATEMENT__COMPONENT:
        setComponent((ComponentReference)null);
        return;
      case ModelicaMoPackage.STATEMENT__EXPRESSION:
        setExpression((Expression)null);
        return;
      case ModelicaMoPackage.STATEMENT__FCA:
        setFca((FunctionCallArgs)null);
        return;
      case ModelicaMoPackage.STATEMENT__COMM:
        setComm((Comment)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.STATEMENT__COMPONENT:
        return component != null;
      case ModelicaMoPackage.STATEMENT__EXPRESSION:
        return expression != null;
      case ModelicaMoPackage.STATEMENT__FCA:
        return fca != null;
      case ModelicaMoPackage.STATEMENT__COMM:
        return comm != null;
    }
    return super.eIsSet(featureID);
  }

} //StatementImpl
