/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import sc.modelica.xtext.modelicaMo.Annotation;
import sc.modelica.xtext.modelicaMo.ComponentReference;
import sc.modelica.xtext.modelicaMo.ConnectClause;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Connect Clause</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl#getNode1 <em>Node1</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl#getNode2 <em>Node2</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl#getAnnotation <em>Annotation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConnectClauseImpl extends MinimalEObjectImpl.Container implements ConnectClause
{
  /**
   * The cached value of the '{@link #getNode1() <em>Node1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode1()
   * @generated
   * @ordered
   */
  protected ComponentReference node1;

  /**
   * The cached value of the '{@link #getNode2() <em>Node2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode2()
   * @generated
   * @ordered
   */
  protected ComponentReference node2;

  /**
   * The cached value of the '{@link #getAnnotation() <em>Annotation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnnotation()
   * @generated
   * @ordered
   */
  protected Annotation annotation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConnectClauseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.CONNECT_CLAUSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentReference getNode1()
  {
    return node1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNode1(ComponentReference newNode1, NotificationChain msgs)
  {
    ComponentReference oldNode1 = node1;
    node1 = newNode1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__NODE1, oldNode1, newNode1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNode1(ComponentReference newNode1)
  {
    if (newNode1 != node1)
    {
      NotificationChain msgs = null;
      if (node1 != null)
        msgs = ((InternalEObject)node1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__NODE1, null, msgs);
      if (newNode1 != null)
        msgs = ((InternalEObject)newNode1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__NODE1, null, msgs);
      msgs = basicSetNode1(newNode1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__NODE1, newNode1, newNode1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentReference getNode2()
  {
    return node2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNode2(ComponentReference newNode2, NotificationChain msgs)
  {
    ComponentReference oldNode2 = node2;
    node2 = newNode2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__NODE2, oldNode2, newNode2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNode2(ComponentReference newNode2)
  {
    if (newNode2 != node2)
    {
      NotificationChain msgs = null;
      if (node2 != null)
        msgs = ((InternalEObject)node2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__NODE2, null, msgs);
      if (newNode2 != null)
        msgs = ((InternalEObject)newNode2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__NODE2, null, msgs);
      msgs = basicSetNode2(newNode2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__NODE2, newNode2, newNode2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Annotation getAnnotation()
  {
    return annotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAnnotation(Annotation newAnnotation, NotificationChain msgs)
  {
    Annotation oldAnnotation = annotation;
    annotation = newAnnotation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION, oldAnnotation, newAnnotation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAnnotation(Annotation newAnnotation)
  {
    if (newAnnotation != annotation)
    {
      NotificationChain msgs = null;
      if (annotation != null)
        msgs = ((InternalEObject)annotation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION, null, msgs);
      if (newAnnotation != null)
        msgs = ((InternalEObject)newAnnotation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION, null, msgs);
      msgs = basicSetAnnotation(newAnnotation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION, newAnnotation, newAnnotation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE1:
        return basicSetNode1(null, msgs);
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE2:
        return basicSetNode2(null, msgs);
      case ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION:
        return basicSetAnnotation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE1:
        return getNode1();
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE2:
        return getNode2();
      case ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION:
        return getAnnotation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE1:
        setNode1((ComponentReference)newValue);
        return;
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE2:
        setNode2((ComponentReference)newValue);
        return;
      case ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION:
        setAnnotation((Annotation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE1:
        setNode1((ComponentReference)null);
        return;
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE2:
        setNode2((ComponentReference)null);
        return;
      case ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION:
        setAnnotation((Annotation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE1:
        return node1 != null;
      case ModelicaMoPackage.CONNECT_CLAUSE__NODE2:
        return node2 != null;
      case ModelicaMoPackage.CONNECT_CLAUSE__ANNOTATION:
        return annotation != null;
    }
    return super.eIsSet(featureID);
  }

} //ConnectClauseImpl
