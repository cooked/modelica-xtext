/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import sc.modelica.xtext.modelicaMo.Comment;
import sc.modelica.xtext.modelicaMo.Equation;
import sc.modelica.xtext.modelicaMo.EquationIf;
import sc.modelica.xtext.modelicaMo.Expression;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Equation If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getComm <em>Comm</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getIfExp <em>If Exp</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getIfEqs <em>If Eqs</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getElseifExp <em>Elseif Exp</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getElseIfEqs <em>Else If Eqs</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl#getElseEqs <em>Else Eqs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EquationIfImpl extends EquationImpl implements EquationIf
{
  /**
   * The cached value of the '{@link #getComm() <em>Comm</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComm()
   * @generated
   * @ordered
   */
  protected Comment comm;

  /**
   * The cached value of the '{@link #getIfExp() <em>If Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfExp()
   * @generated
   * @ordered
   */
  protected Expression ifExp;

  /**
   * The cached value of the '{@link #getIfEqs() <em>If Eqs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfEqs()
   * @generated
   * @ordered
   */
  protected EList<Equation> ifEqs;

  /**
   * The cached value of the '{@link #getElseifExp() <em>Elseif Exp</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseifExp()
   * @generated
   * @ordered
   */
  protected EList<Expression> elseifExp;

  /**
   * The cached value of the '{@link #getElseIfEqs() <em>Else If Eqs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseIfEqs()
   * @generated
   * @ordered
   */
  protected EList<Equation> elseIfEqs;

  /**
   * The cached value of the '{@link #getElseEqs() <em>Else Eqs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseEqs()
   * @generated
   * @ordered
   */
  protected EList<Equation> elseEqs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EquationIfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.EQUATION_IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comment getComm()
  {
    return comm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComm(Comment newComm, NotificationChain msgs)
  {
    Comment oldComm = comm;
    comm = newComm;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EQUATION_IF__COMM, oldComm, newComm);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComm(Comment newComm)
  {
    if (newComm != comm)
    {
      NotificationChain msgs = null;
      if (comm != null)
        msgs = ((InternalEObject)comm).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.EQUATION_IF__COMM, null, msgs);
      if (newComm != null)
        msgs = ((InternalEObject)newComm).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.EQUATION_IF__COMM, null, msgs);
      msgs = basicSetComm(newComm, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EQUATION_IF__COMM, newComm, newComm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getIfExp()
  {
    return ifExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfExp(Expression newIfExp, NotificationChain msgs)
  {
    Expression oldIfExp = ifExp;
    ifExp = newIfExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EQUATION_IF__IF_EXP, oldIfExp, newIfExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfExp(Expression newIfExp)
  {
    if (newIfExp != ifExp)
    {
      NotificationChain msgs = null;
      if (ifExp != null)
        msgs = ((InternalEObject)ifExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.EQUATION_IF__IF_EXP, null, msgs);
      if (newIfExp != null)
        msgs = ((InternalEObject)newIfExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaMoPackage.EQUATION_IF__IF_EXP, null, msgs);
      msgs = basicSetIfExp(newIfExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EQUATION_IF__IF_EXP, newIfExp, newIfExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Equation> getIfEqs()
  {
    if (ifEqs == null)
    {
      ifEqs = new EObjectContainmentEList<Equation>(Equation.class, this, ModelicaMoPackage.EQUATION_IF__IF_EQS);
    }
    return ifEqs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expression> getElseifExp()
  {
    if (elseifExp == null)
    {
      elseifExp = new EObjectContainmentEList<Expression>(Expression.class, this, ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP);
    }
    return elseifExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Equation> getElseIfEqs()
  {
    if (elseIfEqs == null)
    {
      elseIfEqs = new EObjectContainmentEList<Equation>(Equation.class, this, ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS);
    }
    return elseIfEqs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Equation> getElseEqs()
  {
    if (elseEqs == null)
    {
      elseEqs = new EObjectContainmentEList<Equation>(Equation.class, this, ModelicaMoPackage.EQUATION_IF__ELSE_EQS);
    }
    return elseEqs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EQUATION_IF__COMM:
        return basicSetComm(null, msgs);
      case ModelicaMoPackage.EQUATION_IF__IF_EXP:
        return basicSetIfExp(null, msgs);
      case ModelicaMoPackage.EQUATION_IF__IF_EQS:
        return ((InternalEList<?>)getIfEqs()).basicRemove(otherEnd, msgs);
      case ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP:
        return ((InternalEList<?>)getElseifExp()).basicRemove(otherEnd, msgs);
      case ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS:
        return ((InternalEList<?>)getElseIfEqs()).basicRemove(otherEnd, msgs);
      case ModelicaMoPackage.EQUATION_IF__ELSE_EQS:
        return ((InternalEList<?>)getElseEqs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EQUATION_IF__COMM:
        return getComm();
      case ModelicaMoPackage.EQUATION_IF__IF_EXP:
        return getIfExp();
      case ModelicaMoPackage.EQUATION_IF__IF_EQS:
        return getIfEqs();
      case ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP:
        return getElseifExp();
      case ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS:
        return getElseIfEqs();
      case ModelicaMoPackage.EQUATION_IF__ELSE_EQS:
        return getElseEqs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EQUATION_IF__COMM:
        setComm((Comment)newValue);
        return;
      case ModelicaMoPackage.EQUATION_IF__IF_EXP:
        setIfExp((Expression)newValue);
        return;
      case ModelicaMoPackage.EQUATION_IF__IF_EQS:
        getIfEqs().clear();
        getIfEqs().addAll((Collection<? extends Equation>)newValue);
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP:
        getElseifExp().clear();
        getElseifExp().addAll((Collection<? extends Expression>)newValue);
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS:
        getElseIfEqs().clear();
        getElseIfEqs().addAll((Collection<? extends Equation>)newValue);
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSE_EQS:
        getElseEqs().clear();
        getElseEqs().addAll((Collection<? extends Equation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EQUATION_IF__COMM:
        setComm((Comment)null);
        return;
      case ModelicaMoPackage.EQUATION_IF__IF_EXP:
        setIfExp((Expression)null);
        return;
      case ModelicaMoPackage.EQUATION_IF__IF_EQS:
        getIfEqs().clear();
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP:
        getElseifExp().clear();
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS:
        getElseIfEqs().clear();
        return;
      case ModelicaMoPackage.EQUATION_IF__ELSE_EQS:
        getElseEqs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EQUATION_IF__COMM:
        return comm != null;
      case ModelicaMoPackage.EQUATION_IF__IF_EXP:
        return ifExp != null;
      case ModelicaMoPackage.EQUATION_IF__IF_EQS:
        return ifEqs != null && !ifEqs.isEmpty();
      case ModelicaMoPackage.EQUATION_IF__ELSEIF_EXP:
        return elseifExp != null && !elseifExp.isEmpty();
      case ModelicaMoPackage.EQUATION_IF__ELSE_IF_EQS:
        return elseIfEqs != null && !elseIfEqs.isEmpty();
      case ModelicaMoPackage.EQUATION_IF__ELSE_EQS:
        return elseEqs != null && !elseEqs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //EquationIfImpl
