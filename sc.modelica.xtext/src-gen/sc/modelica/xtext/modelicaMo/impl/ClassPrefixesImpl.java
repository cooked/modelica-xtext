/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import sc.modelica.xtext.modelicaMo.ClassPrefixes;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Class Prefixes</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isPartial <em>Partial</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isClass <em>Class</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isModel <em>Model</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isOperator <em>Operator</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isRecord <em>Record</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isBlock <em>Block</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isExpandable <em>Expandable</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isConnector <em>Connector</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isType <em>Type</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isPackage <em>Package</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isPure <em>Pure</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl#isFunction <em>Function</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClassPrefixesImpl extends MinimalEObjectImpl.Container implements ClassPrefixes
{
  /**
   * The default value of the '{@link #isPartial() <em>Partial</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPartial()
   * @generated
   * @ordered
   */
  protected static final boolean PARTIAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPartial() <em>Partial</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPartial()
   * @generated
   * @ordered
   */
  protected boolean partial = PARTIAL_EDEFAULT;

  /**
   * The default value of the '{@link #isClass() <em>Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isClass()
   * @generated
   * @ordered
   */
  protected static final boolean CLASS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isClass() <em>Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isClass()
   * @generated
   * @ordered
   */
  protected boolean class_ = CLASS_EDEFAULT;

  /**
   * The default value of the '{@link #isModel() <em>Model</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isModel()
   * @generated
   * @ordered
   */
  protected static final boolean MODEL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isModel() <em>Model</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isModel()
   * @generated
   * @ordered
   */
  protected boolean model = MODEL_EDEFAULT;

  /**
   * The default value of the '{@link #isOperator() <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOperator()
   * @generated
   * @ordered
   */
  protected static final boolean OPERATOR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOperator() <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOperator()
   * @generated
   * @ordered
   */
  protected boolean operator = OPERATOR_EDEFAULT;

  /**
   * The default value of the '{@link #isRecord() <em>Record</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRecord()
   * @generated
   * @ordered
   */
  protected static final boolean RECORD_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRecord() <em>Record</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRecord()
   * @generated
   * @ordered
   */
  protected boolean record = RECORD_EDEFAULT;

  /**
   * The default value of the '{@link #isBlock() <em>Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlock()
   * @generated
   * @ordered
   */
  protected static final boolean BLOCK_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBlock() <em>Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlock()
   * @generated
   * @ordered
   */
  protected boolean block = BLOCK_EDEFAULT;

  /**
   * The default value of the '{@link #isExpandable() <em>Expandable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpandable()
   * @generated
   * @ordered
   */
  protected static final boolean EXPANDABLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExpandable() <em>Expandable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpandable()
   * @generated
   * @ordered
   */
  protected boolean expandable = EXPANDABLE_EDEFAULT;

  /**
   * The default value of the '{@link #isConnector() <em>Connector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConnector()
   * @generated
   * @ordered
   */
  protected static final boolean CONNECTOR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConnector() <em>Connector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConnector()
   * @generated
   * @ordered
   */
  protected boolean connector = CONNECTOR_EDEFAULT;

  /**
   * The default value of the '{@link #isType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isType()
   * @generated
   * @ordered
   */
  protected static final boolean TYPE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isType()
   * @generated
   * @ordered
   */
  protected boolean type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isPackage() <em>Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPackage()
   * @generated
   * @ordered
   */
  protected static final boolean PACKAGE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPackage() <em>Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPackage()
   * @generated
   * @ordered
   */
  protected boolean package_ = PACKAGE_EDEFAULT;

  /**
   * The default value of the '{@link #isPure() <em>Pure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPure()
   * @generated
   * @ordered
   */
  protected static final boolean PURE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPure() <em>Pure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPure()
   * @generated
   * @ordered
   */
  protected boolean pure = PURE_EDEFAULT;

  /**
   * The default value of the '{@link #isFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFunction()
   * @generated
   * @ordered
   */
  protected static final boolean FUNCTION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFunction()
   * @generated
   * @ordered
   */
  protected boolean function = FUNCTION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClassPrefixesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.CLASS_PREFIXES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isPartial()
  {
    return partial;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPartial(boolean newPartial)
  {
    boolean oldPartial = partial;
    partial = newPartial;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__PARTIAL, oldPartial, partial));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isClass()
  {
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClass(boolean newClass)
  {
    boolean oldClass = class_;
    class_ = newClass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__CLASS, oldClass, class_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isModel()
  {
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setModel(boolean newModel)
  {
    boolean oldModel = model;
    model = newModel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__MODEL, oldModel, model));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOperator()
  {
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOperator(boolean newOperator)
  {
    boolean oldOperator = operator;
    operator = newOperator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__OPERATOR, oldOperator, operator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRecord()
  {
    return record;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRecord(boolean newRecord)
  {
    boolean oldRecord = record;
    record = newRecord;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__RECORD, oldRecord, record));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isBlock()
  {
    return block;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBlock(boolean newBlock)
  {
    boolean oldBlock = block;
    block = newBlock;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__BLOCK, oldBlock, block));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isExpandable()
  {
    return expandable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpandable(boolean newExpandable)
  {
    boolean oldExpandable = expandable;
    expandable = newExpandable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__EXPANDABLE, oldExpandable, expandable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isConnector()
  {
    return connector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConnector(boolean newConnector)
  {
    boolean oldConnector = connector;
    connector = newConnector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__CONNECTOR, oldConnector, connector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(boolean newType)
  {
    boolean oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isPackage()
  {
    return package_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPackage(boolean newPackage)
  {
    boolean oldPackage = package_;
    package_ = newPackage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__PACKAGE, oldPackage, package_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isPure()
  {
    return pure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPure(boolean newPure)
  {
    boolean oldPure = pure;
    pure = newPure;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__PURE, oldPure, pure));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunction(boolean newFunction)
  {
    boolean oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.CLASS_PREFIXES__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CLASS_PREFIXES__PARTIAL:
        return isPartial();
      case ModelicaMoPackage.CLASS_PREFIXES__CLASS:
        return isClass();
      case ModelicaMoPackage.CLASS_PREFIXES__MODEL:
        return isModel();
      case ModelicaMoPackage.CLASS_PREFIXES__OPERATOR:
        return isOperator();
      case ModelicaMoPackage.CLASS_PREFIXES__RECORD:
        return isRecord();
      case ModelicaMoPackage.CLASS_PREFIXES__BLOCK:
        return isBlock();
      case ModelicaMoPackage.CLASS_PREFIXES__EXPANDABLE:
        return isExpandable();
      case ModelicaMoPackage.CLASS_PREFIXES__CONNECTOR:
        return isConnector();
      case ModelicaMoPackage.CLASS_PREFIXES__TYPE:
        return isType();
      case ModelicaMoPackage.CLASS_PREFIXES__PACKAGE:
        return isPackage();
      case ModelicaMoPackage.CLASS_PREFIXES__PURE:
        return isPure();
      case ModelicaMoPackage.CLASS_PREFIXES__FUNCTION:
        return isFunction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CLASS_PREFIXES__PARTIAL:
        setPartial((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__CLASS:
        setClass((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__MODEL:
        setModel((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__OPERATOR:
        setOperator((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__RECORD:
        setRecord((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__BLOCK:
        setBlock((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__EXPANDABLE:
        setExpandable((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__CONNECTOR:
        setConnector((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__TYPE:
        setType((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__PACKAGE:
        setPackage((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__PURE:
        setPure((Boolean)newValue);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__FUNCTION:
        setFunction((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CLASS_PREFIXES__PARTIAL:
        setPartial(PARTIAL_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__CLASS:
        setClass(CLASS_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__MODEL:
        setModel(MODEL_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__OPERATOR:
        setOperator(OPERATOR_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__RECORD:
        setRecord(RECORD_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__BLOCK:
        setBlock(BLOCK_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__EXPANDABLE:
        setExpandable(EXPANDABLE_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__CONNECTOR:
        setConnector(CONNECTOR_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__PACKAGE:
        setPackage(PACKAGE_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__PURE:
        setPure(PURE_EDEFAULT);
        return;
      case ModelicaMoPackage.CLASS_PREFIXES__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.CLASS_PREFIXES__PARTIAL:
        return partial != PARTIAL_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__CLASS:
        return class_ != CLASS_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__MODEL:
        return model != MODEL_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__OPERATOR:
        return operator != OPERATOR_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__RECORD:
        return record != RECORD_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__BLOCK:
        return block != BLOCK_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__EXPANDABLE:
        return expandable != EXPANDABLE_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__CONNECTOR:
        return connector != CONNECTOR_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__TYPE:
        return type != TYPE_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__PACKAGE:
        return package_ != PACKAGE_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__PURE:
        return pure != PURE_EDEFAULT;
      case ModelicaMoPackage.CLASS_PREFIXES__FUNCTION:
        return function != FUNCTION_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (partial: ");
    result.append(partial);
    result.append(", class: ");
    result.append(class_);
    result.append(", model: ");
    result.append(model);
    result.append(", operator: ");
    result.append(operator);
    result.append(", record: ");
    result.append(record);
    result.append(", block: ");
    result.append(block);
    result.append(", expandable: ");
    result.append(expandable);
    result.append(", connector: ");
    result.append(connector);
    result.append(", type: ");
    result.append(type);
    result.append(", package: ");
    result.append(package_);
    result.append(", pure: ");
    result.append(pure);
    result.append(", function: ");
    result.append(function);
    result.append(')');
    return result.toString();
  }

} //ClassPrefixesImpl
