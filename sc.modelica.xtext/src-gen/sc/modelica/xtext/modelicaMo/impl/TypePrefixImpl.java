/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;
import sc.modelica.xtext.modelicaMo.TypePrefix;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Type Prefix</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isFlow <em>Flow</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isStream <em>Stream</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isConstant <em>Constant</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isParameter <em>Parameter</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isDiscrete <em>Discrete</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isInput <em>Input</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl#isOutput <em>Output</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TypePrefixImpl extends BasePrefixImpl implements TypePrefix
{
  /**
   * The default value of the '{@link #isFlow() <em>Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlow()
   * @generated
   * @ordered
   */
  protected static final boolean FLOW_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFlow() <em>Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlow()
   * @generated
   * @ordered
   */
  protected boolean flow = FLOW_EDEFAULT;

  /**
   * The default value of the '{@link #isStream() <em>Stream</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStream()
   * @generated
   * @ordered
   */
  protected static final boolean STREAM_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStream() <em>Stream</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStream()
   * @generated
   * @ordered
   */
  protected boolean stream = STREAM_EDEFAULT;

  /**
   * The default value of the '{@link #isConstant() <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstant()
   * @generated
   * @ordered
   */
  protected static final boolean CONSTANT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConstant() <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstant()
   * @generated
   * @ordered
   */
  protected boolean constant = CONSTANT_EDEFAULT;

  /**
   * The default value of the '{@link #isParameter() <em>Parameter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isParameter()
   * @generated
   * @ordered
   */
  protected static final boolean PARAMETER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isParameter() <em>Parameter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isParameter()
   * @generated
   * @ordered
   */
  protected boolean parameter = PARAMETER_EDEFAULT;

  /**
   * The default value of the '{@link #isDiscrete() <em>Discrete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscrete()
   * @generated
   * @ordered
   */
  protected static final boolean DISCRETE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDiscrete() <em>Discrete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscrete()
   * @generated
   * @ordered
   */
  protected boolean discrete = DISCRETE_EDEFAULT;

  /**
   * The default value of the '{@link #isInput() <em>Input</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInput()
   * @generated
   * @ordered
   */
  protected static final boolean INPUT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isInput() <em>Input</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInput()
   * @generated
   * @ordered
   */
  protected boolean input = INPUT_EDEFAULT;

  /**
   * The default value of the '{@link #isOutput() <em>Output</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOutput()
   * @generated
   * @ordered
   */
  protected static final boolean OUTPUT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOutput() <em>Output</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOutput()
   * @generated
   * @ordered
   */
  protected boolean output = OUTPUT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TypePrefixImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.TYPE_PREFIX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFlow()
  {
    return flow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFlow(boolean newFlow)
  {
    boolean oldFlow = flow;
    flow = newFlow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__FLOW, oldFlow, flow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isStream()
  {
    return stream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStream(boolean newStream)
  {
    boolean oldStream = stream;
    stream = newStream;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__STREAM, oldStream, stream));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isConstant()
  {
    return constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant(boolean newConstant)
  {
    boolean oldConstant = constant;
    constant = newConstant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__CONSTANT, oldConstant, constant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isParameter()
  {
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameter(boolean newParameter)
  {
    boolean oldParameter = parameter;
    parameter = newParameter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__PARAMETER, oldParameter, parameter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDiscrete()
  {
    return discrete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDiscrete(boolean newDiscrete)
  {
    boolean oldDiscrete = discrete;
    discrete = newDiscrete;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__DISCRETE, oldDiscrete, discrete));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isInput()
  {
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInput(boolean newInput)
  {
    boolean oldInput = input;
    input = newInput;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__INPUT, oldInput, input));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOutput()
  {
    return output;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutput(boolean newOutput)
  {
    boolean oldOutput = output;
    output = newOutput;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.TYPE_PREFIX__OUTPUT, oldOutput, output));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.TYPE_PREFIX__FLOW:
        return isFlow();
      case ModelicaMoPackage.TYPE_PREFIX__STREAM:
        return isStream();
      case ModelicaMoPackage.TYPE_PREFIX__CONSTANT:
        return isConstant();
      case ModelicaMoPackage.TYPE_PREFIX__PARAMETER:
        return isParameter();
      case ModelicaMoPackage.TYPE_PREFIX__DISCRETE:
        return isDiscrete();
      case ModelicaMoPackage.TYPE_PREFIX__INPUT:
        return isInput();
      case ModelicaMoPackage.TYPE_PREFIX__OUTPUT:
        return isOutput();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.TYPE_PREFIX__FLOW:
        setFlow((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__STREAM:
        setStream((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__CONSTANT:
        setConstant((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__PARAMETER:
        setParameter((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__DISCRETE:
        setDiscrete((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__INPUT:
        setInput((Boolean)newValue);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__OUTPUT:
        setOutput((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.TYPE_PREFIX__FLOW:
        setFlow(FLOW_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__STREAM:
        setStream(STREAM_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__CONSTANT:
        setConstant(CONSTANT_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__PARAMETER:
        setParameter(PARAMETER_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__DISCRETE:
        setDiscrete(DISCRETE_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__INPUT:
        setInput(INPUT_EDEFAULT);
        return;
      case ModelicaMoPackage.TYPE_PREFIX__OUTPUT:
        setOutput(OUTPUT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.TYPE_PREFIX__FLOW:
        return flow != FLOW_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__STREAM:
        return stream != STREAM_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__CONSTANT:
        return constant != CONSTANT_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__PARAMETER:
        return parameter != PARAMETER_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__DISCRETE:
        return discrete != DISCRETE_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__INPUT:
        return input != INPUT_EDEFAULT;
      case ModelicaMoPackage.TYPE_PREFIX__OUTPUT:
        return output != OUTPUT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (flow: ");
    result.append(flow);
    result.append(", stream: ");
    result.append(stream);
    result.append(", constant: ");
    result.append(constant);
    result.append(", parameter: ");
    result.append(parameter);
    result.append(", discrete: ");
    result.append(discrete);
    result.append(", input: ");
    result.append(input);
    result.append(", output: ");
    result.append(output);
    result.append(')');
    return result.toString();
  }

} //TypePrefixImpl
