/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import sc.modelica.xtext.modelicaMo.ExperimentOption;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Experiment Option</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl#getStart <em>Start</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl#getStop <em>Stop</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl#getStep <em>Step</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl#getTol <em>Tol</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExperimentOptionImpl extends MinimalEObjectImpl.Container implements ExperimentOption
{
  /**
   * The default value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected static final double START_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected double start = START_EDEFAULT;

  /**
   * The default value of the '{@link #getStop() <em>Stop</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop()
   * @generated
   * @ordered
   */
  protected static final double STOP_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getStop() <em>Stop</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop()
   * @generated
   * @ordered
   */
  protected double stop = STOP_EDEFAULT;

  /**
   * The default value of the '{@link #getStep() <em>Step</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStep()
   * @generated
   * @ordered
   */
  protected static final double STEP_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getStep() <em>Step</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStep()
   * @generated
   * @ordered
   */
  protected double step = STEP_EDEFAULT;

  /**
   * The default value of the '{@link #getTol() <em>Tol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTol()
   * @generated
   * @ordered
   */
  protected static final double TOL_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getTol() <em>Tol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTol()
   * @generated
   * @ordered
   */
  protected double tol = TOL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExperimentOptionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.EXPERIMENT_OPTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getStart()
  {
    return start;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStart(double newStart)
  {
    double oldStart = start;
    start = newStart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EXPERIMENT_OPTION__START, oldStart, start));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getStop()
  {
    return stop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStop(double newStop)
  {
    double oldStop = stop;
    stop = newStop;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EXPERIMENT_OPTION__STOP, oldStop, stop));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getStep()
  {
    return step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStep(double newStep)
  {
    double oldStep = step;
    step = newStep;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EXPERIMENT_OPTION__STEP, oldStep, step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getTol()
  {
    return tol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTol(double newTol)
  {
    double oldTol = tol;
    tol = newTol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.EXPERIMENT_OPTION__TOL, oldTol, tol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EXPERIMENT_OPTION__START:
        return getStart();
      case ModelicaMoPackage.EXPERIMENT_OPTION__STOP:
        return getStop();
      case ModelicaMoPackage.EXPERIMENT_OPTION__STEP:
        return getStep();
      case ModelicaMoPackage.EXPERIMENT_OPTION__TOL:
        return getTol();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EXPERIMENT_OPTION__START:
        setStart((Double)newValue);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STOP:
        setStop((Double)newValue);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STEP:
        setStep((Double)newValue);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__TOL:
        setTol((Double)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EXPERIMENT_OPTION__START:
        setStart(START_EDEFAULT);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STOP:
        setStop(STOP_EDEFAULT);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STEP:
        setStep(STEP_EDEFAULT);
        return;
      case ModelicaMoPackage.EXPERIMENT_OPTION__TOL:
        setTol(TOL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.EXPERIMENT_OPTION__START:
        return start != START_EDEFAULT;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STOP:
        return stop != STOP_EDEFAULT;
      case ModelicaMoPackage.EXPERIMENT_OPTION__STEP:
        return step != STEP_EDEFAULT;
      case ModelicaMoPackage.EXPERIMENT_OPTION__TOL:
        return tol != TOL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (start: ");
    result.append(start);
    result.append(", stop: ");
    result.append(stop);
    result.append(", step: ");
    result.append(step);
    result.append(", tol: ");
    result.append(tol);
    result.append(')');
    return result.toString();
  }

} //ExperimentOptionImpl
