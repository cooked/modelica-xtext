/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import sc.modelica.xtext.modelicaMo.FillPattern;
import sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs;
import sc.modelica.xtext.modelicaMo.ModelicaMoPackage;
import sc.modelica.xtext.modelicaMo.Point;
import sc.modelica.xtext.modelicaMo.Visible;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Visible</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getPoints <em>Points</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getStr <em>Str</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getFileName <em>File Name</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getImageSource <em>Image Source</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getFillPattern <em>Fill Pattern</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VisibleImpl extends PlacementArgImpl implements Visible
{
  /**
   * The cached value of the '{@link #getPoints() <em>Points</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPoints()
   * @generated
   * @ordered
   */
  protected EList<Point> points;

  /**
   * The default value of the '{@link #getStr() <em>Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStr()
   * @generated
   * @ordered
   */
  protected static final String STR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStr() <em>Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStr()
   * @generated
   * @ordered
   */
  protected String str = STR_EDEFAULT;

  /**
   * The default value of the '{@link #getFileName() <em>File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFileName()
   * @generated
   * @ordered
   */
  protected static final String FILE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFileName() <em>File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFileName()
   * @generated
   * @ordered
   */
  protected String fileName = FILE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getImageSource() <em>Image Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageSource()
   * @generated
   * @ordered
   */
  protected static final String IMAGE_SOURCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImageSource() <em>Image Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageSource()
   * @generated
   * @ordered
   */
  protected String imageSource = IMAGE_SOURCE_EDEFAULT;

  /**
   * The default value of the '{@link #getFillPattern() <em>Fill Pattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFillPattern()
   * @generated
   * @ordered
   */
  protected static final FillPattern FILL_PATTERN_EDEFAULT = FillPattern.NONE;

  /**
   * The cached value of the '{@link #getFillPattern() <em>Fill Pattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFillPattern()
   * @generated
   * @ordered
   */
  protected FillPattern fillPattern = FILL_PATTERN_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VisibleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaMoPackage.Literals.VISIBLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Point> getPoints()
  {
    if (points == null)
    {
      points = new EObjectContainmentEList<Point>(Point.class, this, ModelicaMoPackage.VISIBLE__POINTS);
    }
    return points;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStr()
  {
    return str;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStr(String newStr)
  {
    String oldStr = str;
    str = newStr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.VISIBLE__STR, oldStr, str));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFileName()
  {
    return fileName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFileName(String newFileName)
  {
    String oldFileName = fileName;
    fileName = newFileName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.VISIBLE__FILE_NAME, oldFileName, fileName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getImageSource()
  {
    return imageSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImageSource(String newImageSource)
  {
    String oldImageSource = imageSource;
    imageSource = newImageSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.VISIBLE__IMAGE_SOURCE, oldImageSource, imageSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FillPattern getFillPattern()
  {
    return fillPattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFillPattern(FillPattern newFillPattern)
  {
    FillPattern oldFillPattern = fillPattern;
    fillPattern = newFillPattern == null ? FILL_PATTERN_EDEFAULT : newFillPattern;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.VISIBLE__FILL_PATTERN, oldFillPattern, fillPattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaMoPackage.VISIBLE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.VISIBLE__POINTS:
        return ((InternalEList<?>)getPoints()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.VISIBLE__POINTS:
        return getPoints();
      case ModelicaMoPackage.VISIBLE__STR:
        return getStr();
      case ModelicaMoPackage.VISIBLE__FILE_NAME:
        return getFileName();
      case ModelicaMoPackage.VISIBLE__IMAGE_SOURCE:
        return getImageSource();
      case ModelicaMoPackage.VISIBLE__FILL_PATTERN:
        return getFillPattern();
      case ModelicaMoPackage.VISIBLE__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.VISIBLE__POINTS:
        getPoints().clear();
        getPoints().addAll((Collection<? extends Point>)newValue);
        return;
      case ModelicaMoPackage.VISIBLE__STR:
        setStr((String)newValue);
        return;
      case ModelicaMoPackage.VISIBLE__FILE_NAME:
        setFileName((String)newValue);
        return;
      case ModelicaMoPackage.VISIBLE__IMAGE_SOURCE:
        setImageSource((String)newValue);
        return;
      case ModelicaMoPackage.VISIBLE__FILL_PATTERN:
        setFillPattern((FillPattern)newValue);
        return;
      case ModelicaMoPackage.VISIBLE__VALUE:
        setValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.VISIBLE__POINTS:
        getPoints().clear();
        return;
      case ModelicaMoPackage.VISIBLE__STR:
        setStr(STR_EDEFAULT);
        return;
      case ModelicaMoPackage.VISIBLE__FILE_NAME:
        setFileName(FILE_NAME_EDEFAULT);
        return;
      case ModelicaMoPackage.VISIBLE__IMAGE_SOURCE:
        setImageSource(IMAGE_SOURCE_EDEFAULT);
        return;
      case ModelicaMoPackage.VISIBLE__FILL_PATTERN:
        setFillPattern(FILL_PATTERN_EDEFAULT);
        return;
      case ModelicaMoPackage.VISIBLE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaMoPackage.VISIBLE__POINTS:
        return points != null && !points.isEmpty();
      case ModelicaMoPackage.VISIBLE__STR:
        return STR_EDEFAULT == null ? str != null : !STR_EDEFAULT.equals(str);
      case ModelicaMoPackage.VISIBLE__FILE_NAME:
        return FILE_NAME_EDEFAULT == null ? fileName != null : !FILE_NAME_EDEFAULT.equals(fileName);
      case ModelicaMoPackage.VISIBLE__IMAGE_SOURCE:
        return IMAGE_SOURCE_EDEFAULT == null ? imageSource != null : !IMAGE_SOURCE_EDEFAULT.equals(imageSource);
      case ModelicaMoPackage.VISIBLE__FILL_PATTERN:
        return fillPattern != FILL_PATTERN_EDEFAULT;
      case ModelicaMoPackage.VISIBLE__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == GraphicalPrimitiveArgs.class)
    {
      switch (derivedFeatureID)
      {
        case ModelicaMoPackage.VISIBLE__POINTS: return ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__POINTS;
        case ModelicaMoPackage.VISIBLE__STR: return ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__STR;
        case ModelicaMoPackage.VISIBLE__FILE_NAME: return ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME;
        case ModelicaMoPackage.VISIBLE__IMAGE_SOURCE: return ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE;
        case ModelicaMoPackage.VISIBLE__FILL_PATTERN: return ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == GraphicalPrimitiveArgs.class)
    {
      switch (baseFeatureID)
      {
        case ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__POINTS: return ModelicaMoPackage.VISIBLE__POINTS;
        case ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__STR: return ModelicaMoPackage.VISIBLE__STR;
        case ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME: return ModelicaMoPackage.VISIBLE__FILE_NAME;
        case ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE: return ModelicaMoPackage.VISIBLE__IMAGE_SOURCE;
        case ModelicaMoPackage.GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN: return ModelicaMoPackage.VISIBLE__FILL_PATTERN;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (str: ");
    result.append(str);
    result.append(", fileName: ");
    result.append(fileName);
    result.append(", imageSource: ");
    result.append(imageSource);
    result.append(", fillPattern: ");
    result.append(fillPattern);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //VisibleImpl
