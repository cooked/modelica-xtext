/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see sc.modelica.xtext.modelicaMo.ModelicaMoFactory
 * @model kind="package"
 * @generated
 */
public interface ModelicaMoPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "modelicaMo";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.modelica.sc/xtext/ModelicaMo";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "modelicaMo";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ModelicaMoPackage eINSTANCE = sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl.init();

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ProgramImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__NAME = 0;

  /**
   * The feature id for the '<em><b>Classes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__CLASSES = 1;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassDefinitionImpl <em>Class Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ClassDefinitionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassDefinition()
   * @generated
   */
  int CLASS_DEFINITION = 1;

  /**
   * The feature id for the '<em><b>Encapsulated</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DEFINITION__ENCAPSULATED = 0;

  /**
   * The feature id for the '<em><b>Class Prefixes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DEFINITION__CLASS_PREFIXES = 1;

  /**
   * The feature id for the '<em><b>Class Specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DEFINITION__CLASS_SPECIFIER = 2;

  /**
   * The number of structural features of the '<em>Class Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl <em>Class Prefixes</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassPrefixes()
   * @generated
   */
  int CLASS_PREFIXES = 2;

  /**
   * The feature id for the '<em><b>Partial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__PARTIAL = 0;

  /**
   * The feature id for the '<em><b>Class</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__CLASS = 1;

  /**
   * The feature id for the '<em><b>Model</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__MODEL = 2;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__OPERATOR = 3;

  /**
   * The feature id for the '<em><b>Record</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__RECORD = 4;

  /**
   * The feature id for the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__BLOCK = 5;

  /**
   * The feature id for the '<em><b>Expandable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__EXPANDABLE = 6;

  /**
   * The feature id for the '<em><b>Connector</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__CONNECTOR = 7;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__TYPE = 8;

  /**
   * The feature id for the '<em><b>Package</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__PACKAGE = 9;

  /**
   * The feature id for the '<em><b>Pure</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__PURE = 10;

  /**
   * The feature id for the '<em><b>Function</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES__FUNCTION = 11;

  /**
   * The number of structural features of the '<em>Class Prefixes</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_PREFIXES_FEATURE_COUNT = 12;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassSpecifierImpl <em>Class Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ClassSpecifierImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassSpecifier()
   * @generated
   */
  int CLASS_SPECIFIER = 3;

  /**
   * The number of structural features of the '<em>Class Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_SPECIFIER_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LongClassSpecifierImpl <em>Long Class Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LongClassSpecifierImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLongClassSpecifier()
   * @generated
   */
  int LONG_CLASS_SPECIFIER = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__NAME = CLASS_SPECIFIER_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Sring Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__SRING_COMMENT = CLASS_SPECIFIER_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Composition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__COMPOSITION = CLASS_SPECIFIER_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Name End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__NAME_END = CLASS_SPECIFIER_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Extends</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__EXTENDS = CLASS_SPECIFIER_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Class Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER__CLASS_MODIFICATION = CLASS_SPECIFIER_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Long Class Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_CLASS_SPECIFIER_FEATURE_COUNT = CLASS_SPECIFIER_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ShortClassSpecifierImpl <em>Short Class Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ShortClassSpecifierImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getShortClassSpecifier()
   * @generated
   */
  int SHORT_CLASS_SPECIFIER = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__NAME = CLASS_SPECIFIER_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Base Prefix</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__BASE_PREFIX = CLASS_SPECIFIER_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Instance Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__INSTANCE_NAME = CLASS_SPECIFIER_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Array Subscripts</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__ARRAY_SUBSCRIPTS = CLASS_SPECIFIER_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Class Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__CLASS_MODIFICATION = CLASS_SPECIFIER_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__COMMENT = CLASS_SPECIFIER_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Enum List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER__ENUM_LIST = CLASS_SPECIFIER_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Short Class Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_SPECIFIER_FEATURE_COUNT = CLASS_SPECIFIER_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.DerClassSpecifierImpl <em>Der Class Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.DerClassSpecifierImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDerClassSpecifier()
   * @generated
   */
  int DER_CLASS_SPECIFIER = 6;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DER_CLASS_SPECIFIER__ID = CLASS_SPECIFIER_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DER_CLASS_SPECIFIER__NAME = CLASS_SPECIFIER_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DER_CLASS_SPECIFIER__COMMENT = CLASS_SPECIFIER_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Der Class Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DER_CLASS_SPECIFIER_FEATURE_COUNT = CLASS_SPECIFIER_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.BasePrefixImpl <em>Base Prefix</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.BasePrefixImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBasePrefix()
   * @generated
   */
  int BASE_PREFIX = 7;

  /**
   * The number of structural features of the '<em>Base Prefix</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_PREFIX_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EnumListImpl <em>Enum List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EnumListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnumList()
   * @generated
   */
  int ENUM_LIST = 8;

  /**
   * The feature id for the '<em><b>Enumeration Literal</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM_LIST__ENUMERATION_LITERAL = 0;

  /**
   * The number of structural features of the '<em>Enum List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EnumerationLiteralImpl <em>Enumeration Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EnumerationLiteralImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnumerationLiteral()
   * @generated
   */
  int ENUMERATION_LITERAL = 9;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_LITERAL__COMMENT = 0;

  /**
   * The number of structural features of the '<em>Enumeration Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_LITERAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.CompositionImpl <em>Composition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.CompositionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComposition()
   * @generated
   */
  int COMPOSITION = 10;

  /**
   * The feature id for the '<em><b>Element List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__ELEMENT_LIST = 0;

  /**
   * The feature id for the '<em><b>Element List Public</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__ELEMENT_LIST_PUBLIC = 1;

  /**
   * The feature id for the '<em><b>Element List Protected</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__ELEMENT_LIST_PROTECTED = 2;

  /**
   * The feature id for the '<em><b>Equation Sections</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__EQUATION_SECTIONS = 3;

  /**
   * The feature id for the '<em><b>Algorithm Sections</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__ALGORITHM_SECTIONS = 4;

  /**
   * The feature id for the '<em><b>Language Specification</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__LANGUAGE_SPECIFICATION = 5;

  /**
   * The feature id for the '<em><b>Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__ANNOTATION = 6;

  /**
   * The number of structural features of the '<em>Composition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementListImpl <em>Element List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementList()
   * @generated
   */
  int ELEMENT_LIST = 11;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_LIST__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Element List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementImpl <em>Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElement()
   * @generated
   */
  int ELEMENT = 12;

  /**
   * The feature id for the '<em><b>Import Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__IMPORT_CLAUSE = 0;

  /**
   * The feature id for the '<em><b>Extend Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__EXTEND_CLAUSE = 1;

  /**
   * The feature id for the '<em><b>Redeclare</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__REDECLARE = 2;

  /**
   * The feature id for the '<em><b>Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__FINAL = 3;

  /**
   * The feature id for the '<em><b>Inner</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__INNER = 4;

  /**
   * The feature id for the '<em><b>Outer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__OUTER = 5;

  /**
   * The feature id for the '<em><b>Class</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__CLASS = 6;

  /**
   * The feature id for the '<em><b>Comp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__COMP = 7;

  /**
   * The feature id for the '<em><b>Cc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__CC = 8;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT__COMMENT = 9;

  /**
   * The number of structural features of the '<em>Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ImportClauseImpl <em>Import Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ImportClauseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getImportClause()
   * @generated
   */
  int IMPORT_CLAUSE = 13;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_CLAUSE__ID = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_CLAUSE__NAME = 1;

  /**
   * The feature id for the '<em><b>Import List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_CLAUSE__IMPORT_LIST = 2;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_CLAUSE__COMMENT = 3;

  /**
   * The number of structural features of the '<em>Import Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_CLAUSE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ImportListImpl <em>Import List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ImportListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getImportList()
   * @generated
   */
  int IMPORT_LIST = 14;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_LIST__ID = 0;

  /**
   * The number of structural features of the '<em>Import List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ExtendClauseImpl <em>Extend Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ExtendClauseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExtendClause()
   * @generated
   */
  int EXTEND_CLAUSE = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTEND_CLAUSE__NAME = 0;

  /**
   * The feature id for the '<em><b>Class Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTEND_CLAUSE__CLASS_MODIFICATION = 1;

  /**
   * The feature id for the '<em><b>Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTEND_CLAUSE__ANNOTATION = 2;

  /**
   * The number of structural features of the '<em>Extend Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTEND_CLAUSE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ConstrainingClauseImpl <em>Constraining Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ConstrainingClauseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConstrainingClause()
   * @generated
   */
  int CONSTRAINING_CLAUSE = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINING_CLAUSE__NAME = 0;

  /**
   * The feature id for the '<em><b>Class Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINING_CLAUSE__CLASS_MODIFICATION = 1;

  /**
   * The number of structural features of the '<em>Constraining Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINING_CLAUSE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ModificationImpl <em>Modification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ModificationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getModification()
   * @generated
   */
  int MODIFICATION = 17;

  /**
   * The feature id for the '<em><b>Class Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFICATION__CLASS_MODIFICATION = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFICATION__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Modification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFICATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassModificationImpl <em>Class Modification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ClassModificationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassModification()
   * @generated
   */
  int CLASS_MODIFICATION = 18;

  /**
   * The feature id for the '<em><b>Argument List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_MODIFICATION__ARGUMENT_LIST = 0;

  /**
   * The number of structural features of the '<em>Class Modification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_MODIFICATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ArgumentListImpl <em>Argument List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ArgumentListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArgumentList()
   * @generated
   */
  int ARGUMENT_LIST = 19;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT_LIST__ARGUMENTS = 0;

  /**
   * The number of structural features of the '<em>Argument List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ArgumentImpl <em>Argument</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ArgumentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArgument()
   * @generated
   */
  int ARGUMENT = 20;

  /**
   * The feature id for the '<em><b>Each</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT__EACH = 0;

  /**
   * The feature id for the '<em><b>Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT__FINAL = 1;

  /**
   * The number of structural features of the '<em>Argument</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementModificationOrReplaceableImpl <em>Element Modification Or Replaceable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementModificationOrReplaceableImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementModificationOrReplaceable()
   * @generated
   */
  int ELEMENT_MODIFICATION_OR_REPLACEABLE = 21;

  /**
   * The feature id for the '<em><b>Each</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION_OR_REPLACEABLE__EACH = ARGUMENT__EACH;

  /**
   * The feature id for the '<em><b>Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION_OR_REPLACEABLE__FINAL = ARGUMENT__FINAL;

  /**
   * The feature id for the '<em><b>Element Mod Or Rep</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION_OR_REPLACEABLE__ELEMENT_MOD_OR_REP = ARGUMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Element Modification Or Replaceable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION_OR_REPLACEABLE_FEATURE_COUNT = ARGUMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementModificationImpl <em>Element Modification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementModificationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementModification()
   * @generated
   */
  int ELEMENT_MODIFICATION = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION__MODIFICATION = 1;

  /**
   * The feature id for the '<em><b>String Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION__STRING_COMMENT = 2;

  /**
   * The number of structural features of the '<em>Element Modification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_MODIFICATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementRedeclarationImpl <em>Element Redeclaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementRedeclarationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementRedeclaration()
   * @generated
   */
  int ELEMENT_REDECLARATION = 23;

  /**
   * The feature id for the '<em><b>Each</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__EACH = ARGUMENT__EACH;

  /**
   * The feature id for the '<em><b>Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__FINAL = ARGUMENT__FINAL;

  /**
   * The feature id for the '<em><b>Redeclare</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__REDECLARE = ARGUMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Class Definition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__CLASS_DEFINITION = ARGUMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Component Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__COMPONENT_CLAUSE = ARGUMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION__ELEMENT = ARGUMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Element Redeclaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REDECLARATION_FEATURE_COUNT = ARGUMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementReplaceableImpl <em>Element Replaceable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ElementReplaceableImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementReplaceable()
   * @generated
   */
  int ELEMENT_REPLACEABLE = 24;

  /**
   * The feature id for the '<em><b>Replaceable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REPLACEABLE__REPLACEABLE = 0;

  /**
   * The feature id for the '<em><b>Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REPLACEABLE__ELEMENT = 1;

  /**
   * The feature id for the '<em><b>Constraint</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REPLACEABLE__CONSTRAINT = 2;

  /**
   * The number of structural features of the '<em>Element Replaceable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_REPLACEABLE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentClause1Impl <em>Component Clause1</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentClause1Impl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentClause1()
   * @generated
   */
  int COMPONENT_CLAUSE1 = 25;

  /**
   * The feature id for the '<em><b>Type Prefix</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE1__TYPE_PREFIX = 0;

  /**
   * The feature id for the '<em><b>Type Specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE1__TYPE_SPECIFIER = 1;

  /**
   * The feature id for the '<em><b>Component Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE1__COMPONENT_DECLARATION = 2;

  /**
   * The number of structural features of the '<em>Component Clause1</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE1_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentDeclaration1Impl <em>Component Declaration1</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentDeclaration1Impl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentDeclaration1()
   * @generated
   */
  int COMPONENT_DECLARATION1 = 26;

  /**
   * The number of structural features of the '<em>Component Declaration1</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION1_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ShortClassDefinitionImpl <em>Short Class Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ShortClassDefinitionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getShortClassDefinition()
   * @generated
   */
  int SHORT_CLASS_DEFINITION = 27;

  /**
   * The feature id for the '<em><b>Class Prefixes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_DEFINITION__CLASS_PREFIXES = 0;

  /**
   * The feature id for the '<em><b>Class Specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_DEFINITION__CLASS_SPECIFIER = 1;

  /**
   * The number of structural features of the '<em>Short Class Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORT_CLASS_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentClauseImpl <em>Component Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentClauseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentClause()
   * @generated
   */
  int COMPONENT_CLAUSE = 28;

  /**
   * The feature id for the '<em><b>Type Prefix</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE__TYPE_PREFIX = 0;

  /**
   * The feature id for the '<em><b>Type Spec</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE__TYPE_SPEC = 1;

  /**
   * The feature id for the '<em><b>Array Subscripts</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE__ARRAY_SUBSCRIPTS = 2;

  /**
   * The feature id for the '<em><b>Component List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE__COMPONENT_LIST = 3;

  /**
   * The number of structural features of the '<em>Component Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_CLAUSE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl <em>Type Prefix</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTypePrefix()
   * @generated
   */
  int TYPE_PREFIX = 29;

  /**
   * The feature id for the '<em><b>Flow</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__FLOW = BASE_PREFIX_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Stream</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__STREAM = BASE_PREFIX_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__CONSTANT = BASE_PREFIX_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__PARAMETER = BASE_PREFIX_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Discrete</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__DISCRETE = BASE_PREFIX_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Input</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__INPUT = BASE_PREFIX_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Output</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX__OUTPUT = BASE_PREFIX_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Type Prefix</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_PREFIX_FEATURE_COUNT = BASE_PREFIX_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TypeSpecifierImpl <em>Type Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TypeSpecifierImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTypeSpecifier()
   * @generated
   */
  int TYPE_SPECIFIER = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SPECIFIER__NAME = 0;

  /**
   * The number of structural features of the '<em>Type Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SPECIFIER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentListImpl <em>Component List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentList()
   * @generated
   */
  int COMPONENT_LIST = 31;

  /**
   * The feature id for the '<em><b>Components</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_LIST__COMPONENTS = 0;

  /**
   * The number of structural features of the '<em>Component List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentDeclarationImpl <em>Component Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentDeclarationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentDeclaration()
   * @generated
   */
  int COMPONENT_DECLARATION = 32;

  /**
   * The feature id for the '<em><b>Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION__DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Condition Attribute</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION__CONDITION_ATTRIBUTE = 1;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION__COMMENT = 2;

  /**
   * The feature id for the '<em><b>Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION__ANNOTATION = 3;

  /**
   * The number of structural features of the '<em>Component Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_DECLARATION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ConditionAttributeImpl <em>Condition Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ConditionAttributeImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConditionAttribute()
   * @generated
   */
  int CONDITION_ATTRIBUTE = 33;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_ATTRIBUTE__CONDITION = 0;

  /**
   * The number of structural features of the '<em>Condition Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_ATTRIBUTE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.DeclarationImpl <em>Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.DeclarationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDeclaration()
   * @generated
   */
  int DECLARATION = 34;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__COMMENT = COMPONENT_DECLARATION1_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__NAME = COMPONENT_DECLARATION1_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Array Subscripts</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__ARRAY_SUBSCRIPTS = COMPONENT_DECLARATION1_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Modification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__MODIFICATION = COMPONENT_DECLARATION1_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE_COUNT = COMPONENT_DECLARATION1_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationSectionImpl <em>Equation Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EquationSectionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationSection()
   * @generated
   */
  int EQUATION_SECTION = 35;

  /**
   * The feature id for the '<em><b>Initial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_SECTION__INITIAL = 0;

  /**
   * The feature id for the '<em><b>Equation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_SECTION__EQUATION = 1;

  /**
   * The feature id for the '<em><b>Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_SECTION__EQUATIONS = 2;

  /**
   * The number of structural features of the '<em>Equation Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_SECTION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AlgorithmSectionImpl <em>Algorithm Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AlgorithmSectionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAlgorithmSection()
   * @generated
   */
  int ALGORITHM_SECTION = 36;

  /**
   * The feature id for the '<em><b>Initial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGORITHM_SECTION__INITIAL = 0;

  /**
   * The feature id for the '<em><b>Algorithm</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGORITHM_SECTION__ALGORITHM = 1;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGORITHM_SECTION__STATEMENTS = 2;

  /**
   * The number of structural features of the '<em>Algorithm Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGORITHM_SECTION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationImpl <em>Equation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EquationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquation()
   * @generated
   */
  int EQUATION = 37;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__CONNECTION = 0;

  /**
   * The number of structural features of the '<em>Equation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StatementImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 38;

  /**
   * The feature id for the '<em><b>Component</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__COMPONENT = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__FCA = 2;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__COMM = 3;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl <em>Equation If</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EquationIfImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationIf()
   * @generated
   */
  int EQUATION_IF = 39;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__CONNECTION = EQUATION__CONNECTION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__COMM = EQUATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>If Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__IF_EXP = EQUATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>If Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__IF_EQS = EQUATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Elseif Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__ELSEIF_EXP = EQUATION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Else If Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__ELSE_IF_EQS = EQUATION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Else Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF__ELSE_EQS = EQUATION_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Equation If</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_IF_FEATURE_COUNT = EQUATION_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementIfImpl <em>Statement If</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StatementIfImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementIf()
   * @generated
   */
  int STATEMENT_IF = 40;

  /**
   * The feature id for the '<em><b>Component</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__COMPONENT = STATEMENT__COMPONENT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__EXPRESSION = STATEMENT__EXPRESSION;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__FCA = STATEMENT__FCA;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__COMM = STATEMENT__COMM;

  /**
   * The feature id for the '<em><b>If Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__IF_EXP = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>If Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__IF_EQS = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Elseif Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__ELSEIF_EXP = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Else If Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__ELSE_IF_EQS = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Else Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF__ELSE_EQS = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Statement If</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_IF_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationForImpl <em>Equation For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EquationForImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationFor()
   * @generated
   */
  int EQUATION_FOR = 41;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FOR__CONNECTION = EQUATION__CONNECTION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FOR__COMM = EQUATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Iterators</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FOR__ITERATORS = EQUATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>For Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FOR__FOR_EQS = EQUATION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equation For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FOR_FEATURE_COUNT = EQUATION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementForImpl <em>Statement For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StatementForImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementFor()
   * @generated
   */
  int STATEMENT_FOR = 42;

  /**
   * The feature id for the '<em><b>Component</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__COMPONENT = STATEMENT__COMPONENT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__EXPRESSION = STATEMENT__EXPRESSION;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__FCA = STATEMENT__FCA;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__COMM = STATEMENT__COMM;

  /**
   * The feature id for the '<em><b>Iterators</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__ITERATORS = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>For Eqs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR__FOR_EQS = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Statement For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FOR_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ForIndicesImpl <em>For Indices</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ForIndicesImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getForIndices()
   * @generated
   */
  int FOR_INDICES = 43;

  /**
   * The feature id for the '<em><b>For Index</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_INDICES__FOR_INDEX = 0;

  /**
   * The number of structural features of the '<em>For Indices</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_INDICES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ForIndexImpl <em>For Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ForIndexImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getForIndex()
   * @generated
   */
  int FOR_INDEX = 44;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_INDEX__ID = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_INDEX__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>For Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_INDEX_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementWhileImpl <em>Statement While</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StatementWhileImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementWhile()
   * @generated
   */
  int STATEMENT_WHILE = 45;

  /**
   * The feature id for the '<em><b>Component</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__COMPONENT = STATEMENT__COMPONENT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__EXPRESSION = STATEMENT__EXPRESSION;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__FCA = STATEMENT__FCA;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__COMM = STATEMENT__COMM;

  /**
   * The feature id for the '<em><b>Bool Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__BOOL_EXPR = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Stat</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE__STAT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Statement While</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHILE_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationWhenImpl <em>Equation When</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EquationWhenImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationWhen()
   * @generated
   */
  int EQUATION_WHEN = 46;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__CONNECTION = EQUATION__CONNECTION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__COMM = EQUATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>When Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__WHEN_EXP = EQUATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>When Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__WHEN_EQUATIONS = EQUATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__EXP = EQUATION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Equation Item</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN__EQUATION_ITEM = EQUATION_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Equation When</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_WHEN_FEATURE_COUNT = EQUATION_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementWhenImpl <em>Statement When</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StatementWhenImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementWhen()
   * @generated
   */
  int STATEMENT_WHEN = 47;

  /**
   * The feature id for the '<em><b>Component</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__COMPONENT = STATEMENT__COMPONENT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__EXPRESSION = STATEMENT__EXPRESSION;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__FCA = STATEMENT__FCA;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__COMM = STATEMENT__COMM;

  /**
   * The feature id for the '<em><b>When Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__WHEN_EXP = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>When Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__WHEN_EQUATIONS = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__EXP = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Equation Item</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN__EQUATION_ITEM = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Statement When</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_WHEN_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl <em>Connect Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConnectClause()
   * @generated
   */
  int CONNECT_CLAUSE = 48;

  /**
   * The feature id for the '<em><b>Node1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONNECT_CLAUSE__NODE1 = 0;

  /**
   * The feature id for the '<em><b>Node2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONNECT_CLAUSE__NODE2 = 1;

  /**
   * The feature id for the '<em><b>Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONNECT_CLAUSE__ANNOTATION = 2;

  /**
   * The number of structural features of the '<em>Connect Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONNECT_CLAUSE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ExpressionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 49;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__CONNECTION = EQUATION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EQUATION = EQUATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__COMM = EQUATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__IF = EQUATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__THEN = EQUATION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ELSEIF = EQUATION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ELSEIFTHEN = EQUATION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ELSE = EQUATION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__START = EQUATION_FEATURE_COUNT + 7;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__STEP = EQUATION_FEATURE_COUNT + 8;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__STOP = EQUATION_FEATURE_COUNT + 9;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXP = EQUATION_FEATURE_COUNT + 10;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LIST = EQUATION_FEATURE_COUNT + 11;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__FA = EQUATION_FEATURE_COUNT + 12;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = EQUATION_FEATURE_COUNT + 13;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.NameImpl <em>Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.NameImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getName_()
   * @generated
   */
  int NAME = 50;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME__ID = 0;

  /**
   * The number of structural features of the '<em>Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentReferenceImpl <em>Component Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ComponentReferenceImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentReference()
   * @generated
   */
  int COMPONENT_REFERENCE = 51;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Subs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__SUBS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE__ID = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Component Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_REFERENCE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionCallArgsImpl <em>Function Call Args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.FunctionCallArgsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionCallArgs()
   * @generated
   */
  int FUNCTION_CALL_ARGS = 52;

  /**
   * The feature id for the '<em><b>Function Args</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL_ARGS__FUNCTION_ARGS = 0;

  /**
   * The number of structural features of the '<em>Function Call Args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL_ARGS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionArgumentsImpl <em>Function Arguments</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.FunctionArgumentsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionArguments()
   * @generated
   */
  int FUNCTION_ARGUMENTS = 53;

  /**
   * The feature id for the '<em><b>Function Argument</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENTS__FUNCTION_ARGUMENT = 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENTS__ARGS = 1;

  /**
   * The feature id for the '<em><b>For Indices</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENTS__FOR_INDICES = 2;

  /**
   * The feature id for the '<em><b>Named Arguments</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENTS__NAMED_ARGUMENTS = 3;

  /**
   * The number of structural features of the '<em>Function Arguments</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENTS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.NamedArgumentsImpl <em>Named Arguments</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.NamedArgumentsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getNamedArguments()
   * @generated
   */
  int NAMED_ARGUMENTS = 54;

  /**
   * The feature id for the '<em><b>Named Argument</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENTS__NAMED_ARGUMENT = 0;

  /**
   * The feature id for the '<em><b>Named Arguments</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENTS__NAMED_ARGUMENTS = 1;

  /**
   * The number of structural features of the '<em>Named Arguments</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENTS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.NamedArgumentImpl <em>Named Argument</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.NamedArgumentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getNamedArgument()
   * @generated
   */
  int NAMED_ARGUMENT = 55;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENT__NAME = 0;

  /**
   * The feature id for the '<em><b>Function Argument</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENT__FUNCTION_ARGUMENT = 1;

  /**
   * The number of structural features of the '<em>Named Argument</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_ARGUMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionArgumentImpl <em>Function Argument</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.FunctionArgumentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionArgument()
   * @generated
   */
  int FUNCTION_ARGUMENT = 56;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENT__NAME = 0;

  /**
   * The feature id for the '<em><b>Named Arguments</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENT__NAMED_ARGUMENTS = 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENT__EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>Function Argument</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_ARGUMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.OutputExpressionListImpl <em>Output Expression List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.OutputExpressionListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOutputExpressionList()
   * @generated
   */
  int OUTPUT_EXPRESSION_LIST = 57;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST__FA = EXPRESSION__FA;

  /**
   * The number of structural features of the '<em>Output Expression List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESSION_LIST_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ExprExpressionListImpl <em>Expr Expression List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ExprExpressionListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExprExpressionList()
   * @generated
   */
  int EXPR_EXPRESSION_LIST = 58;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_EXPRESSION_LIST__EXP = 0;

  /**
   * The number of structural features of the '<em>Expr Expression List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_EXPRESSION_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ArraySubscriptsImpl <em>Array Subscripts</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ArraySubscriptsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArraySubscripts()
   * @generated
   */
  int ARRAY_SUBSCRIPTS = 59;

  /**
   * The feature id for the '<em><b>Subscripts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SUBSCRIPTS__SUBSCRIPTS = 0;

  /**
   * The number of structural features of the '<em>Array Subscripts</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SUBSCRIPTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.SubscriptImpl <em>Subscript</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.SubscriptImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSubscript()
   * @generated
   */
  int SUBSCRIPT = 60;

  /**
   * The number of structural features of the '<em>Subscript</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSCRIPT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.CommentImpl <em>Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.CommentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComment()
   * @generated
   */
  int COMMENT = 61;

  /**
   * The feature id for the '<em><b>String Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT__STRING_COMMENT = 0;

  /**
   * The feature id for the '<em><b>Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT__ANNOTATION = 1;

  /**
   * The number of structural features of the '<em>Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.StringCommentImpl <em>String Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.StringCommentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStringComment()
   * @generated
   */
  int STRING_COMMENT = 62;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_COMMENT__STR = 0;

  /**
   * The number of structural features of the '<em>String Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_COMMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AssertImpl <em>Assert</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AssertImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAssert()
   * @generated
   */
  int ASSERT = 63;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERT__CONNECTION = EQUATION__CONNECTION;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERT__CONDITION = EQUATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Message</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERT__MESSAGE = EQUATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Level</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERT__LEVEL = EQUATION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Assert</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERT_FEATURE_COUNT = EQUATION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationImpl <em>Annotation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotation()
   * @generated
   */
  int ANNOTATION = 64;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION__ARGS = 0;

  /**
   * The number of structural features of the '<em>Annotation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationArgImpl <em>Annotation Arg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationArgImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationArg()
   * @generated
   */
  int ANNOTATION_ARG = 65;

  /**
   * The number of structural features of the '<em>Annotation Arg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_ARG_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.DefComponentNameImpl <em>Def Component Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.DefComponentNameImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDefComponentName()
   * @generated
   */
  int DEF_COMPONENT_NAME = 66;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_COMPONENT_NAME__VALUE = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Def Component Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_COMPONENT_NAME_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ChoicesImpl <em>Choices</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ChoicesImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getChoices()
   * @generated
   */
  int CHOICES = 67;

  /**
   * The feature id for the '<em><b>Types</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHOICES__TYPES = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Values</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHOICES__VALUES = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Choices</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHOICES_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationCodeImpl <em>Annotation Code</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationCodeImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationCode()
   * @generated
   */
  int ANNOTATION_CODE = 68;

  /**
   * The feature id for the '<em><b>Flag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_CODE__FLAG = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_CODE__VALUE = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Annotation Code</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_CODE_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationLayerImpl <em>Annotation Layer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationLayerImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationLayer()
   * @generated
   */
  int ANNOTATION_LAYER = 69;

  /**
   * The feature id for the '<em><b>Coordinate System</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_LAYER__COORDINATE_SYSTEM = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Graphics</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_LAYER__GRAPHICS = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Annotation Layer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_LAYER_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LayerIconImpl <em>Layer Icon</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LayerIconImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLayerIcon()
   * @generated
   */
  int LAYER_ICON = 70;

  /**
   * The feature id for the '<em><b>Coordinate System</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_ICON__COORDINATE_SYSTEM = ANNOTATION_LAYER__COORDINATE_SYSTEM;

  /**
   * The feature id for the '<em><b>Graphics</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_ICON__GRAPHICS = ANNOTATION_LAYER__GRAPHICS;

  /**
   * The number of structural features of the '<em>Layer Icon</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_ICON_FEATURE_COUNT = ANNOTATION_LAYER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LayerDiagramImpl <em>Layer Diagram</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LayerDiagramImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLayerDiagram()
   * @generated
   */
  int LAYER_DIAGRAM = 71;

  /**
   * The feature id for the '<em><b>Coordinate System</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_DIAGRAM__COORDINATE_SYSTEM = ANNOTATION_LAYER__COORDINATE_SYSTEM;

  /**
   * The feature id for the '<em><b>Graphics</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_DIAGRAM__GRAPHICS = ANNOTATION_LAYER__GRAPHICS;

  /**
   * The number of structural features of the '<em>Layer Diagram</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAYER_DIAGRAM_FEATURE_COUNT = ANNOTATION_LAYER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationImpl <em>Coordinate Specification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getCoordinateSpecification()
   * @generated
   */
  int COORDINATE_SPECIFICATION = 72;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_SPECIFICATION__ARGS = 0;

  /**
   * The number of structural features of the '<em>Coordinate Specification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_SPECIFICATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationArgsImpl <em>Coordinate Specification Args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationArgsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getCoordinateSpecificationArgs()
   * @generated
   */
  int COORDINATE_SPECIFICATION_ARGS = 73;

  /**
   * The number of structural features of the '<em>Coordinate Specification Args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ExtentImpl <em>Extent</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ExtentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExtent()
   * @generated
   */
  int EXTENT = 74;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__POINTS = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__STR = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__FILE_NAME = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__IMAGE_SOURCE = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__FILL_PATTERN = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>P1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__P1 = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>P2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT__P2 = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Extent</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENT_FEATURE_COUNT = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PreserveARImpl <em>Preserve AR</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PreserveARImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPreserveAR()
   * @generated
   */
  int PRESERVE_AR = 75;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRESERVE_AR__VALUE = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Preserve AR</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRESERVE_AR_FEATURE_COUNT = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.InitialScaleImpl <em>Initial Scale</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.InitialScaleImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getInitialScale()
   * @generated
   */
  int INITIAL_SCALE = 76;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_SCALE__VALUE = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Initial Scale</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_SCALE_FEATURE_COUNT = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.GridImpl <em>Grid</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.GridImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGrid()
   * @generated
   */
  int GRID = 77;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRID__VALUE = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Grid</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRID_FEATURE_COUNT = COORDINATE_SPECIFICATION_ARGS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PlacementImpl <em>Placement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PlacementImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPlacement()
   * @generated
   */
  int PLACEMENT = 78;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLACEMENT__NAME = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLACEMENT__ARGS = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Placement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLACEMENT_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PlacementArgImpl <em>Placement Arg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PlacementArgImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPlacementArg()
   * @generated
   */
  int PLACEMENT_ARG = 79;

  /**
   * The number of structural features of the '<em>Placement Arg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLACEMENT_ARG_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl <em>Visible</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.VisibleImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getVisible()
   * @generated
   */
  int VISIBLE = 80;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__POINTS = PLACEMENT_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__STR = PLACEMENT_ARG_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__FILE_NAME = PLACEMENT_ARG_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__IMAGE_SOURCE = PLACEMENT_ARG_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__FILL_PATTERN = PLACEMENT_ARG_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE__VALUE = PLACEMENT_ARG_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Visible</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VISIBLE_FEATURE_COUNT = PLACEMENT_ARG_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TransformationImpl <em>Transformation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TransformationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTransformation()
   * @generated
   */
  int TRANSFORMATION = 81;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION__NAME = PLACEMENT_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION__ARGS = PLACEMENT_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Transformation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION_FEATURE_COUNT = PLACEMENT_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TransformationArgImpl <em>Transformation Arg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TransformationArgImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTransformationArg()
   * @generated
   */
  int TRANSFORMATION_ARG = 82;

  /**
   * The number of structural features of the '<em>Transformation Arg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION_ARG_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.RotationImpl <em>Rotation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.RotationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRotation()
   * @generated
   */
  int ROTATION = 83;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATION__NAME = TRANSFORMATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATION__VALUE = TRANSFORMATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Rotation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATION_FEATURE_COUNT = TRANSFORMATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.OriginImpl <em>Origin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.OriginImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOrigin()
   * @generated
   */
  int ORIGIN = 84;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__POINTS = TRANSFORMATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__STR = TRANSFORMATION_ARG_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__FILE_NAME = TRANSFORMATION_ARG_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__IMAGE_SOURCE = TRANSFORMATION_ARG_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__FILL_PATTERN = TRANSFORMATION_ARG_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN__POINT = TRANSFORMATION_ARG_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Origin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORIGIN_FEATURE_COUNT = TRANSFORMATION_ARG_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PointImpl <em>Point</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PointImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPoint()
   * @generated
   */
  int POINT = 85;

  /**
   * The feature id for the '<em><b>X</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__X = 0;

  /**
   * The feature id for the '<em><b>Y</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__Y = 1;

  /**
   * The number of structural features of the '<em>Point</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveArgsImpl <em>Graphical Primitive Args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveArgsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphicalPrimitiveArgs()
   * @generated
   */
  int GRAPHICAL_PRIMITIVE_ARGS = 98;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS__POINTS = 0;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS__STR = 1;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME = 2;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE = 3;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN = 4;

  /**
   * The number of structural features of the '<em>Graphical Primitive Args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.RadiusImpl <em>Radius</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.RadiusImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRadius()
   * @generated
   */
  int RADIUS = 86;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS__POINTS = GRAPHICAL_PRIMITIVE_ARGS__POINTS;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS__STR = GRAPHICAL_PRIMITIVE_ARGS__STR;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS__FILE_NAME = GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS__IMAGE_SOURCE = GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS__FILL_PATTERN = GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN;

  /**
   * The number of structural features of the '<em>Radius</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RADIUS_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.SmoothImpl <em>Smooth</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.SmoothImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSmooth()
   * @generated
   */
  int SMOOTH = 87;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__POINTS = GRAPHICAL_PRIMITIVE_ARGS__POINTS;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__STR = GRAPHICAL_PRIMITIVE_ARGS__STR;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__FILE_NAME = GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__IMAGE_SOURCE = GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__FILL_PATTERN = GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH__VALUE = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Smooth</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SMOOTH_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ColorImpl <em>Color</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ColorImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getColor()
   * @generated
   */
  int COLOR = 88;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__POINTS = GRAPHICAL_PRIMITIVE_ARGS__POINTS;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__STR = GRAPHICAL_PRIMITIVE_ARGS__STR;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__FILE_NAME = GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__IMAGE_SOURCE = GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__FILL_PATTERN = GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN;

  /**
   * The feature id for the '<em><b>R</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__R = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>G</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__G = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__B = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Color</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ThicknessImpl <em>Thickness</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ThicknessImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getThickness()
   * @generated
   */
  int THICKNESS = 89;

  /**
   * The feature id for the '<em><b>Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__POINTS = GRAPHICAL_PRIMITIVE_ARGS__POINTS;

  /**
   * The feature id for the '<em><b>Str</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__STR = GRAPHICAL_PRIMITIVE_ARGS__STR;

  /**
   * The feature id for the '<em><b>File Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__FILE_NAME = GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME;

  /**
   * The feature id for the '<em><b>Image Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__IMAGE_SOURCE = GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE;

  /**
   * The feature id for the '<em><b>Fill Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__FILL_PATTERN = GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS__VALUE = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Thickness</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THICKNESS_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_ARGS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicsImpl <em>Graphics</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.GraphicsImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphics()
   * @generated
   */
  int GRAPHICS = 90;

  /**
   * The feature id for the '<em><b>Primitive</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICS__PRIMITIVE = 0;

  /**
   * The number of structural features of the '<em>Graphics</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveImpl <em>Graphical Primitive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphicalPrimitive()
   * @generated
   */
  int GRAPHICAL_PRIMITIVE = 91;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE__NAME = 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE__ARGS = 1;

  /**
   * The number of structural features of the '<em>Graphical Primitive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPHICAL_PRIMITIVE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LineImpl <em>Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LineImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLine()
   * @generated
   */
  int LINE = 92;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE__NAME = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE__ARGS = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PolygonImpl <em>Polygon</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PolygonImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPolygon()
   * @generated
   */
  int POLYGON = 93;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POLYGON__NAME = GRAPHICAL_PRIMITIVE__NAME;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POLYGON__ARGS = GRAPHICAL_PRIMITIVE__ARGS;

  /**
   * The number of structural features of the '<em>Polygon</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POLYGON_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.RectangleImpl <em>Rectangle</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.RectangleImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRectangle()
   * @generated
   */
  int RECTANGLE = 94;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECTANGLE__NAME = GRAPHICAL_PRIMITIVE__NAME;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECTANGLE__ARGS = GRAPHICAL_PRIMITIVE__ARGS;

  /**
   * The number of structural features of the '<em>Rectangle</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECTANGLE_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EllipseImpl <em>Ellipse</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EllipseImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEllipse()
   * @generated
   */
  int ELLIPSE = 95;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELLIPSE__NAME = GRAPHICAL_PRIMITIVE__NAME;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELLIPSE__ARGS = GRAPHICAL_PRIMITIVE__ARGS;

  /**
   * The number of structural features of the '<em>Ellipse</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELLIPSE_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TextImpl <em>Text</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TextImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getText()
   * @generated
   */
  int TEXT = 96;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEXT__NAME = GRAPHICAL_PRIMITIVE__NAME;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEXT__ARGS = GRAPHICAL_PRIMITIVE__ARGS;

  /**
   * The number of structural features of the '<em>Text</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEXT_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.BitmapImpl <em>Bitmap</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.BitmapImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBitmap()
   * @generated
   */
  int BITMAP = 97;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP__NAME = GRAPHICAL_PRIMITIVE__NAME;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP__ARGS = GRAPHICAL_PRIMITIVE__ARGS;

  /**
   * The number of structural features of the '<em>Bitmap</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FEATURE_COUNT = GRAPHICAL_PRIMITIVE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.DialogImpl <em>Dialog</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.DialogImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDialog()
   * @generated
   */
  int DIALOG = 99;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIALOG__NAME = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIALOG__ARGS = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Dialog</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIALOG_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.DialogArgImpl <em>Dialog Arg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.DialogArgImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDialogArg()
   * @generated
   */
  int DIALOG_ARG = 100;

  /**
   * The number of structural features of the '<em>Dialog Arg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIALOG_ARG_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.EnableImpl <em>Enable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.EnableImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnable()
   * @generated
   */
  int ENABLE = 101;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENABLE__VALUE = DIALOG_ARG_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Enable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENABLE_FEATURE_COUNT = DIALOG_ARG_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.GroupImpl <em>Group</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.GroupImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGroup()
   * @generated
   */
  int GROUP = 102;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP__VALUE = DIALOG_ARG_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Group</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_FEATURE_COUNT = DIALOG_ARG_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TabImpl <em>Tab</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TabImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTab()
   * @generated
   */
  int TAB = 103;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAB__VALUE = DIALOG_ARG_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tab</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAB_FEATURE_COUNT = DIALOG_ARG_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationDocumentationImpl <em>Annotation Documentation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationDocumentationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationDocumentation()
   * @generated
   */
  int ANNOTATION_DOCUMENTATION = 104;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_DOCUMENTATION__VALUE = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Rev</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_DOCUMENTATION__REV = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Annotation Documentation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_DOCUMENTATION_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationExperimentImpl <em>Annotation Experiment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.AnnotationExperimentImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationExperiment()
   * @generated
   */
  int ANNOTATION_EXPERIMENT = 105;

  /**
   * The feature id for the '<em><b>Options</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_EXPERIMENT__OPTIONS = ANNOTATION_ARG_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Annotation Experiment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANNOTATION_EXPERIMENT_FEATURE_COUNT = ANNOTATION_ARG_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl <em>Experiment Option</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExperimentOption()
   * @generated
   */
  int EXPERIMENT_OPTION = 106;

  /**
   * The feature id for the '<em><b>Start</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPERIMENT_OPTION__START = 0;

  /**
   * The feature id for the '<em><b>Stop</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPERIMENT_OPTION__STOP = 1;

  /**
   * The feature id for the '<em><b>Step</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPERIMENT_OPTION__STEP = 2;

  /**
   * The feature id for the '<em><b>Tol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPERIMENT_OPTION__TOL = 3;

  /**
   * The number of structural features of the '<em>Experiment Option</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPERIMENT_OPTION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LogicalExpressionImpl <em>Logical Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LogicalExpressionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLogicalExpression()
   * @generated
   */
  int LOGICAL_EXPRESSION = 107;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Logical Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.LogicalTermImpl <em>Logical Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.LogicalTermImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLogicalTerm()
   * @generated
   */
  int LOGICAL_TERM = 108;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Logical Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_TERM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.RelationImpl <em>Relation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.RelationImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRelation()
   * @generated
   */
  int RELATION = 109;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Relation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ArithmeticExpressionImpl <em>Arithmetic Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ArithmeticExpressionImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArithmeticExpression()
   * @generated
   */
  int ARITHMETIC_EXPRESSION = 110;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Arithmetic Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.ArithmeticExpression2Impl <em>Arithmetic Expression2</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.ArithmeticExpression2Impl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArithmeticExpression2()
   * @generated
   */
  int ARITHMETIC_EXPRESSION2 = 111;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Arithmetic Expression2</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION2_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.TermImpl <em>Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.TermImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTerm()
   * @generated
   */
  int TERM = 112;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.FactorImpl <em>Factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.FactorImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFactor()
   * @generated
   */
  int FACTOR = 113;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.PrimaryImpl <em>Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.PrimaryImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPrimary()
   * @generated
   */
  int PRIMARY = 114;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__CONNECTION = EXPRESSION__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__EQUATION = EXPRESSION__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__COMM = EXPRESSION__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__IF = EXPRESSION__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__THEN = EXPRESSION__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__ELSEIF = EXPRESSION__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__ELSEIFTHEN = EXPRESSION__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__ELSE = EXPRESSION__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__START = EXPRESSION__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__STEP = EXPRESSION__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__STOP = EXPRESSION__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__LIST = EXPRESSION__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__FA = EXPRESSION__FA;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Fca</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__FCA = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.impl.OutputExpresionListImpl <em>Output Expresion List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.impl.OutputExpresionListImpl
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOutputExpresionList()
   * @generated
   */
  int OUTPUT_EXPRESION_LIST = 115;

  /**
   * The feature id for the '<em><b>Connection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__CONNECTION = OUTPUT_EXPRESSION_LIST__CONNECTION;

  /**
   * The feature id for the '<em><b>Equation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__EQUATION = OUTPUT_EXPRESSION_LIST__EQUATION;

  /**
   * The feature id for the '<em><b>Comm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__COMM = OUTPUT_EXPRESSION_LIST__COMM;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__IF = OUTPUT_EXPRESSION_LIST__IF;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__THEN = OUTPUT_EXPRESSION_LIST__THEN;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__ELSEIF = OUTPUT_EXPRESSION_LIST__ELSEIF;

  /**
   * The feature id for the '<em><b>Elseifthen</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__ELSEIFTHEN = OUTPUT_EXPRESSION_LIST__ELSEIFTHEN;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__ELSE = OUTPUT_EXPRESSION_LIST__ELSE;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__START = OUTPUT_EXPRESSION_LIST__START;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__STEP = OUTPUT_EXPRESSION_LIST__STEP;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__STOP = OUTPUT_EXPRESSION_LIST__STOP;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__EXP = OUTPUT_EXPRESSION_LIST__EXP;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__LIST = OUTPUT_EXPRESSION_LIST__LIST;

  /**
   * The feature id for the '<em><b>Fa</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__FA = OUTPUT_EXPRESSION_LIST__FA;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST__EXPRESSIONS = OUTPUT_EXPRESSION_LIST_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Output Expresion List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_EXPRESION_LIST_FEATURE_COUNT = OUTPUT_EXPRESSION_LIST_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.AssertionLevel <em>Assertion Level</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.AssertionLevel
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAssertionLevel()
   * @generated
   */
  int ASSERTION_LEVEL = 116;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.LinePattern <em>Line Pattern</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.LinePattern
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLinePattern()
   * @generated
   */
  int LINE_PATTERN = 117;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.FillPattern <em>Fill Pattern</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.FillPattern
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFillPattern()
   * @generated
   */
  int FILL_PATTERN = 118;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.BorderPattern <em>Border Pattern</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.BorderPattern
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBorderPattern()
   * @generated
   */
  int BORDER_PATTERN = 119;

  /**
   * The meta object id for the '{@link sc.modelica.xtext.modelicaMo.SmoothEnum <em>Smooth Enum</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see sc.modelica.xtext.modelicaMo.SmoothEnum
   * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSmoothEnum()
   * @generated
   */
  int SMOOTH_ENUM = 120;


  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see sc.modelica.xtext.modelicaMo.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Program#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Program#getName()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Name();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Program#getClasses <em>Classes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Classes</em>'.
   * @see sc.modelica.xtext.modelicaMo.Program#getClasses()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Classes();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ClassDefinition <em>Class Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Definition</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassDefinition
   * @generated
   */
  EClass getClassDefinition();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassDefinition#isEncapsulated <em>Encapsulated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Encapsulated</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassDefinition#isEncapsulated()
   * @see #getClassDefinition()
   * @generated
   */
  EAttribute getClassDefinition_Encapsulated();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ClassDefinition#getClassPrefixes <em>Class Prefixes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Prefixes</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassDefinition#getClassPrefixes()
   * @see #getClassDefinition()
   * @generated
   */
  EReference getClassDefinition_ClassPrefixes();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ClassDefinition#getClassSpecifier <em>Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassDefinition#getClassSpecifier()
   * @see #getClassDefinition()
   * @generated
   */
  EReference getClassDefinition_ClassSpecifier();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes <em>Class Prefixes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Prefixes</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes
   * @generated
   */
  EClass getClassPrefixes();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isPartial <em>Partial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Partial</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isPartial()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Partial();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isClass <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Class</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isClass()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Class();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isModel <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Model</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isModel()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Model();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isOperator()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Operator();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isRecord <em>Record</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Record</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isRecord()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Record();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Block</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isBlock()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Block();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isExpandable <em>Expandable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Expandable</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isExpandable()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Expandable();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isConnector <em>Connector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Connector</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isConnector()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Connector();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isType()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Type();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isPackage <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Package</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isPackage()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Package();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isPure <em>Pure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pure</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isPure()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Pure();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ClassPrefixes#isFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassPrefixes#isFunction()
   * @see #getClassPrefixes()
   * @generated
   */
  EAttribute getClassPrefixes_Function();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ClassSpecifier <em>Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassSpecifier
   * @generated
   */
  EClass getClassSpecifier();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier <em>Long Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Long Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier
   * @generated
   */
  EClass getLongClassSpecifier();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getName()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EAttribute getLongClassSpecifier_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getSringComment <em>Sring Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sring Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getSringComment()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EReference getLongClassSpecifier_SringComment();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getComposition <em>Composition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Composition</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getComposition()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EReference getLongClassSpecifier_Composition();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getNameEnd <em>Name End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name End</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getNameEnd()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EAttribute getLongClassSpecifier_NameEnd();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getExtends <em>Extends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extends</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getExtends()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EReference getLongClassSpecifier_Extends();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LongClassSpecifier#getClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.LongClassSpecifier#getClassModification()
   * @see #getLongClassSpecifier()
   * @generated
   */
  EReference getLongClassSpecifier_ClassModification();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier <em>Short Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Short Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier
   * @generated
   */
  EClass getShortClassSpecifier();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getName()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EAttribute getShortClassSpecifier_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getBasePrefix <em>Base Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Base Prefix</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getBasePrefix()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_BasePrefix();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getInstanceName <em>Instance Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Instance Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getInstanceName()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_InstanceName();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getArraySubscripts <em>Array Subscripts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array Subscripts</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getArraySubscripts()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_ArraySubscripts();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getClassModification()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_ClassModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getComment()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_Comment();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getEnumList <em>Enum List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Enum List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassSpecifier#getEnumList()
   * @see #getShortClassSpecifier()
   * @generated
   */
  EReference getShortClassSpecifier_EnumList();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.DerClassSpecifier <em>Der Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Der Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.DerClassSpecifier
   * @generated
   */
  EClass getDerClassSpecifier();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.DerClassSpecifier#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.DerClassSpecifier#getId()
   * @see #getDerClassSpecifier()
   * @generated
   */
  EAttribute getDerClassSpecifier_Id();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.DerClassSpecifier#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.DerClassSpecifier#getName()
   * @see #getDerClassSpecifier()
   * @generated
   */
  EReference getDerClassSpecifier_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.DerClassSpecifier#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.DerClassSpecifier#getComment()
   * @see #getDerClassSpecifier()
   * @generated
   */
  EReference getDerClassSpecifier_Comment();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.BasePrefix <em>Base Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Base Prefix</em>'.
   * @see sc.modelica.xtext.modelicaMo.BasePrefix
   * @generated
   */
  EClass getBasePrefix();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EnumList <em>Enum List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enum List</em>'.
   * @see sc.modelica.xtext.modelicaMo.EnumList
   * @generated
   */
  EClass getEnumList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EnumList#getEnumerationLiteral <em>Enumeration Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Enumeration Literal</em>'.
   * @see sc.modelica.xtext.modelicaMo.EnumList#getEnumerationLiteral()
   * @see #getEnumList()
   * @generated
   */
  EReference getEnumList_EnumerationLiteral();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EnumerationLiteral <em>Enumeration Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enumeration Literal</em>'.
   * @see sc.modelica.xtext.modelicaMo.EnumerationLiteral
   * @generated
   */
  EClass getEnumerationLiteral();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EnumerationLiteral#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.EnumerationLiteral#getComment()
   * @see #getEnumerationLiteral()
   * @generated
   */
  EReference getEnumerationLiteral_Comment();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Composition <em>Composition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Composition</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition
   * @generated
   */
  EClass getComposition();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Composition#getElementList <em>Element List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element List</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getElementList()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_ElementList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Composition#getElementListPublic <em>Element List Public</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Element List Public</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getElementListPublic()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_ElementListPublic();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Composition#getElementListProtected <em>Element List Protected</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Element List Protected</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getElementListProtected()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_ElementListProtected();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Composition#getEquationSections <em>Equation Sections</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equation Sections</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getEquationSections()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_EquationSections();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Composition#getAlgorithmSections <em>Algorithm Sections</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Algorithm Sections</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getAlgorithmSections()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_AlgorithmSections();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Composition#getLanguageSpecification <em>Language Specification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Language Specification</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getLanguageSpecification()
   * @see #getComposition()
   * @generated
   */
  EAttribute getComposition_LanguageSpecification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Composition#getAnnotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Composition#getAnnotation()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_Annotation();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ElementList <em>Element List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementList
   * @generated
   */
  EClass getElementList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ElementList#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementList#getElements()
   * @see #getElementList()
   * @generated
   */
  EReference getElementList_Elements();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Element <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element
   * @generated
   */
  EClass getElement();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getImportClause <em>Import Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Import Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getImportClause()
   * @see #getElement()
   * @generated
   */
  EReference getElement_ImportClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getExtendClause <em>Extend Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extend Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getExtendClause()
   * @see #getElement()
   * @generated
   */
  EReference getElement_ExtendClause();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Element#isRedeclare <em>Redeclare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Redeclare</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#isRedeclare()
   * @see #getElement()
   * @generated
   */
  EAttribute getElement_Redeclare();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Element#isFinal <em>Final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Final</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#isFinal()
   * @see #getElement()
   * @generated
   */
  EAttribute getElement_Final();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Element#isInner <em>Inner</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inner</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#isInner()
   * @see #getElement()
   * @generated
   */
  EAttribute getElement_Inner();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Element#isOuter <em>Outer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Outer</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#isOuter()
   * @see #getElement()
   * @generated
   */
  EAttribute getElement_Outer();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getClass_ <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getClass_()
   * @see #getElement()
   * @generated
   */
  EReference getElement_Class();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getComp <em>Comp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comp</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getComp()
   * @see #getElement()
   * @generated
   */
  EReference getElement_Comp();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getCc <em>Cc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cc</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getCc()
   * @see #getElement()
   * @generated
   */
  EReference getElement_Cc();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Element#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.Element#getComment()
   * @see #getElement()
   * @generated
   */
  EReference getElement_Comment();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ImportClause <em>Import Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportClause
   * @generated
   */
  EClass getImportClause();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ImportClause#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportClause#getId()
   * @see #getImportClause()
   * @generated
   */
  EAttribute getImportClause_Id();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ImportClause#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportClause#getName()
   * @see #getImportClause()
   * @generated
   */
  EReference getImportClause_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ImportClause#getImportList <em>Import List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Import List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportClause#getImportList()
   * @see #getImportClause()
   * @generated
   */
  EReference getImportClause_ImportList();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ImportClause#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportClause#getComment()
   * @see #getImportClause()
   * @generated
   */
  EReference getImportClause_Comment();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ImportList <em>Import List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportList
   * @generated
   */
  EClass getImportList();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.ImportList#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.ImportList#getId()
   * @see #getImportList()
   * @generated
   */
  EAttribute getImportList_Id();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ExtendClause <em>Extend Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extend Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExtendClause
   * @generated
   */
  EClass getExtendClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ExtendClause#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExtendClause#getName()
   * @see #getExtendClause()
   * @generated
   */
  EReference getExtendClause_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ExtendClause#getClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExtendClause#getClassModification()
   * @see #getExtendClause()
   * @generated
   */
  EReference getExtendClause_ClassModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ExtendClause#getAnnotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExtendClause#getAnnotation()
   * @see #getExtendClause()
   * @generated
   */
  EReference getExtendClause_Annotation();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ConstrainingClause <em>Constraining Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraining Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConstrainingClause
   * @generated
   */
  EClass getConstrainingClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConstrainingClause#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConstrainingClause#getName()
   * @see #getConstrainingClause()
   * @generated
   */
  EReference getConstrainingClause_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConstrainingClause#getClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConstrainingClause#getClassModification()
   * @see #getConstrainingClause()
   * @generated
   */
  EReference getConstrainingClause_ClassModification();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Modification <em>Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.Modification
   * @generated
   */
  EClass getModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Modification#getClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.Modification#getClassModification()
   * @see #getModification()
   * @generated
   */
  EReference getModification_ClassModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Modification#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.Modification#getExpression()
   * @see #getModification()
   * @generated
   */
  EReference getModification_Expression();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ClassModification <em>Class Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassModification
   * @generated
   */
  EClass getClassModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ClassModification#getArgumentList <em>Argument List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Argument List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ClassModification#getArgumentList()
   * @see #getClassModification()
   * @generated
   */
  EReference getClassModification_ArgumentList();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ArgumentList <em>Argument List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Argument List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArgumentList
   * @generated
   */
  EClass getArgumentList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ArgumentList#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArgumentList#getArguments()
   * @see #getArgumentList()
   * @generated
   */
  EReference getArgumentList_Arguments();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Argument <em>Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.Argument
   * @generated
   */
  EClass getArgument();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Argument#isEach <em>Each</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Each</em>'.
   * @see sc.modelica.xtext.modelicaMo.Argument#isEach()
   * @see #getArgument()
   * @generated
   */
  EAttribute getArgument_Each();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Argument#isFinal <em>Final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Final</em>'.
   * @see sc.modelica.xtext.modelicaMo.Argument#isFinal()
   * @see #getArgument()
   * @generated
   */
  EAttribute getArgument_Final();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ElementModificationOrReplaceable <em>Element Modification Or Replaceable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element Modification Or Replaceable</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModificationOrReplaceable
   * @generated
   */
  EClass getElementModificationOrReplaceable();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementModificationOrReplaceable#getElementModOrRep <em>Element Mod Or Rep</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element Mod Or Rep</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModificationOrReplaceable#getElementModOrRep()
   * @see #getElementModificationOrReplaceable()
   * @generated
   */
  EReference getElementModificationOrReplaceable_ElementModOrRep();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ElementModification <em>Element Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModification
   * @generated
   */
  EClass getElementModification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementModification#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModification#getName()
   * @see #getElementModification()
   * @generated
   */
  EReference getElementModification_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementModification#getModification <em>Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModification#getModification()
   * @see #getElementModification()
   * @generated
   */
  EReference getElementModification_Modification();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementModification#getStringComment <em>String Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>String Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementModification#getStringComment()
   * @see #getElementModification()
   * @generated
   */
  EReference getElementModification_StringComment();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ElementRedeclaration <em>Element Redeclaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element Redeclaration</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementRedeclaration
   * @generated
   */
  EClass getElementRedeclaration();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ElementRedeclaration#isRedeclare <em>Redeclare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Redeclare</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementRedeclaration#isRedeclare()
   * @see #getElementRedeclaration()
   * @generated
   */
  EAttribute getElementRedeclaration_Redeclare();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementRedeclaration#getClassDefinition <em>Class Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Definition</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementRedeclaration#getClassDefinition()
   * @see #getElementRedeclaration()
   * @generated
   */
  EReference getElementRedeclaration_ClassDefinition();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementRedeclaration#getComponentClause <em>Component Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Component Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementRedeclaration#getComponentClause()
   * @see #getElementRedeclaration()
   * @generated
   */
  EReference getElementRedeclaration_ComponentClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementRedeclaration#getElement <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementRedeclaration#getElement()
   * @see #getElementRedeclaration()
   * @generated
   */
  EReference getElementRedeclaration_Element();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ElementReplaceable <em>Element Replaceable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element Replaceable</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementReplaceable
   * @generated
   */
  EClass getElementReplaceable();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ElementReplaceable#isReplaceable <em>Replaceable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Replaceable</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementReplaceable#isReplaceable()
   * @see #getElementReplaceable()
   * @generated
   */
  EAttribute getElementReplaceable_Replaceable();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementReplaceable#getElement <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementReplaceable#getElement()
   * @see #getElementReplaceable()
   * @generated
   */
  EReference getElementReplaceable_Element();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ElementReplaceable#getConstraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraint</em>'.
   * @see sc.modelica.xtext.modelicaMo.ElementReplaceable#getConstraint()
   * @see #getElementReplaceable()
   * @generated
   */
  EReference getElementReplaceable_Constraint();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentClause1 <em>Component Clause1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Clause1</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause1
   * @generated
   */
  EClass getComponentClause1();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause1#getTypePrefix <em>Type Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Prefix</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause1#getTypePrefix()
   * @see #getComponentClause1()
   * @generated
   */
  EReference getComponentClause1_TypePrefix();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause1#getTypeSpecifier <em>Type Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause1#getTypeSpecifier()
   * @see #getComponentClause1()
   * @generated
   */
  EReference getComponentClause1_TypeSpecifier();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause1#getComponentDeclaration <em>Component Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Component Declaration</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause1#getComponentDeclaration()
   * @see #getComponentClause1()
   * @generated
   */
  EReference getComponentClause1_ComponentDeclaration();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration1 <em>Component Declaration1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Declaration1</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration1
   * @generated
   */
  EClass getComponentDeclaration1();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ShortClassDefinition <em>Short Class Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Short Class Definition</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassDefinition
   * @generated
   */
  EClass getShortClassDefinition();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassDefinition#getClassPrefixes <em>Class Prefixes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Prefixes</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassDefinition#getClassPrefixes()
   * @see #getShortClassDefinition()
   * @generated
   */
  EReference getShortClassDefinition_ClassPrefixes();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ShortClassDefinition#getClassSpecifier <em>Class Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Class Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.ShortClassDefinition#getClassSpecifier()
   * @see #getShortClassDefinition()
   * @generated
   */
  EReference getShortClassDefinition_ClassSpecifier();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentClause <em>Component Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause
   * @generated
   */
  EClass getComponentClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause#getTypePrefix <em>Type Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Prefix</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause#getTypePrefix()
   * @see #getComponentClause()
   * @generated
   */
  EReference getComponentClause_TypePrefix();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause#getTypeSpec <em>Type Spec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Spec</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause#getTypeSpec()
   * @see #getComponentClause()
   * @generated
   */
  EReference getComponentClause_TypeSpec();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause#getArraySubscripts <em>Array Subscripts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array Subscripts</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause#getArraySubscripts()
   * @see #getComponentClause()
   * @generated
   */
  EReference getComponentClause_ArraySubscripts();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentClause#getComponentList <em>Component List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Component List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentClause#getComponentList()
   * @see #getComponentClause()
   * @generated
   */
  EReference getComponentClause_ComponentList();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.TypePrefix <em>Type Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Prefix</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix
   * @generated
   */
  EClass getTypePrefix();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isFlow <em>Flow</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Flow</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isFlow()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Flow();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isStream <em>Stream</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stream</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isStream()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Stream();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Constant</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isConstant()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Constant();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Parameter</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isParameter()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Parameter();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isDiscrete <em>Discrete</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Discrete</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isDiscrete()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Discrete();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isInput <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Input</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isInput()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Input();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isOutput <em>Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Output</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypePrefix#isOutput()
   * @see #getTypePrefix()
   * @generated
   */
  EAttribute getTypePrefix_Output();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.TypeSpecifier <em>Type Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Specifier</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypeSpecifier
   * @generated
   */
  EClass getTypeSpecifier();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.TypeSpecifier#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.TypeSpecifier#getName()
   * @see #getTypeSpecifier()
   * @generated
   */
  EReference getTypeSpecifier_Name();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentList <em>Component List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentList
   * @generated
   */
  EClass getComponentList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ComponentList#getComponents <em>Components</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Components</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentList#getComponents()
   * @see #getComponentList()
   * @generated
   */
  EReference getComponentList_Components();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration <em>Component Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Declaration</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration
   * @generated
   */
  EClass getComponentDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration#getDeclaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declaration</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration#getDeclaration()
   * @see #getComponentDeclaration()
   * @generated
   */
  EReference getComponentDeclaration_Declaration();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration#getConditionAttribute <em>Condition Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition Attribute</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration#getConditionAttribute()
   * @see #getComponentDeclaration()
   * @generated
   */
  EReference getComponentDeclaration_ConditionAttribute();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration#getComment()
   * @see #getComponentDeclaration()
   * @generated
   */
  EReference getComponentDeclaration_Comment();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ComponentDeclaration#getAnnotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentDeclaration#getAnnotation()
   * @see #getComponentDeclaration()
   * @generated
   */
  EReference getComponentDeclaration_Annotation();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ConditionAttribute <em>Condition Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition Attribute</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConditionAttribute
   * @generated
   */
  EClass getConditionAttribute();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConditionAttribute#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConditionAttribute#getCondition()
   * @see #getConditionAttribute()
   * @generated
   */
  EReference getConditionAttribute_Condition();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declaration</em>'.
   * @see sc.modelica.xtext.modelicaMo.Declaration
   * @generated
   */
  EClass getDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Declaration#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.Declaration#getComment()
   * @see #getDeclaration()
   * @generated
   */
  EReference getDeclaration_Comment();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Declaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Declaration#getName()
   * @see #getDeclaration()
   * @generated
   */
  EAttribute getDeclaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Declaration#getArraySubscripts <em>Array Subscripts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array Subscripts</em>'.
   * @see sc.modelica.xtext.modelicaMo.Declaration#getArraySubscripts()
   * @see #getDeclaration()
   * @generated
   */
  EReference getDeclaration_ArraySubscripts();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Declaration#getModification <em>Modification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Modification</em>'.
   * @see sc.modelica.xtext.modelicaMo.Declaration#getModification()
   * @see #getDeclaration()
   * @generated
   */
  EReference getDeclaration_Modification();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EquationSection <em>Equation Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation Section</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationSection
   * @generated
   */
  EClass getEquationSection();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.EquationSection#isInitial <em>Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Initial</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationSection#isInitial()
   * @see #getEquationSection()
   * @generated
   */
  EAttribute getEquationSection_Initial();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.EquationSection#getEquation <em>Equation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Equation</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationSection#getEquation()
   * @see #getEquationSection()
   * @generated
   */
  EAttribute getEquationSection_Equation();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationSection#getEquations <em>Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equations</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationSection#getEquations()
   * @see #getEquationSection()
   * @generated
   */
  EReference getEquationSection_Equations();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AlgorithmSection <em>Algorithm Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Algorithm Section</em>'.
   * @see sc.modelica.xtext.modelicaMo.AlgorithmSection
   * @generated
   */
  EClass getAlgorithmSection();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AlgorithmSection#isInitial <em>Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Initial</em>'.
   * @see sc.modelica.xtext.modelicaMo.AlgorithmSection#isInitial()
   * @see #getAlgorithmSection()
   * @generated
   */
  EAttribute getAlgorithmSection_Initial();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AlgorithmSection#getAlgorithm <em>Algorithm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Algorithm</em>'.
   * @see sc.modelica.xtext.modelicaMo.AlgorithmSection#getAlgorithm()
   * @see #getAlgorithmSection()
   * @generated
   */
  EAttribute getAlgorithmSection_Algorithm();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.AlgorithmSection#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see sc.modelica.xtext.modelicaMo.AlgorithmSection#getStatements()
   * @see #getAlgorithmSection()
   * @generated
   */
  EReference getAlgorithmSection_Statements();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Equation <em>Equation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Equation
   * @generated
   */
  EClass getEquation();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Equation#getConnection <em>Connection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Connection</em>'.
   * @see sc.modelica.xtext.modelicaMo.Equation#getConnection()
   * @see #getEquation()
   * @generated
   */
  EReference getEquation_Connection();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see sc.modelica.xtext.modelicaMo.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Statement#getComponent <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Component</em>'.
   * @see sc.modelica.xtext.modelicaMo.Statement#getComponent()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Component();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.Statement#getExpression()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Expression();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Statement#getFca <em>Fca</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fca</em>'.
   * @see sc.modelica.xtext.modelicaMo.Statement#getFca()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Fca();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Statement#getComm <em>Comm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comm</em>'.
   * @see sc.modelica.xtext.modelicaMo.Statement#getComm()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Comm();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EquationIf <em>Equation If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation If</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf
   * @generated
   */
  EClass getEquationIf();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationIf#getComm <em>Comm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comm</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getComm()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_Comm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationIf#getIfExp <em>If Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getIfExp()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_IfExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationIf#getIfEqs <em>If Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>If Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getIfEqs()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_IfEqs();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationIf#getElseifExp <em>Elseif Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elseif Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getElseifExp()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_ElseifExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationIf#getElseIfEqs <em>Else If Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else If Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getElseIfEqs()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_ElseIfEqs();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationIf#getElseEqs <em>Else Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationIf#getElseEqs()
   * @see #getEquationIf()
   * @generated
   */
  EReference getEquationIf_ElseEqs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.StatementIf <em>Statement If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement If</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf
   * @generated
   */
  EClass getStatementIf();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.StatementIf#getIfExp <em>If Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf#getIfExp()
   * @see #getStatementIf()
   * @generated
   */
  EReference getStatementIf_IfExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementIf#getIfEqs <em>If Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>If Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf#getIfEqs()
   * @see #getStatementIf()
   * @generated
   */
  EReference getStatementIf_IfEqs();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementIf#getElseifExp <em>Elseif Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elseif Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf#getElseifExp()
   * @see #getStatementIf()
   * @generated
   */
  EReference getStatementIf_ElseifExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementIf#getElseIfEqs <em>Else If Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else If Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf#getElseIfEqs()
   * @see #getStatementIf()
   * @generated
   */
  EReference getStatementIf_ElseIfEqs();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementIf#getElseEqs <em>Else Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementIf#getElseEqs()
   * @see #getStatementIf()
   * @generated
   */
  EReference getStatementIf_ElseEqs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EquationFor <em>Equation For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation For</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationFor
   * @generated
   */
  EClass getEquationFor();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationFor#getComm <em>Comm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comm</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationFor#getComm()
   * @see #getEquationFor()
   * @generated
   */
  EReference getEquationFor_Comm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationFor#getIterators <em>Iterators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Iterators</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationFor#getIterators()
   * @see #getEquationFor()
   * @generated
   */
  EReference getEquationFor_Iterators();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationFor#getForEqs <em>For Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>For Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationFor#getForEqs()
   * @see #getEquationFor()
   * @generated
   */
  EReference getEquationFor_ForEqs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.StatementFor <em>Statement For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement For</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementFor
   * @generated
   */
  EClass getStatementFor();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.StatementFor#getIterators <em>Iterators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Iterators</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementFor#getIterators()
   * @see #getStatementFor()
   * @generated
   */
  EReference getStatementFor_Iterators();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementFor#getForEqs <em>For Eqs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>For Eqs</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementFor#getForEqs()
   * @see #getStatementFor()
   * @generated
   */
  EReference getStatementFor_ForEqs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ForIndices <em>For Indices</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Indices</em>'.
   * @see sc.modelica.xtext.modelicaMo.ForIndices
   * @generated
   */
  EClass getForIndices();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ForIndices#getForIndex <em>For Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>For Index</em>'.
   * @see sc.modelica.xtext.modelicaMo.ForIndices#getForIndex()
   * @see #getForIndices()
   * @generated
   */
  EReference getForIndices_ForIndex();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ForIndex <em>For Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Index</em>'.
   * @see sc.modelica.xtext.modelicaMo.ForIndex
   * @generated
   */
  EClass getForIndex();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ForIndex#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.ForIndex#getId()
   * @see #getForIndex()
   * @generated
   */
  EAttribute getForIndex_Id();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ForIndex#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.ForIndex#getExpression()
   * @see #getForIndex()
   * @generated
   */
  EReference getForIndex_Expression();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.StatementWhile <em>Statement While</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement While</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhile
   * @generated
   */
  EClass getStatementWhile();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.StatementWhile#getBoolExpr <em>Bool Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bool Expr</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhile#getBoolExpr()
   * @see #getStatementWhile()
   * @generated
   */
  EReference getStatementWhile_BoolExpr();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementWhile#getStat <em>Stat</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stat</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhile#getStat()
   * @see #getStatementWhile()
   * @generated
   */
  EReference getStatementWhile_Stat();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.EquationWhen <em>Equation When</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation When</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen
   * @generated
   */
  EClass getEquationWhen();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationWhen#getComm <em>Comm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comm</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen#getComm()
   * @see #getEquationWhen()
   * @generated
   */
  EReference getEquationWhen_Comm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.EquationWhen#getWhenExp <em>When Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>When Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen#getWhenExp()
   * @see #getEquationWhen()
   * @generated
   */
  EReference getEquationWhen_WhenExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationWhen#getWhenEquations <em>When Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>When Equations</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen#getWhenEquations()
   * @see #getEquationWhen()
   * @generated
   */
  EReference getEquationWhen_WhenEquations();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationWhen#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen#getExp()
   * @see #getEquationWhen()
   * @generated
   */
  EReference getEquationWhen_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.EquationWhen#getEquationItem <em>Equation Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equation Item</em>'.
   * @see sc.modelica.xtext.modelicaMo.EquationWhen#getEquationItem()
   * @see #getEquationWhen()
   * @generated
   */
  EReference getEquationWhen_EquationItem();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.StatementWhen <em>Statement When</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement When</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhen
   * @generated
   */
  EClass getStatementWhen();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.StatementWhen#getWhenExp <em>When Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>When Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhen#getWhenExp()
   * @see #getStatementWhen()
   * @generated
   */
  EReference getStatementWhen_WhenExp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementWhen#getWhenEquations <em>When Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>When Equations</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhen#getWhenEquations()
   * @see #getStatementWhen()
   * @generated
   */
  EReference getStatementWhen_WhenEquations();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementWhen#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhen#getExp()
   * @see #getStatementWhen()
   * @generated
   */
  EReference getStatementWhen_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.StatementWhen#getEquationItem <em>Equation Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equation Item</em>'.
   * @see sc.modelica.xtext.modelicaMo.StatementWhen#getEquationItem()
   * @see #getStatementWhen()
   * @generated
   */
  EReference getStatementWhen_EquationItem();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ConnectClause <em>Connect Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Connect Clause</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConnectClause
   * @generated
   */
  EClass getConnectClause();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConnectClause#getNode1 <em>Node1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node1</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConnectClause#getNode1()
   * @see #getConnectClause()
   * @generated
   */
  EReference getConnectClause_Node1();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConnectClause#getNode2 <em>Node2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node2</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConnectClause#getNode2()
   * @see #getConnectClause()
   * @generated
   */
  EReference getConnectClause_Node2();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ConnectClause#getAnnotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.ConnectClause#getAnnotation()
   * @see #getConnectClause()
   * @generated
   */
  EReference getConnectClause_Annotation();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getEquation <em>Equation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Equation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getEquation()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Equation();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getComm <em>Comm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comm</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getComm()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Comm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getIf <em>If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getIf()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_If();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getThen()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Then();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Expression#getElseif <em>Elseif</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elseif</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getElseif()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Elseif();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Expression#getElseifthen <em>Elseifthen</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elseifthen</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getElseifthen()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Elseifthen();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getElse()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Else();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getStart()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Start();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getStep <em>Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Step</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getStep()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Step();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getStop <em>Stop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Stop</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getStop()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Stop();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getExp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Expression#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>List</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getList()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_List();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Expression#getFa <em>Fa</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fa</em>'.
   * @see sc.modelica.xtext.modelicaMo.Expression#getFa()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Fa();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Name <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Name
   * @generated
   */
  EClass getName_();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.Name#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.Name#getId()
   * @see #getName_()
   * @generated
   */
  EAttribute getName_Id();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ComponentReference <em>Component Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Reference</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentReference
   * @generated
   */
  EClass getComponentReference();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ComponentReference#getSubs <em>Subs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Subs</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentReference#getSubs()
   * @see #getComponentReference()
   * @generated
   */
  EReference getComponentReference_Subs();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.ComponentReference#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Id</em>'.
   * @see sc.modelica.xtext.modelicaMo.ComponentReference#getId()
   * @see #getComponentReference()
   * @generated
   */
  EAttribute getComponentReference_Id();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.FunctionCallArgs <em>Function Call Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Call Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionCallArgs
   * @generated
   */
  EClass getFunctionCallArgs();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionCallArgs#getFunctionArgs <em>Function Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionCallArgs#getFunctionArgs()
   * @see #getFunctionCallArgs()
   * @generated
   */
  EReference getFunctionCallArgs_FunctionArgs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.FunctionArguments <em>Function Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArguments
   * @generated
   */
  EClass getFunctionArguments();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionArguments#getFunctionArgument <em>Function Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArguments#getFunctionArgument()
   * @see #getFunctionArguments()
   * @generated
   */
  EReference getFunctionArguments_FunctionArgument();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.FunctionArguments#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArguments#getArgs()
   * @see #getFunctionArguments()
   * @generated
   */
  EReference getFunctionArguments_Args();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.FunctionArguments#getForIndices <em>For Indices</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>For Indices</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArguments#getForIndices()
   * @see #getFunctionArguments()
   * @generated
   */
  EReference getFunctionArguments_ForIndices();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionArguments#getNamedArguments <em>Named Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Named Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArguments#getNamedArguments()
   * @see #getFunctionArguments()
   * @generated
   */
  EReference getFunctionArguments_NamedArguments();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.NamedArguments <em>Named Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Named Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArguments
   * @generated
   */
  EClass getNamedArguments();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.NamedArguments#getNamedArgument <em>Named Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Named Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArguments#getNamedArgument()
   * @see #getNamedArguments()
   * @generated
   */
  EReference getNamedArguments_NamedArgument();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.NamedArguments#getNamedArguments <em>Named Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Named Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArguments#getNamedArguments()
   * @see #getNamedArguments()
   * @generated
   */
  EReference getNamedArguments_NamedArguments();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.NamedArgument <em>Named Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Named Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArgument
   * @generated
   */
  EClass getNamedArgument();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.NamedArgument#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArgument#getName()
   * @see #getNamedArgument()
   * @generated
   */
  EAttribute getNamedArgument_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.NamedArgument#getFunctionArgument <em>Function Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.NamedArgument#getFunctionArgument()
   * @see #getNamedArgument()
   * @generated
   */
  EReference getNamedArgument_FunctionArgument();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.FunctionArgument <em>Function Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Argument</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArgument
   * @generated
   */
  EClass getFunctionArgument();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionArgument#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArgument#getName()
   * @see #getFunctionArgument()
   * @generated
   */
  EReference getFunctionArgument_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionArgument#getNamedArguments <em>Named Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Named Arguments</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArgument#getNamedArguments()
   * @see #getFunctionArgument()
   * @generated
   */
  EReference getFunctionArgument_NamedArguments();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.FunctionArgument#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.FunctionArgument#getExpression()
   * @see #getFunctionArgument()
   * @generated
   */
  EReference getFunctionArgument_Expression();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.OutputExpressionList <em>Output Expression List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Output Expression List</em>'.
   * @see sc.modelica.xtext.modelicaMo.OutputExpressionList
   * @generated
   */
  EClass getOutputExpressionList();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ExprExpressionList <em>Expr Expression List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Expression List</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExprExpressionList
   * @generated
   */
  EClass getExprExpressionList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ExprExpressionList#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExprExpressionList#getExp()
   * @see #getExprExpressionList()
   * @generated
   */
  EReference getExprExpressionList_Exp();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ArraySubscripts <em>Array Subscripts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Subscripts</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArraySubscripts
   * @generated
   */
  EClass getArraySubscripts();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.ArraySubscripts#getSubscripts <em>Subscripts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Subscripts</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArraySubscripts#getSubscripts()
   * @see #getArraySubscripts()
   * @generated
   */
  EReference getArraySubscripts_Subscripts();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Subscript <em>Subscript</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subscript</em>'.
   * @see sc.modelica.xtext.modelicaMo.Subscript
   * @generated
   */
  EClass getSubscript();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Comment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.Comment
   * @generated
   */
  EClass getComment();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Comment#getStringComment <em>String Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>String Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.Comment#getStringComment()
   * @see #getComment()
   * @generated
   */
  EReference getComment_StringComment();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Comment#getAnnotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Comment#getAnnotation()
   * @see #getComment()
   * @generated
   */
  EReference getComment_Annotation();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.StringComment <em>String Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Comment</em>'.
   * @see sc.modelica.xtext.modelicaMo.StringComment
   * @generated
   */
  EClass getStringComment();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.StringComment#getStr <em>Str</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Str</em>'.
   * @see sc.modelica.xtext.modelicaMo.StringComment#getStr()
   * @see #getStringComment()
   * @generated
   */
  EAttribute getStringComment_Str();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Assert <em>Assert</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assert</em>'.
   * @see sc.modelica.xtext.modelicaMo.Assert
   * @generated
   */
  EClass getAssert();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Assert#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see sc.modelica.xtext.modelicaMo.Assert#getCondition()
   * @see #getAssert()
   * @generated
   */
  EReference getAssert_Condition();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Assert#getMessage <em>Message</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Message</em>'.
   * @see sc.modelica.xtext.modelicaMo.Assert#getMessage()
   * @see #getAssert()
   * @generated
   */
  EReference getAssert_Message();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Assert#getLevel <em>Level</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Level</em>'.
   * @see sc.modelica.xtext.modelicaMo.Assert#getLevel()
   * @see #getAssert()
   * @generated
   */
  EAttribute getAssert_Level();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Annotation <em>Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Annotation
   * @generated
   */
  EClass getAnnotation();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Annotation#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.Annotation#getArgs()
   * @see #getAnnotation()
   * @generated
   */
  EReference getAnnotation_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AnnotationArg <em>Annotation Arg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation Arg</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationArg
   * @generated
   */
  EClass getAnnotationArg();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.DefComponentName <em>Def Component Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Def Component Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.DefComponentName
   * @generated
   */
  EClass getDefComponentName();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.DefComponentName#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.DefComponentName#getValue()
   * @see #getDefComponentName()
   * @generated
   */
  EAttribute getDefComponentName_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Choices <em>Choices</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Choices</em>'.
   * @see sc.modelica.xtext.modelicaMo.Choices
   * @generated
   */
  EClass getChoices();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.Choices#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Types</em>'.
   * @see sc.modelica.xtext.modelicaMo.Choices#getTypes()
   * @see #getChoices()
   * @generated
   */
  EAttribute getChoices_Types();

  /**
   * Returns the meta object for the attribute list '{@link sc.modelica.xtext.modelicaMo.Choices#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Values</em>'.
   * @see sc.modelica.xtext.modelicaMo.Choices#getValues()
   * @see #getChoices()
   * @generated
   */
  EAttribute getChoices_Values();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AnnotationCode <em>Annotation Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation Code</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationCode
   * @generated
   */
  EClass getAnnotationCode();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AnnotationCode#getFlag <em>Flag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Flag</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationCode#getFlag()
   * @see #getAnnotationCode()
   * @generated
   */
  EAttribute getAnnotationCode_Flag();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AnnotationCode#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationCode#getValue()
   * @see #getAnnotationCode()
   * @generated
   */
  EAttribute getAnnotationCode_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AnnotationLayer <em>Annotation Layer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation Layer</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationLayer
   * @generated
   */
  EClass getAnnotationLayer();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.AnnotationLayer#getCoordinateSystem <em>Coordinate System</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Coordinate System</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationLayer#getCoordinateSystem()
   * @see #getAnnotationLayer()
   * @generated
   */
  EReference getAnnotationLayer_CoordinateSystem();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.AnnotationLayer#getGraphics <em>Graphics</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Graphics</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationLayer#getGraphics()
   * @see #getAnnotationLayer()
   * @generated
   */
  EReference getAnnotationLayer_Graphics();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.LayerIcon <em>Layer Icon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Layer Icon</em>'.
   * @see sc.modelica.xtext.modelicaMo.LayerIcon
   * @generated
   */
  EClass getLayerIcon();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.LayerDiagram <em>Layer Diagram</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Layer Diagram</em>'.
   * @see sc.modelica.xtext.modelicaMo.LayerDiagram
   * @generated
   */
  EClass getLayerDiagram();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.CoordinateSpecification <em>Coordinate Specification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coordinate Specification</em>'.
   * @see sc.modelica.xtext.modelicaMo.CoordinateSpecification
   * @generated
   */
  EClass getCoordinateSpecification();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.CoordinateSpecification#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.CoordinateSpecification#getArgs()
   * @see #getCoordinateSpecification()
   * @generated
   */
  EReference getCoordinateSpecification_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.CoordinateSpecificationArgs <em>Coordinate Specification Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coordinate Specification Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.CoordinateSpecificationArgs
   * @generated
   */
  EClass getCoordinateSpecificationArgs();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Extent <em>Extent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extent</em>'.
   * @see sc.modelica.xtext.modelicaMo.Extent
   * @generated
   */
  EClass getExtent();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Extent#getP1 <em>P1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>P1</em>'.
   * @see sc.modelica.xtext.modelicaMo.Extent#getP1()
   * @see #getExtent()
   * @generated
   */
  EReference getExtent_P1();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Extent#getP2 <em>P2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>P2</em>'.
   * @see sc.modelica.xtext.modelicaMo.Extent#getP2()
   * @see #getExtent()
   * @generated
   */
  EReference getExtent_P2();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.PreserveAR <em>Preserve AR</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Preserve AR</em>'.
   * @see sc.modelica.xtext.modelicaMo.PreserveAR
   * @generated
   */
  EClass getPreserveAR();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.PreserveAR#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.PreserveAR#getValue()
   * @see #getPreserveAR()
   * @generated
   */
  EAttribute getPreserveAR_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.InitialScale <em>Initial Scale</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Initial Scale</em>'.
   * @see sc.modelica.xtext.modelicaMo.InitialScale
   * @generated
   */
  EClass getInitialScale();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.InitialScale#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.InitialScale#getValue()
   * @see #getInitialScale()
   * @generated
   */
  EAttribute getInitialScale_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Grid <em>Grid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grid</em>'.
   * @see sc.modelica.xtext.modelicaMo.Grid
   * @generated
   */
  EClass getGrid();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Grid#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Grid#getValue()
   * @see #getGrid()
   * @generated
   */
  EReference getGrid_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Placement <em>Placement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Placement</em>'.
   * @see sc.modelica.xtext.modelicaMo.Placement
   * @generated
   */
  EClass getPlacement();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Placement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Placement#getName()
   * @see #getPlacement()
   * @generated
   */
  EAttribute getPlacement_Name();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Placement#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.Placement#getArgs()
   * @see #getPlacement()
   * @generated
   */
  EReference getPlacement_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.PlacementArg <em>Placement Arg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Placement Arg</em>'.
   * @see sc.modelica.xtext.modelicaMo.PlacementArg
   * @generated
   */
  EClass getPlacementArg();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Visible <em>Visible</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Visible</em>'.
   * @see sc.modelica.xtext.modelicaMo.Visible
   * @generated
   */
  EClass getVisible();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Visible#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Visible#getValue()
   * @see #getVisible()
   * @generated
   */
  EAttribute getVisible_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Transformation <em>Transformation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transformation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Transformation
   * @generated
   */
  EClass getTransformation();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Transformation#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Transformation#getName()
   * @see #getTransformation()
   * @generated
   */
  EAttribute getTransformation_Name();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Transformation#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.Transformation#getArgs()
   * @see #getTransformation()
   * @generated
   */
  EReference getTransformation_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.TransformationArg <em>Transformation Arg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transformation Arg</em>'.
   * @see sc.modelica.xtext.modelicaMo.TransformationArg
   * @generated
   */
  EClass getTransformationArg();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Rotation <em>Rotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rotation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Rotation
   * @generated
   */
  EClass getRotation();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Rotation#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Rotation#getName()
   * @see #getRotation()
   * @generated
   */
  EAttribute getRotation_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Rotation#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Rotation#getValue()
   * @see #getRotation()
   * @generated
   */
  EReference getRotation_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Origin <em>Origin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Origin</em>'.
   * @see sc.modelica.xtext.modelicaMo.Origin
   * @generated
   */
  EClass getOrigin();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Origin#getPoint <em>Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Point</em>'.
   * @see sc.modelica.xtext.modelicaMo.Origin#getPoint()
   * @see #getOrigin()
   * @generated
   */
  EReference getOrigin_Point();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Point <em>Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Point</em>'.
   * @see sc.modelica.xtext.modelicaMo.Point
   * @generated
   */
  EClass getPoint();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Point#getX <em>X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>X</em>'.
   * @see sc.modelica.xtext.modelicaMo.Point#getX()
   * @see #getPoint()
   * @generated
   */
  EAttribute getPoint_X();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Point#getY <em>Y</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Y</em>'.
   * @see sc.modelica.xtext.modelicaMo.Point#getY()
   * @see #getPoint()
   * @generated
   */
  EAttribute getPoint_Y();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Radius <em>Radius</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Radius</em>'.
   * @see sc.modelica.xtext.modelicaMo.Radius
   * @generated
   */
  EClass getRadius();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Smooth <em>Smooth</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Smooth</em>'.
   * @see sc.modelica.xtext.modelicaMo.Smooth
   * @generated
   */
  EClass getSmooth();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Smooth#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Smooth#getValue()
   * @see #getSmooth()
   * @generated
   */
  EAttribute getSmooth_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Color <em>Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Color</em>'.
   * @see sc.modelica.xtext.modelicaMo.Color
   * @generated
   */
  EClass getColor();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Color#getR <em>R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>R</em>'.
   * @see sc.modelica.xtext.modelicaMo.Color#getR()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_R();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Color#getG <em>G</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>G</em>'.
   * @see sc.modelica.xtext.modelicaMo.Color#getG()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_G();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Color#getB <em>B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>B</em>'.
   * @see sc.modelica.xtext.modelicaMo.Color#getB()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_B();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Thickness <em>Thickness</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thickness</em>'.
   * @see sc.modelica.xtext.modelicaMo.Thickness
   * @generated
   */
  EClass getThickness();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Thickness#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Thickness#getValue()
   * @see #getThickness()
   * @generated
   */
  EAttribute getThickness_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Graphics <em>Graphics</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Graphics</em>'.
   * @see sc.modelica.xtext.modelicaMo.Graphics
   * @generated
   */
  EClass getGraphics();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Graphics#getPrimitive <em>Primitive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Primitive</em>'.
   * @see sc.modelica.xtext.modelicaMo.Graphics#getPrimitive()
   * @see #getGraphics()
   * @generated
   */
  EReference getGraphics_Primitive();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitive <em>Graphical Primitive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Graphical Primitive</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitive
   * @generated
   */
  EClass getGraphicalPrimitive();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitive#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitive#getName()
   * @see #getGraphicalPrimitive()
   * @generated
   */
  EAttribute getGraphicalPrimitive_Name();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitive#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitive#getArgs()
   * @see #getGraphicalPrimitive()
   * @generated
   */
  EReference getGraphicalPrimitive_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Line <em>Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line</em>'.
   * @see sc.modelica.xtext.modelicaMo.Line
   * @generated
   */
  EClass getLine();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Polygon <em>Polygon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Polygon</em>'.
   * @see sc.modelica.xtext.modelicaMo.Polygon
   * @generated
   */
  EClass getPolygon();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Rectangle <em>Rectangle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rectangle</em>'.
   * @see sc.modelica.xtext.modelicaMo.Rectangle
   * @generated
   */
  EClass getRectangle();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Ellipse <em>Ellipse</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ellipse</em>'.
   * @see sc.modelica.xtext.modelicaMo.Ellipse
   * @generated
   */
  EClass getEllipse();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Text <em>Text</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Text</em>'.
   * @see sc.modelica.xtext.modelicaMo.Text
   * @generated
   */
  EClass getText();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Bitmap <em>Bitmap</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bitmap</em>'.
   * @see sc.modelica.xtext.modelicaMo.Bitmap
   * @generated
   */
  EClass getBitmap();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs <em>Graphical Primitive Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Graphical Primitive Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs
   * @generated
   */
  EClass getGraphicalPrimitiveArgs();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getPoints <em>Points</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Points</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getPoints()
   * @see #getGraphicalPrimitiveArgs()
   * @generated
   */
  EReference getGraphicalPrimitiveArgs_Points();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getStr <em>Str</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Str</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getStr()
   * @see #getGraphicalPrimitiveArgs()
   * @generated
   */
  EAttribute getGraphicalPrimitiveArgs_Str();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getFileName <em>File Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>File Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getFileName()
   * @see #getGraphicalPrimitiveArgs()
   * @generated
   */
  EAttribute getGraphicalPrimitiveArgs_FileName();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getImageSource <em>Image Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Image Source</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getImageSource()
   * @see #getGraphicalPrimitiveArgs()
   * @generated
   */
  EAttribute getGraphicalPrimitiveArgs_ImageSource();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getFillPattern <em>Fill Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fill Pattern</em>'.
   * @see sc.modelica.xtext.modelicaMo.GraphicalPrimitiveArgs#getFillPattern()
   * @see #getGraphicalPrimitiveArgs()
   * @generated
   */
  EAttribute getGraphicalPrimitiveArgs_FillPattern();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Dialog <em>Dialog</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dialog</em>'.
   * @see sc.modelica.xtext.modelicaMo.Dialog
   * @generated
   */
  EClass getDialog();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Dialog#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Dialog#getName()
   * @see #getDialog()
   * @generated
   */
  EAttribute getDialog_Name();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Dialog#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see sc.modelica.xtext.modelicaMo.Dialog#getArgs()
   * @see #getDialog()
   * @generated
   */
  EReference getDialog_Args();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.DialogArg <em>Dialog Arg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dialog Arg</em>'.
   * @see sc.modelica.xtext.modelicaMo.DialogArg
   * @generated
   */
  EClass getDialogArg();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Enable <em>Enable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enable</em>'.
   * @see sc.modelica.xtext.modelicaMo.Enable
   * @generated
   */
  EClass getEnable();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.Enable#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Enable#getValue()
   * @see #getEnable()
   * @generated
   */
  EReference getEnable_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Group <em>Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Group</em>'.
   * @see sc.modelica.xtext.modelicaMo.Group
   * @generated
   */
  EClass getGroup();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Group#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Group#getValue()
   * @see #getGroup()
   * @generated
   */
  EAttribute getGroup_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Tab <em>Tab</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tab</em>'.
   * @see sc.modelica.xtext.modelicaMo.Tab
   * @generated
   */
  EClass getTab();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.Tab#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.Tab#getValue()
   * @see #getTab()
   * @generated
   */
  EAttribute getTab_Value();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AnnotationDocumentation <em>Annotation Documentation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation Documentation</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationDocumentation
   * @generated
   */
  EClass getAnnotationDocumentation();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AnnotationDocumentation#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationDocumentation#getValue()
   * @see #getAnnotationDocumentation()
   * @generated
   */
  EAttribute getAnnotationDocumentation_Value();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.AnnotationDocumentation#getRev <em>Rev</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rev</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationDocumentation#getRev()
   * @see #getAnnotationDocumentation()
   * @generated
   */
  EAttribute getAnnotationDocumentation_Rev();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.AnnotationExperiment <em>Annotation Experiment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Annotation Experiment</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationExperiment
   * @generated
   */
  EClass getAnnotationExperiment();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.AnnotationExperiment#getOptions <em>Options</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Options</em>'.
   * @see sc.modelica.xtext.modelicaMo.AnnotationExperiment#getOptions()
   * @see #getAnnotationExperiment()
   * @generated
   */
  EReference getAnnotationExperiment_Options();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ExperimentOption <em>Experiment Option</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Experiment Option</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExperimentOption
   * @generated
   */
  EClass getExperimentOption();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ExperimentOption#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Start</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExperimentOption#getStart()
   * @see #getExperimentOption()
   * @generated
   */
  EAttribute getExperimentOption_Start();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ExperimentOption#getStop <em>Stop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stop</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExperimentOption#getStop()
   * @see #getExperimentOption()
   * @generated
   */
  EAttribute getExperimentOption_Stop();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ExperimentOption#getStep <em>Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Step</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExperimentOption#getStep()
   * @see #getExperimentOption()
   * @generated
   */
  EAttribute getExperimentOption_Step();

  /**
   * Returns the meta object for the attribute '{@link sc.modelica.xtext.modelicaMo.ExperimentOption#getTol <em>Tol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tol</em>'.
   * @see sc.modelica.xtext.modelicaMo.ExperimentOption#getTol()
   * @see #getExperimentOption()
   * @generated
   */
  EAttribute getExperimentOption_Tol();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.LogicalExpression <em>Logical Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalExpression
   * @generated
   */
  EClass getLogicalExpression();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LogicalExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalExpression#getLeft()
   * @see #getLogicalExpression()
   * @generated
   */
  EReference getLogicalExpression_Left();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.LogicalExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalExpression#getRight()
   * @see #getLogicalExpression()
   * @generated
   */
  EReference getLogicalExpression_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.LogicalTerm <em>Logical Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Term</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalTerm
   * @generated
   */
  EClass getLogicalTerm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LogicalTerm#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalTerm#getLeft()
   * @see #getLogicalTerm()
   * @generated
   */
  EReference getLogicalTerm_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.LogicalTerm#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.LogicalTerm#getRight()
   * @see #getLogicalTerm()
   * @generated
   */
  EReference getLogicalTerm_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Relation <em>Relation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relation</em>'.
   * @see sc.modelica.xtext.modelicaMo.Relation
   * @generated
   */
  EClass getRelation();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Relation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.Relation#getLeft()
   * @see #getRelation()
   * @generated
   */
  EReference getRelation_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Relation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.Relation#getRight()
   * @see #getRelation()
   * @generated
   */
  EReference getRelation_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression <em>Arithmetic Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Expression</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression
   * @generated
   */
  EClass getArithmeticExpression();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression#getLeft()
   * @see #getArithmeticExpression()
   * @generated
   */
  EReference getArithmeticExpression_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression#getRight()
   * @see #getArithmeticExpression()
   * @generated
   */
  EReference getArithmeticExpression_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression2 <em>Arithmetic Expression2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Expression2</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression2
   * @generated
   */
  EClass getArithmeticExpression2();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression2#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression2#getLeft()
   * @see #getArithmeticExpression2()
   * @generated
   */
  EReference getArithmeticExpression2_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.ArithmeticExpression2#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.ArithmeticExpression2#getRight()
   * @see #getArithmeticExpression2()
   * @generated
   */
  EReference getArithmeticExpression2_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Term <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Term</em>'.
   * @see sc.modelica.xtext.modelicaMo.Term
   * @generated
   */
  EClass getTerm();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Term#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.Term#getLeft()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Term#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.Term#getRight()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Factor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Factor</em>'.
   * @see sc.modelica.xtext.modelicaMo.Factor
   * @generated
   */
  EClass getFactor();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Factor#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see sc.modelica.xtext.modelicaMo.Factor#getLeft()
   * @see #getFactor()
   * @generated
   */
  EReference getFactor_Left();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Factor#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see sc.modelica.xtext.modelicaMo.Factor#getRight()
   * @see #getFactor()
   * @generated
   */
  EReference getFactor_Right();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.Primary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary</em>'.
   * @see sc.modelica.xtext.modelicaMo.Primary
   * @generated
   */
  EClass getPrimary();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Primary#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see sc.modelica.xtext.modelicaMo.Primary#getName()
   * @see #getPrimary()
   * @generated
   */
  EReference getPrimary_Name();

  /**
   * Returns the meta object for the containment reference '{@link sc.modelica.xtext.modelicaMo.Primary#getFca <em>Fca</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fca</em>'.
   * @see sc.modelica.xtext.modelicaMo.Primary#getFca()
   * @see #getPrimary()
   * @generated
   */
  EReference getPrimary_Fca();

  /**
   * Returns the meta object for class '{@link sc.modelica.xtext.modelicaMo.OutputExpresionList <em>Output Expresion List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Output Expresion List</em>'.
   * @see sc.modelica.xtext.modelicaMo.OutputExpresionList
   * @generated
   */
  EClass getOutputExpresionList();

  /**
   * Returns the meta object for the containment reference list '{@link sc.modelica.xtext.modelicaMo.OutputExpresionList#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see sc.modelica.xtext.modelicaMo.OutputExpresionList#getExpressions()
   * @see #getOutputExpresionList()
   * @generated
   */
  EReference getOutputExpresionList_Expressions();

  /**
   * Returns the meta object for enum '{@link sc.modelica.xtext.modelicaMo.AssertionLevel <em>Assertion Level</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Assertion Level</em>'.
   * @see sc.modelica.xtext.modelicaMo.AssertionLevel
   * @generated
   */
  EEnum getAssertionLevel();

  /**
   * Returns the meta object for enum '{@link sc.modelica.xtext.modelicaMo.LinePattern <em>Line Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Line Pattern</em>'.
   * @see sc.modelica.xtext.modelicaMo.LinePattern
   * @generated
   */
  EEnum getLinePattern();

  /**
   * Returns the meta object for enum '{@link sc.modelica.xtext.modelicaMo.FillPattern <em>Fill Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Fill Pattern</em>'.
   * @see sc.modelica.xtext.modelicaMo.FillPattern
   * @generated
   */
  EEnum getFillPattern();

  /**
   * Returns the meta object for enum '{@link sc.modelica.xtext.modelicaMo.BorderPattern <em>Border Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Border Pattern</em>'.
   * @see sc.modelica.xtext.modelicaMo.BorderPattern
   * @generated
   */
  EEnum getBorderPattern();

  /**
   * Returns the meta object for enum '{@link sc.modelica.xtext.modelicaMo.SmoothEnum <em>Smooth Enum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Smooth Enum</em>'.
   * @see sc.modelica.xtext.modelicaMo.SmoothEnum
   * @generated
   */
  EEnum getSmoothEnum();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ModelicaMoFactory getModelicaMoFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ProgramImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__NAME = eINSTANCE.getProgram_Name();

    /**
     * The meta object literal for the '<em><b>Classes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__CLASSES = eINSTANCE.getProgram_Classes();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassDefinitionImpl <em>Class Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ClassDefinitionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassDefinition()
     * @generated
     */
    EClass CLASS_DEFINITION = eINSTANCE.getClassDefinition();

    /**
     * The meta object literal for the '<em><b>Encapsulated</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_DEFINITION__ENCAPSULATED = eINSTANCE.getClassDefinition_Encapsulated();

    /**
     * The meta object literal for the '<em><b>Class Prefixes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DEFINITION__CLASS_PREFIXES = eINSTANCE.getClassDefinition_ClassPrefixes();

    /**
     * The meta object literal for the '<em><b>Class Specifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DEFINITION__CLASS_SPECIFIER = eINSTANCE.getClassDefinition_ClassSpecifier();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl <em>Class Prefixes</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ClassPrefixesImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassPrefixes()
     * @generated
     */
    EClass CLASS_PREFIXES = eINSTANCE.getClassPrefixes();

    /**
     * The meta object literal for the '<em><b>Partial</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__PARTIAL = eINSTANCE.getClassPrefixes_Partial();

    /**
     * The meta object literal for the '<em><b>Class</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__CLASS = eINSTANCE.getClassPrefixes_Class();

    /**
     * The meta object literal for the '<em><b>Model</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__MODEL = eINSTANCE.getClassPrefixes_Model();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__OPERATOR = eINSTANCE.getClassPrefixes_Operator();

    /**
     * The meta object literal for the '<em><b>Record</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__RECORD = eINSTANCE.getClassPrefixes_Record();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__BLOCK = eINSTANCE.getClassPrefixes_Block();

    /**
     * The meta object literal for the '<em><b>Expandable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__EXPANDABLE = eINSTANCE.getClassPrefixes_Expandable();

    /**
     * The meta object literal for the '<em><b>Connector</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__CONNECTOR = eINSTANCE.getClassPrefixes_Connector();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__TYPE = eINSTANCE.getClassPrefixes_Type();

    /**
     * The meta object literal for the '<em><b>Package</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__PACKAGE = eINSTANCE.getClassPrefixes_Package();

    /**
     * The meta object literal for the '<em><b>Pure</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__PURE = eINSTANCE.getClassPrefixes_Pure();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_PREFIXES__FUNCTION = eINSTANCE.getClassPrefixes_Function();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassSpecifierImpl <em>Class Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ClassSpecifierImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassSpecifier()
     * @generated
     */
    EClass CLASS_SPECIFIER = eINSTANCE.getClassSpecifier();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LongClassSpecifierImpl <em>Long Class Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LongClassSpecifierImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLongClassSpecifier()
     * @generated
     */
    EClass LONG_CLASS_SPECIFIER = eINSTANCE.getLongClassSpecifier();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LONG_CLASS_SPECIFIER__NAME = eINSTANCE.getLongClassSpecifier_Name();

    /**
     * The meta object literal for the '<em><b>Sring Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LONG_CLASS_SPECIFIER__SRING_COMMENT = eINSTANCE.getLongClassSpecifier_SringComment();

    /**
     * The meta object literal for the '<em><b>Composition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LONG_CLASS_SPECIFIER__COMPOSITION = eINSTANCE.getLongClassSpecifier_Composition();

    /**
     * The meta object literal for the '<em><b>Name End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LONG_CLASS_SPECIFIER__NAME_END = eINSTANCE.getLongClassSpecifier_NameEnd();

    /**
     * The meta object literal for the '<em><b>Extends</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LONG_CLASS_SPECIFIER__EXTENDS = eINSTANCE.getLongClassSpecifier_Extends();

    /**
     * The meta object literal for the '<em><b>Class Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LONG_CLASS_SPECIFIER__CLASS_MODIFICATION = eINSTANCE.getLongClassSpecifier_ClassModification();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ShortClassSpecifierImpl <em>Short Class Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ShortClassSpecifierImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getShortClassSpecifier()
     * @generated
     */
    EClass SHORT_CLASS_SPECIFIER = eINSTANCE.getShortClassSpecifier();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SHORT_CLASS_SPECIFIER__NAME = eINSTANCE.getShortClassSpecifier_Name();

    /**
     * The meta object literal for the '<em><b>Base Prefix</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__BASE_PREFIX = eINSTANCE.getShortClassSpecifier_BasePrefix();

    /**
     * The meta object literal for the '<em><b>Instance Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__INSTANCE_NAME = eINSTANCE.getShortClassSpecifier_InstanceName();

    /**
     * The meta object literal for the '<em><b>Array Subscripts</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__ARRAY_SUBSCRIPTS = eINSTANCE.getShortClassSpecifier_ArraySubscripts();

    /**
     * The meta object literal for the '<em><b>Class Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__CLASS_MODIFICATION = eINSTANCE.getShortClassSpecifier_ClassModification();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__COMMENT = eINSTANCE.getShortClassSpecifier_Comment();

    /**
     * The meta object literal for the '<em><b>Enum List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_SPECIFIER__ENUM_LIST = eINSTANCE.getShortClassSpecifier_EnumList();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.DerClassSpecifierImpl <em>Der Class Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.DerClassSpecifierImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDerClassSpecifier()
     * @generated
     */
    EClass DER_CLASS_SPECIFIER = eINSTANCE.getDerClassSpecifier();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DER_CLASS_SPECIFIER__ID = eINSTANCE.getDerClassSpecifier_Id();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DER_CLASS_SPECIFIER__NAME = eINSTANCE.getDerClassSpecifier_Name();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DER_CLASS_SPECIFIER__COMMENT = eINSTANCE.getDerClassSpecifier_Comment();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.BasePrefixImpl <em>Base Prefix</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.BasePrefixImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBasePrefix()
     * @generated
     */
    EClass BASE_PREFIX = eINSTANCE.getBasePrefix();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EnumListImpl <em>Enum List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EnumListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnumList()
     * @generated
     */
    EClass ENUM_LIST = eINSTANCE.getEnumList();

    /**
     * The meta object literal for the '<em><b>Enumeration Literal</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUM_LIST__ENUMERATION_LITERAL = eINSTANCE.getEnumList_EnumerationLiteral();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EnumerationLiteralImpl <em>Enumeration Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EnumerationLiteralImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnumerationLiteral()
     * @generated
     */
    EClass ENUMERATION_LITERAL = eINSTANCE.getEnumerationLiteral();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATION_LITERAL__COMMENT = eINSTANCE.getEnumerationLiteral_Comment();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.CompositionImpl <em>Composition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.CompositionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComposition()
     * @generated
     */
    EClass COMPOSITION = eINSTANCE.getComposition();

    /**
     * The meta object literal for the '<em><b>Element List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__ELEMENT_LIST = eINSTANCE.getComposition_ElementList();

    /**
     * The meta object literal for the '<em><b>Element List Public</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__ELEMENT_LIST_PUBLIC = eINSTANCE.getComposition_ElementListPublic();

    /**
     * The meta object literal for the '<em><b>Element List Protected</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__ELEMENT_LIST_PROTECTED = eINSTANCE.getComposition_ElementListProtected();

    /**
     * The meta object literal for the '<em><b>Equation Sections</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__EQUATION_SECTIONS = eINSTANCE.getComposition_EquationSections();

    /**
     * The meta object literal for the '<em><b>Algorithm Sections</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__ALGORITHM_SECTIONS = eINSTANCE.getComposition_AlgorithmSections();

    /**
     * The meta object literal for the '<em><b>Language Specification</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPOSITION__LANGUAGE_SPECIFICATION = eINSTANCE.getComposition_LanguageSpecification();

    /**
     * The meta object literal for the '<em><b>Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__ANNOTATION = eINSTANCE.getComposition_Annotation();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementListImpl <em>Element List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementList()
     * @generated
     */
    EClass ELEMENT_LIST = eINSTANCE.getElementList();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_LIST__ELEMENTS = eINSTANCE.getElementList_Elements();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementImpl <em>Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElement()
     * @generated
     */
    EClass ELEMENT = eINSTANCE.getElement();

    /**
     * The meta object literal for the '<em><b>Import Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__IMPORT_CLAUSE = eINSTANCE.getElement_ImportClause();

    /**
     * The meta object literal for the '<em><b>Extend Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__EXTEND_CLAUSE = eINSTANCE.getElement_ExtendClause();

    /**
     * The meta object literal for the '<em><b>Redeclare</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT__REDECLARE = eINSTANCE.getElement_Redeclare();

    /**
     * The meta object literal for the '<em><b>Final</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT__FINAL = eINSTANCE.getElement_Final();

    /**
     * The meta object literal for the '<em><b>Inner</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT__INNER = eINSTANCE.getElement_Inner();

    /**
     * The meta object literal for the '<em><b>Outer</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT__OUTER = eINSTANCE.getElement_Outer();

    /**
     * The meta object literal for the '<em><b>Class</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__CLASS = eINSTANCE.getElement_Class();

    /**
     * The meta object literal for the '<em><b>Comp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__COMP = eINSTANCE.getElement_Comp();

    /**
     * The meta object literal for the '<em><b>Cc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__CC = eINSTANCE.getElement_Cc();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT__COMMENT = eINSTANCE.getElement_Comment();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ImportClauseImpl <em>Import Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ImportClauseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getImportClause()
     * @generated
     */
    EClass IMPORT_CLAUSE = eINSTANCE.getImportClause();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT_CLAUSE__ID = eINSTANCE.getImportClause_Id();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT_CLAUSE__NAME = eINSTANCE.getImportClause_Name();

    /**
     * The meta object literal for the '<em><b>Import List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT_CLAUSE__IMPORT_LIST = eINSTANCE.getImportClause_ImportList();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT_CLAUSE__COMMENT = eINSTANCE.getImportClause_Comment();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ImportListImpl <em>Import List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ImportListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getImportList()
     * @generated
     */
    EClass IMPORT_LIST = eINSTANCE.getImportList();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT_LIST__ID = eINSTANCE.getImportList_Id();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ExtendClauseImpl <em>Extend Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ExtendClauseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExtendClause()
     * @generated
     */
    EClass EXTEND_CLAUSE = eINSTANCE.getExtendClause();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTEND_CLAUSE__NAME = eINSTANCE.getExtendClause_Name();

    /**
     * The meta object literal for the '<em><b>Class Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTEND_CLAUSE__CLASS_MODIFICATION = eINSTANCE.getExtendClause_ClassModification();

    /**
     * The meta object literal for the '<em><b>Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTEND_CLAUSE__ANNOTATION = eINSTANCE.getExtendClause_Annotation();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ConstrainingClauseImpl <em>Constraining Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ConstrainingClauseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConstrainingClause()
     * @generated
     */
    EClass CONSTRAINING_CLAUSE = eINSTANCE.getConstrainingClause();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINING_CLAUSE__NAME = eINSTANCE.getConstrainingClause_Name();

    /**
     * The meta object literal for the '<em><b>Class Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINING_CLAUSE__CLASS_MODIFICATION = eINSTANCE.getConstrainingClause_ClassModification();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ModificationImpl <em>Modification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ModificationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getModification()
     * @generated
     */
    EClass MODIFICATION = eINSTANCE.getModification();

    /**
     * The meta object literal for the '<em><b>Class Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFICATION__CLASS_MODIFICATION = eINSTANCE.getModification_ClassModification();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFICATION__EXPRESSION = eINSTANCE.getModification_Expression();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ClassModificationImpl <em>Class Modification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ClassModificationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getClassModification()
     * @generated
     */
    EClass CLASS_MODIFICATION = eINSTANCE.getClassModification();

    /**
     * The meta object literal for the '<em><b>Argument List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_MODIFICATION__ARGUMENT_LIST = eINSTANCE.getClassModification_ArgumentList();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ArgumentListImpl <em>Argument List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ArgumentListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArgumentList()
     * @generated
     */
    EClass ARGUMENT_LIST = eINSTANCE.getArgumentList();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARGUMENT_LIST__ARGUMENTS = eINSTANCE.getArgumentList_Arguments();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ArgumentImpl <em>Argument</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ArgumentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArgument()
     * @generated
     */
    EClass ARGUMENT = eINSTANCE.getArgument();

    /**
     * The meta object literal for the '<em><b>Each</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARGUMENT__EACH = eINSTANCE.getArgument_Each();

    /**
     * The meta object literal for the '<em><b>Final</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARGUMENT__FINAL = eINSTANCE.getArgument_Final();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementModificationOrReplaceableImpl <em>Element Modification Or Replaceable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementModificationOrReplaceableImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementModificationOrReplaceable()
     * @generated
     */
    EClass ELEMENT_MODIFICATION_OR_REPLACEABLE = eINSTANCE.getElementModificationOrReplaceable();

    /**
     * The meta object literal for the '<em><b>Element Mod Or Rep</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_MODIFICATION_OR_REPLACEABLE__ELEMENT_MOD_OR_REP = eINSTANCE.getElementModificationOrReplaceable_ElementModOrRep();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementModificationImpl <em>Element Modification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementModificationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementModification()
     * @generated
     */
    EClass ELEMENT_MODIFICATION = eINSTANCE.getElementModification();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_MODIFICATION__NAME = eINSTANCE.getElementModification_Name();

    /**
     * The meta object literal for the '<em><b>Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_MODIFICATION__MODIFICATION = eINSTANCE.getElementModification_Modification();

    /**
     * The meta object literal for the '<em><b>String Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_MODIFICATION__STRING_COMMENT = eINSTANCE.getElementModification_StringComment();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementRedeclarationImpl <em>Element Redeclaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementRedeclarationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementRedeclaration()
     * @generated
     */
    EClass ELEMENT_REDECLARATION = eINSTANCE.getElementRedeclaration();

    /**
     * The meta object literal for the '<em><b>Redeclare</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT_REDECLARATION__REDECLARE = eINSTANCE.getElementRedeclaration_Redeclare();

    /**
     * The meta object literal for the '<em><b>Class Definition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_REDECLARATION__CLASS_DEFINITION = eINSTANCE.getElementRedeclaration_ClassDefinition();

    /**
     * The meta object literal for the '<em><b>Component Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_REDECLARATION__COMPONENT_CLAUSE = eINSTANCE.getElementRedeclaration_ComponentClause();

    /**
     * The meta object literal for the '<em><b>Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_REDECLARATION__ELEMENT = eINSTANCE.getElementRedeclaration_Element();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ElementReplaceableImpl <em>Element Replaceable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ElementReplaceableImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getElementReplaceable()
     * @generated
     */
    EClass ELEMENT_REPLACEABLE = eINSTANCE.getElementReplaceable();

    /**
     * The meta object literal for the '<em><b>Replaceable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ELEMENT_REPLACEABLE__REPLACEABLE = eINSTANCE.getElementReplaceable_Replaceable();

    /**
     * The meta object literal for the '<em><b>Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_REPLACEABLE__ELEMENT = eINSTANCE.getElementReplaceable_Element();

    /**
     * The meta object literal for the '<em><b>Constraint</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_REPLACEABLE__CONSTRAINT = eINSTANCE.getElementReplaceable_Constraint();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentClause1Impl <em>Component Clause1</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentClause1Impl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentClause1()
     * @generated
     */
    EClass COMPONENT_CLAUSE1 = eINSTANCE.getComponentClause1();

    /**
     * The meta object literal for the '<em><b>Type Prefix</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE1__TYPE_PREFIX = eINSTANCE.getComponentClause1_TypePrefix();

    /**
     * The meta object literal for the '<em><b>Type Specifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE1__TYPE_SPECIFIER = eINSTANCE.getComponentClause1_TypeSpecifier();

    /**
     * The meta object literal for the '<em><b>Component Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE1__COMPONENT_DECLARATION = eINSTANCE.getComponentClause1_ComponentDeclaration();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentDeclaration1Impl <em>Component Declaration1</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentDeclaration1Impl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentDeclaration1()
     * @generated
     */
    EClass COMPONENT_DECLARATION1 = eINSTANCE.getComponentDeclaration1();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ShortClassDefinitionImpl <em>Short Class Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ShortClassDefinitionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getShortClassDefinition()
     * @generated
     */
    EClass SHORT_CLASS_DEFINITION = eINSTANCE.getShortClassDefinition();

    /**
     * The meta object literal for the '<em><b>Class Prefixes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_DEFINITION__CLASS_PREFIXES = eINSTANCE.getShortClassDefinition_ClassPrefixes();

    /**
     * The meta object literal for the '<em><b>Class Specifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORT_CLASS_DEFINITION__CLASS_SPECIFIER = eINSTANCE.getShortClassDefinition_ClassSpecifier();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentClauseImpl <em>Component Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentClauseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentClause()
     * @generated
     */
    EClass COMPONENT_CLAUSE = eINSTANCE.getComponentClause();

    /**
     * The meta object literal for the '<em><b>Type Prefix</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE__TYPE_PREFIX = eINSTANCE.getComponentClause_TypePrefix();

    /**
     * The meta object literal for the '<em><b>Type Spec</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE__TYPE_SPEC = eINSTANCE.getComponentClause_TypeSpec();

    /**
     * The meta object literal for the '<em><b>Array Subscripts</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE__ARRAY_SUBSCRIPTS = eINSTANCE.getComponentClause_ArraySubscripts();

    /**
     * The meta object literal for the '<em><b>Component List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_CLAUSE__COMPONENT_LIST = eINSTANCE.getComponentClause_ComponentList();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl <em>Type Prefix</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TypePrefixImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTypePrefix()
     * @generated
     */
    EClass TYPE_PREFIX = eINSTANCE.getTypePrefix();

    /**
     * The meta object literal for the '<em><b>Flow</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__FLOW = eINSTANCE.getTypePrefix_Flow();

    /**
     * The meta object literal for the '<em><b>Stream</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__STREAM = eINSTANCE.getTypePrefix_Stream();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__CONSTANT = eINSTANCE.getTypePrefix_Constant();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__PARAMETER = eINSTANCE.getTypePrefix_Parameter();

    /**
     * The meta object literal for the '<em><b>Discrete</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__DISCRETE = eINSTANCE.getTypePrefix_Discrete();

    /**
     * The meta object literal for the '<em><b>Input</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__INPUT = eINSTANCE.getTypePrefix_Input();

    /**
     * The meta object literal for the '<em><b>Output</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_PREFIX__OUTPUT = eINSTANCE.getTypePrefix_Output();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TypeSpecifierImpl <em>Type Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TypeSpecifierImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTypeSpecifier()
     * @generated
     */
    EClass TYPE_SPECIFIER = eINSTANCE.getTypeSpecifier();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_SPECIFIER__NAME = eINSTANCE.getTypeSpecifier_Name();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentListImpl <em>Component List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentList()
     * @generated
     */
    EClass COMPONENT_LIST = eINSTANCE.getComponentList();

    /**
     * The meta object literal for the '<em><b>Components</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_LIST__COMPONENTS = eINSTANCE.getComponentList_Components();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentDeclarationImpl <em>Component Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentDeclarationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentDeclaration()
     * @generated
     */
    EClass COMPONENT_DECLARATION = eINSTANCE.getComponentDeclaration();

    /**
     * The meta object literal for the '<em><b>Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_DECLARATION__DECLARATION = eINSTANCE.getComponentDeclaration_Declaration();

    /**
     * The meta object literal for the '<em><b>Condition Attribute</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_DECLARATION__CONDITION_ATTRIBUTE = eINSTANCE.getComponentDeclaration_ConditionAttribute();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_DECLARATION__COMMENT = eINSTANCE.getComponentDeclaration_Comment();

    /**
     * The meta object literal for the '<em><b>Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_DECLARATION__ANNOTATION = eINSTANCE.getComponentDeclaration_Annotation();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ConditionAttributeImpl <em>Condition Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ConditionAttributeImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConditionAttribute()
     * @generated
     */
    EClass CONDITION_ATTRIBUTE = eINSTANCE.getConditionAttribute();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION_ATTRIBUTE__CONDITION = eINSTANCE.getConditionAttribute_Condition();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.DeclarationImpl <em>Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.DeclarationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDeclaration()
     * @generated
     */
    EClass DECLARATION = eINSTANCE.getDeclaration();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION__COMMENT = eINSTANCE.getDeclaration_Comment();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION__NAME = eINSTANCE.getDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Array Subscripts</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION__ARRAY_SUBSCRIPTS = eINSTANCE.getDeclaration_ArraySubscripts();

    /**
     * The meta object literal for the '<em><b>Modification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION__MODIFICATION = eINSTANCE.getDeclaration_Modification();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationSectionImpl <em>Equation Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EquationSectionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationSection()
     * @generated
     */
    EClass EQUATION_SECTION = eINSTANCE.getEquationSection();

    /**
     * The meta object literal for the '<em><b>Initial</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUATION_SECTION__INITIAL = eINSTANCE.getEquationSection_Initial();

    /**
     * The meta object literal for the '<em><b>Equation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUATION_SECTION__EQUATION = eINSTANCE.getEquationSection_Equation();

    /**
     * The meta object literal for the '<em><b>Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_SECTION__EQUATIONS = eINSTANCE.getEquationSection_Equations();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AlgorithmSectionImpl <em>Algorithm Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AlgorithmSectionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAlgorithmSection()
     * @generated
     */
    EClass ALGORITHM_SECTION = eINSTANCE.getAlgorithmSection();

    /**
     * The meta object literal for the '<em><b>Initial</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALGORITHM_SECTION__INITIAL = eINSTANCE.getAlgorithmSection_Initial();

    /**
     * The meta object literal for the '<em><b>Algorithm</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALGORITHM_SECTION__ALGORITHM = eINSTANCE.getAlgorithmSection_Algorithm();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALGORITHM_SECTION__STATEMENTS = eINSTANCE.getAlgorithmSection_Statements();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationImpl <em>Equation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EquationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquation()
     * @generated
     */
    EClass EQUATION = eINSTANCE.getEquation();

    /**
     * The meta object literal for the '<em><b>Connection</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION__CONNECTION = eINSTANCE.getEquation_Connection();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StatementImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '<em><b>Component</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__COMPONENT = eINSTANCE.getStatement_Component();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__EXPRESSION = eINSTANCE.getStatement_Expression();

    /**
     * The meta object literal for the '<em><b>Fca</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__FCA = eINSTANCE.getStatement_Fca();

    /**
     * The meta object literal for the '<em><b>Comm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__COMM = eINSTANCE.getStatement_Comm();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationIfImpl <em>Equation If</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EquationIfImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationIf()
     * @generated
     */
    EClass EQUATION_IF = eINSTANCE.getEquationIf();

    /**
     * The meta object literal for the '<em><b>Comm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__COMM = eINSTANCE.getEquationIf_Comm();

    /**
     * The meta object literal for the '<em><b>If Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__IF_EXP = eINSTANCE.getEquationIf_IfExp();

    /**
     * The meta object literal for the '<em><b>If Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__IF_EQS = eINSTANCE.getEquationIf_IfEqs();

    /**
     * The meta object literal for the '<em><b>Elseif Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__ELSEIF_EXP = eINSTANCE.getEquationIf_ElseifExp();

    /**
     * The meta object literal for the '<em><b>Else If Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__ELSE_IF_EQS = eINSTANCE.getEquationIf_ElseIfEqs();

    /**
     * The meta object literal for the '<em><b>Else Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_IF__ELSE_EQS = eINSTANCE.getEquationIf_ElseEqs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementIfImpl <em>Statement If</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StatementIfImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementIf()
     * @generated
     */
    EClass STATEMENT_IF = eINSTANCE.getStatementIf();

    /**
     * The meta object literal for the '<em><b>If Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_IF__IF_EXP = eINSTANCE.getStatementIf_IfExp();

    /**
     * The meta object literal for the '<em><b>If Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_IF__IF_EQS = eINSTANCE.getStatementIf_IfEqs();

    /**
     * The meta object literal for the '<em><b>Elseif Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_IF__ELSEIF_EXP = eINSTANCE.getStatementIf_ElseifExp();

    /**
     * The meta object literal for the '<em><b>Else If Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_IF__ELSE_IF_EQS = eINSTANCE.getStatementIf_ElseIfEqs();

    /**
     * The meta object literal for the '<em><b>Else Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_IF__ELSE_EQS = eINSTANCE.getStatementIf_ElseEqs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationForImpl <em>Equation For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EquationForImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationFor()
     * @generated
     */
    EClass EQUATION_FOR = eINSTANCE.getEquationFor();

    /**
     * The meta object literal for the '<em><b>Comm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_FOR__COMM = eINSTANCE.getEquationFor_Comm();

    /**
     * The meta object literal for the '<em><b>Iterators</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_FOR__ITERATORS = eINSTANCE.getEquationFor_Iterators();

    /**
     * The meta object literal for the '<em><b>For Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_FOR__FOR_EQS = eINSTANCE.getEquationFor_ForEqs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementForImpl <em>Statement For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StatementForImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementFor()
     * @generated
     */
    EClass STATEMENT_FOR = eINSTANCE.getStatementFor();

    /**
     * The meta object literal for the '<em><b>Iterators</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_FOR__ITERATORS = eINSTANCE.getStatementFor_Iterators();

    /**
     * The meta object literal for the '<em><b>For Eqs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_FOR__FOR_EQS = eINSTANCE.getStatementFor_ForEqs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ForIndicesImpl <em>For Indices</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ForIndicesImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getForIndices()
     * @generated
     */
    EClass FOR_INDICES = eINSTANCE.getForIndices();

    /**
     * The meta object literal for the '<em><b>For Index</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_INDICES__FOR_INDEX = eINSTANCE.getForIndices_ForIndex();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ForIndexImpl <em>For Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ForIndexImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getForIndex()
     * @generated
     */
    EClass FOR_INDEX = eINSTANCE.getForIndex();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOR_INDEX__ID = eINSTANCE.getForIndex_Id();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_INDEX__EXPRESSION = eINSTANCE.getForIndex_Expression();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementWhileImpl <em>Statement While</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StatementWhileImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementWhile()
     * @generated
     */
    EClass STATEMENT_WHILE = eINSTANCE.getStatementWhile();

    /**
     * The meta object literal for the '<em><b>Bool Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHILE__BOOL_EXPR = eINSTANCE.getStatementWhile_BoolExpr();

    /**
     * The meta object literal for the '<em><b>Stat</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHILE__STAT = eINSTANCE.getStatementWhile_Stat();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EquationWhenImpl <em>Equation When</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EquationWhenImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEquationWhen()
     * @generated
     */
    EClass EQUATION_WHEN = eINSTANCE.getEquationWhen();

    /**
     * The meta object literal for the '<em><b>Comm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_WHEN__COMM = eINSTANCE.getEquationWhen_Comm();

    /**
     * The meta object literal for the '<em><b>When Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_WHEN__WHEN_EXP = eINSTANCE.getEquationWhen_WhenExp();

    /**
     * The meta object literal for the '<em><b>When Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_WHEN__WHEN_EQUATIONS = eINSTANCE.getEquationWhen_WhenEquations();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_WHEN__EXP = eINSTANCE.getEquationWhen_Exp();

    /**
     * The meta object literal for the '<em><b>Equation Item</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION_WHEN__EQUATION_ITEM = eINSTANCE.getEquationWhen_EquationItem();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StatementWhenImpl <em>Statement When</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StatementWhenImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStatementWhen()
     * @generated
     */
    EClass STATEMENT_WHEN = eINSTANCE.getStatementWhen();

    /**
     * The meta object literal for the '<em><b>When Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHEN__WHEN_EXP = eINSTANCE.getStatementWhen_WhenExp();

    /**
     * The meta object literal for the '<em><b>When Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHEN__WHEN_EQUATIONS = eINSTANCE.getStatementWhen_WhenEquations();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHEN__EXP = eINSTANCE.getStatementWhen_Exp();

    /**
     * The meta object literal for the '<em><b>Equation Item</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_WHEN__EQUATION_ITEM = eINSTANCE.getStatementWhen_EquationItem();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl <em>Connect Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ConnectClauseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getConnectClause()
     * @generated
     */
    EClass CONNECT_CLAUSE = eINSTANCE.getConnectClause();

    /**
     * The meta object literal for the '<em><b>Node1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONNECT_CLAUSE__NODE1 = eINSTANCE.getConnectClause_Node1();

    /**
     * The meta object literal for the '<em><b>Node2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONNECT_CLAUSE__NODE2 = eINSTANCE.getConnectClause_Node2();

    /**
     * The meta object literal for the '<em><b>Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONNECT_CLAUSE__ANNOTATION = eINSTANCE.getConnectClause_Annotation();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ExpressionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Equation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EQUATION = eINSTANCE.getExpression_Equation();

    /**
     * The meta object literal for the '<em><b>Comm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__COMM = eINSTANCE.getExpression_Comm();

    /**
     * The meta object literal for the '<em><b>If</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__IF = eINSTANCE.getExpression_If();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__THEN = eINSTANCE.getExpression_Then();

    /**
     * The meta object literal for the '<em><b>Elseif</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__ELSEIF = eINSTANCE.getExpression_Elseif();

    /**
     * The meta object literal for the '<em><b>Elseifthen</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__ELSEIFTHEN = eINSTANCE.getExpression_Elseifthen();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__ELSE = eINSTANCE.getExpression_Else();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__START = eINSTANCE.getExpression_Start();

    /**
     * The meta object literal for the '<em><b>Step</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__STEP = eINSTANCE.getExpression_Step();

    /**
     * The meta object literal for the '<em><b>Stop</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__STOP = eINSTANCE.getExpression_Stop();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXP = eINSTANCE.getExpression_Exp();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LIST = eINSTANCE.getExpression_List();

    /**
     * The meta object literal for the '<em><b>Fa</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__FA = eINSTANCE.getExpression_Fa();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.NameImpl <em>Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.NameImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getName_()
     * @generated
     */
    EClass NAME = eINSTANCE.getName_();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAME__ID = eINSTANCE.getName_Id();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ComponentReferenceImpl <em>Component Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ComponentReferenceImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComponentReference()
     * @generated
     */
    EClass COMPONENT_REFERENCE = eINSTANCE.getComponentReference();

    /**
     * The meta object literal for the '<em><b>Subs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_REFERENCE__SUBS = eINSTANCE.getComponentReference_Subs();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPONENT_REFERENCE__ID = eINSTANCE.getComponentReference_Id();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionCallArgsImpl <em>Function Call Args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.FunctionCallArgsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionCallArgs()
     * @generated
     */
    EClass FUNCTION_CALL_ARGS = eINSTANCE.getFunctionCallArgs();

    /**
     * The meta object literal for the '<em><b>Function Args</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_CALL_ARGS__FUNCTION_ARGS = eINSTANCE.getFunctionCallArgs_FunctionArgs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionArgumentsImpl <em>Function Arguments</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.FunctionArgumentsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionArguments()
     * @generated
     */
    EClass FUNCTION_ARGUMENTS = eINSTANCE.getFunctionArguments();

    /**
     * The meta object literal for the '<em><b>Function Argument</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENTS__FUNCTION_ARGUMENT = eINSTANCE.getFunctionArguments_FunctionArgument();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENTS__ARGS = eINSTANCE.getFunctionArguments_Args();

    /**
     * The meta object literal for the '<em><b>For Indices</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENTS__FOR_INDICES = eINSTANCE.getFunctionArguments_ForIndices();

    /**
     * The meta object literal for the '<em><b>Named Arguments</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENTS__NAMED_ARGUMENTS = eINSTANCE.getFunctionArguments_NamedArguments();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.NamedArgumentsImpl <em>Named Arguments</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.NamedArgumentsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getNamedArguments()
     * @generated
     */
    EClass NAMED_ARGUMENTS = eINSTANCE.getNamedArguments();

    /**
     * The meta object literal for the '<em><b>Named Argument</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAMED_ARGUMENTS__NAMED_ARGUMENT = eINSTANCE.getNamedArguments_NamedArgument();

    /**
     * The meta object literal for the '<em><b>Named Arguments</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAMED_ARGUMENTS__NAMED_ARGUMENTS = eINSTANCE.getNamedArguments_NamedArguments();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.NamedArgumentImpl <em>Named Argument</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.NamedArgumentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getNamedArgument()
     * @generated
     */
    EClass NAMED_ARGUMENT = eINSTANCE.getNamedArgument();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAMED_ARGUMENT__NAME = eINSTANCE.getNamedArgument_Name();

    /**
     * The meta object literal for the '<em><b>Function Argument</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAMED_ARGUMENT__FUNCTION_ARGUMENT = eINSTANCE.getNamedArgument_FunctionArgument();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.FunctionArgumentImpl <em>Function Argument</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.FunctionArgumentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFunctionArgument()
     * @generated
     */
    EClass FUNCTION_ARGUMENT = eINSTANCE.getFunctionArgument();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENT__NAME = eINSTANCE.getFunctionArgument_Name();

    /**
     * The meta object literal for the '<em><b>Named Arguments</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENT__NAMED_ARGUMENTS = eINSTANCE.getFunctionArgument_NamedArguments();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_ARGUMENT__EXPRESSION = eINSTANCE.getFunctionArgument_Expression();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.OutputExpressionListImpl <em>Output Expression List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.OutputExpressionListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOutputExpressionList()
     * @generated
     */
    EClass OUTPUT_EXPRESSION_LIST = eINSTANCE.getOutputExpressionList();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ExprExpressionListImpl <em>Expr Expression List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ExprExpressionListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExprExpressionList()
     * @generated
     */
    EClass EXPR_EXPRESSION_LIST = eINSTANCE.getExprExpressionList();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_EXPRESSION_LIST__EXP = eINSTANCE.getExprExpressionList_Exp();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ArraySubscriptsImpl <em>Array Subscripts</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ArraySubscriptsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArraySubscripts()
     * @generated
     */
    EClass ARRAY_SUBSCRIPTS = eINSTANCE.getArraySubscripts();

    /**
     * The meta object literal for the '<em><b>Subscripts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_SUBSCRIPTS__SUBSCRIPTS = eINSTANCE.getArraySubscripts_Subscripts();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.SubscriptImpl <em>Subscript</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.SubscriptImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSubscript()
     * @generated
     */
    EClass SUBSCRIPT = eINSTANCE.getSubscript();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.CommentImpl <em>Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.CommentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getComment()
     * @generated
     */
    EClass COMMENT = eINSTANCE.getComment();

    /**
     * The meta object literal for the '<em><b>String Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMENT__STRING_COMMENT = eINSTANCE.getComment_StringComment();

    /**
     * The meta object literal for the '<em><b>Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMENT__ANNOTATION = eINSTANCE.getComment_Annotation();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.StringCommentImpl <em>String Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.StringCommentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getStringComment()
     * @generated
     */
    EClass STRING_COMMENT = eINSTANCE.getStringComment();

    /**
     * The meta object literal for the '<em><b>Str</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_COMMENT__STR = eINSTANCE.getStringComment_Str();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AssertImpl <em>Assert</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AssertImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAssert()
     * @generated
     */
    EClass ASSERT = eINSTANCE.getAssert();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSERT__CONDITION = eINSTANCE.getAssert_Condition();

    /**
     * The meta object literal for the '<em><b>Message</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSERT__MESSAGE = eINSTANCE.getAssert_Message();

    /**
     * The meta object literal for the '<em><b>Level</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSERT__LEVEL = eINSTANCE.getAssert_Level();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationImpl <em>Annotation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotation()
     * @generated
     */
    EClass ANNOTATION = eINSTANCE.getAnnotation();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANNOTATION__ARGS = eINSTANCE.getAnnotation_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationArgImpl <em>Annotation Arg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationArgImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationArg()
     * @generated
     */
    EClass ANNOTATION_ARG = eINSTANCE.getAnnotationArg();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.DefComponentNameImpl <em>Def Component Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.DefComponentNameImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDefComponentName()
     * @generated
     */
    EClass DEF_COMPONENT_NAME = eINSTANCE.getDefComponentName();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEF_COMPONENT_NAME__VALUE = eINSTANCE.getDefComponentName_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ChoicesImpl <em>Choices</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ChoicesImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getChoices()
     * @generated
     */
    EClass CHOICES = eINSTANCE.getChoices();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHOICES__TYPES = eINSTANCE.getChoices_Types();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHOICES__VALUES = eINSTANCE.getChoices_Values();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationCodeImpl <em>Annotation Code</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationCodeImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationCode()
     * @generated
     */
    EClass ANNOTATION_CODE = eINSTANCE.getAnnotationCode();

    /**
     * The meta object literal for the '<em><b>Flag</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANNOTATION_CODE__FLAG = eINSTANCE.getAnnotationCode_Flag();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANNOTATION_CODE__VALUE = eINSTANCE.getAnnotationCode_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationLayerImpl <em>Annotation Layer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationLayerImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationLayer()
     * @generated
     */
    EClass ANNOTATION_LAYER = eINSTANCE.getAnnotationLayer();

    /**
     * The meta object literal for the '<em><b>Coordinate System</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANNOTATION_LAYER__COORDINATE_SYSTEM = eINSTANCE.getAnnotationLayer_CoordinateSystem();

    /**
     * The meta object literal for the '<em><b>Graphics</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANNOTATION_LAYER__GRAPHICS = eINSTANCE.getAnnotationLayer_Graphics();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LayerIconImpl <em>Layer Icon</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LayerIconImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLayerIcon()
     * @generated
     */
    EClass LAYER_ICON = eINSTANCE.getLayerIcon();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LayerDiagramImpl <em>Layer Diagram</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LayerDiagramImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLayerDiagram()
     * @generated
     */
    EClass LAYER_DIAGRAM = eINSTANCE.getLayerDiagram();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationImpl <em>Coordinate Specification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getCoordinateSpecification()
     * @generated
     */
    EClass COORDINATE_SPECIFICATION = eINSTANCE.getCoordinateSpecification();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COORDINATE_SPECIFICATION__ARGS = eINSTANCE.getCoordinateSpecification_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationArgsImpl <em>Coordinate Specification Args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.CoordinateSpecificationArgsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getCoordinateSpecificationArgs()
     * @generated
     */
    EClass COORDINATE_SPECIFICATION_ARGS = eINSTANCE.getCoordinateSpecificationArgs();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ExtentImpl <em>Extent</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ExtentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExtent()
     * @generated
     */
    EClass EXTENT = eINSTANCE.getExtent();

    /**
     * The meta object literal for the '<em><b>P1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENT__P1 = eINSTANCE.getExtent_P1();

    /**
     * The meta object literal for the '<em><b>P2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENT__P2 = eINSTANCE.getExtent_P2();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PreserveARImpl <em>Preserve AR</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PreserveARImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPreserveAR()
     * @generated
     */
    EClass PRESERVE_AR = eINSTANCE.getPreserveAR();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRESERVE_AR__VALUE = eINSTANCE.getPreserveAR_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.InitialScaleImpl <em>Initial Scale</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.InitialScaleImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getInitialScale()
     * @generated
     */
    EClass INITIAL_SCALE = eINSTANCE.getInitialScale();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INITIAL_SCALE__VALUE = eINSTANCE.getInitialScale_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.GridImpl <em>Grid</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.GridImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGrid()
     * @generated
     */
    EClass GRID = eINSTANCE.getGrid();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRID__VALUE = eINSTANCE.getGrid_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PlacementImpl <em>Placement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PlacementImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPlacement()
     * @generated
     */
    EClass PLACEMENT = eINSTANCE.getPlacement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLACEMENT__NAME = eINSTANCE.getPlacement_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLACEMENT__ARGS = eINSTANCE.getPlacement_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PlacementArgImpl <em>Placement Arg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PlacementArgImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPlacementArg()
     * @generated
     */
    EClass PLACEMENT_ARG = eINSTANCE.getPlacementArg();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.VisibleImpl <em>Visible</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.VisibleImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getVisible()
     * @generated
     */
    EClass VISIBLE = eINSTANCE.getVisible();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VISIBLE__VALUE = eINSTANCE.getVisible_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TransformationImpl <em>Transformation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TransformationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTransformation()
     * @generated
     */
    EClass TRANSFORMATION = eINSTANCE.getTransformation();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRANSFORMATION__NAME = eINSTANCE.getTransformation_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSFORMATION__ARGS = eINSTANCE.getTransformation_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TransformationArgImpl <em>Transformation Arg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TransformationArgImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTransformationArg()
     * @generated
     */
    EClass TRANSFORMATION_ARG = eINSTANCE.getTransformationArg();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.RotationImpl <em>Rotation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.RotationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRotation()
     * @generated
     */
    EClass ROTATION = eINSTANCE.getRotation();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROTATION__NAME = eINSTANCE.getRotation_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATION__VALUE = eINSTANCE.getRotation_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.OriginImpl <em>Origin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.OriginImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOrigin()
     * @generated
     */
    EClass ORIGIN = eINSTANCE.getOrigin();

    /**
     * The meta object literal for the '<em><b>Point</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORIGIN__POINT = eINSTANCE.getOrigin_Point();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PointImpl <em>Point</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PointImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPoint()
     * @generated
     */
    EClass POINT = eINSTANCE.getPoint();

    /**
     * The meta object literal for the '<em><b>X</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINT__X = eINSTANCE.getPoint_X();

    /**
     * The meta object literal for the '<em><b>Y</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINT__Y = eINSTANCE.getPoint_Y();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.RadiusImpl <em>Radius</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.RadiusImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRadius()
     * @generated
     */
    EClass RADIUS = eINSTANCE.getRadius();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.SmoothImpl <em>Smooth</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.SmoothImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSmooth()
     * @generated
     */
    EClass SMOOTH = eINSTANCE.getSmooth();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SMOOTH__VALUE = eINSTANCE.getSmooth_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ColorImpl <em>Color</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ColorImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getColor()
     * @generated
     */
    EClass COLOR = eINSTANCE.getColor();

    /**
     * The meta object literal for the '<em><b>R</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__R = eINSTANCE.getColor_R();

    /**
     * The meta object literal for the '<em><b>G</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__G = eINSTANCE.getColor_G();

    /**
     * The meta object literal for the '<em><b>B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__B = eINSTANCE.getColor_B();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ThicknessImpl <em>Thickness</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ThicknessImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getThickness()
     * @generated
     */
    EClass THICKNESS = eINSTANCE.getThickness();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THICKNESS__VALUE = eINSTANCE.getThickness_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicsImpl <em>Graphics</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.GraphicsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphics()
     * @generated
     */
    EClass GRAPHICS = eINSTANCE.getGraphics();

    /**
     * The meta object literal for the '<em><b>Primitive</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAPHICS__PRIMITIVE = eINSTANCE.getGraphics_Primitive();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveImpl <em>Graphical Primitive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphicalPrimitive()
     * @generated
     */
    EClass GRAPHICAL_PRIMITIVE = eINSTANCE.getGraphicalPrimitive();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAPHICAL_PRIMITIVE__NAME = eINSTANCE.getGraphicalPrimitive_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAPHICAL_PRIMITIVE__ARGS = eINSTANCE.getGraphicalPrimitive_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LineImpl <em>Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LineImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLine()
     * @generated
     */
    EClass LINE = eINSTANCE.getLine();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PolygonImpl <em>Polygon</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PolygonImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPolygon()
     * @generated
     */
    EClass POLYGON = eINSTANCE.getPolygon();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.RectangleImpl <em>Rectangle</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.RectangleImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRectangle()
     * @generated
     */
    EClass RECTANGLE = eINSTANCE.getRectangle();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EllipseImpl <em>Ellipse</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EllipseImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEllipse()
     * @generated
     */
    EClass ELLIPSE = eINSTANCE.getEllipse();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TextImpl <em>Text</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TextImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getText()
     * @generated
     */
    EClass TEXT = eINSTANCE.getText();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.BitmapImpl <em>Bitmap</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.BitmapImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBitmap()
     * @generated
     */
    EClass BITMAP = eINSTANCE.getBitmap();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveArgsImpl <em>Graphical Primitive Args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.GraphicalPrimitiveArgsImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGraphicalPrimitiveArgs()
     * @generated
     */
    EClass GRAPHICAL_PRIMITIVE_ARGS = eINSTANCE.getGraphicalPrimitiveArgs();

    /**
     * The meta object literal for the '<em><b>Points</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAPHICAL_PRIMITIVE_ARGS__POINTS = eINSTANCE.getGraphicalPrimitiveArgs_Points();

    /**
     * The meta object literal for the '<em><b>Str</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAPHICAL_PRIMITIVE_ARGS__STR = eINSTANCE.getGraphicalPrimitiveArgs_Str();

    /**
     * The meta object literal for the '<em><b>File Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAPHICAL_PRIMITIVE_ARGS__FILE_NAME = eINSTANCE.getGraphicalPrimitiveArgs_FileName();

    /**
     * The meta object literal for the '<em><b>Image Source</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAPHICAL_PRIMITIVE_ARGS__IMAGE_SOURCE = eINSTANCE.getGraphicalPrimitiveArgs_ImageSource();

    /**
     * The meta object literal for the '<em><b>Fill Pattern</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAPHICAL_PRIMITIVE_ARGS__FILL_PATTERN = eINSTANCE.getGraphicalPrimitiveArgs_FillPattern();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.DialogImpl <em>Dialog</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.DialogImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDialog()
     * @generated
     */
    EClass DIALOG = eINSTANCE.getDialog();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIALOG__NAME = eINSTANCE.getDialog_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIALOG__ARGS = eINSTANCE.getDialog_Args();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.DialogArgImpl <em>Dialog Arg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.DialogArgImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getDialogArg()
     * @generated
     */
    EClass DIALOG_ARG = eINSTANCE.getDialogArg();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.EnableImpl <em>Enable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.EnableImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getEnable()
     * @generated
     */
    EClass ENABLE = eINSTANCE.getEnable();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENABLE__VALUE = eINSTANCE.getEnable_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.GroupImpl <em>Group</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.GroupImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getGroup()
     * @generated
     */
    EClass GROUP = eINSTANCE.getGroup();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GROUP__VALUE = eINSTANCE.getGroup_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TabImpl <em>Tab</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TabImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTab()
     * @generated
     */
    EClass TAB = eINSTANCE.getTab();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TAB__VALUE = eINSTANCE.getTab_Value();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationDocumentationImpl <em>Annotation Documentation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationDocumentationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationDocumentation()
     * @generated
     */
    EClass ANNOTATION_DOCUMENTATION = eINSTANCE.getAnnotationDocumentation();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANNOTATION_DOCUMENTATION__VALUE = eINSTANCE.getAnnotationDocumentation_Value();

    /**
     * The meta object literal for the '<em><b>Rev</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANNOTATION_DOCUMENTATION__REV = eINSTANCE.getAnnotationDocumentation_Rev();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.AnnotationExperimentImpl <em>Annotation Experiment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.AnnotationExperimentImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAnnotationExperiment()
     * @generated
     */
    EClass ANNOTATION_EXPERIMENT = eINSTANCE.getAnnotationExperiment();

    /**
     * The meta object literal for the '<em><b>Options</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANNOTATION_EXPERIMENT__OPTIONS = eINSTANCE.getAnnotationExperiment_Options();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl <em>Experiment Option</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ExperimentOptionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getExperimentOption()
     * @generated
     */
    EClass EXPERIMENT_OPTION = eINSTANCE.getExperimentOption();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPERIMENT_OPTION__START = eINSTANCE.getExperimentOption_Start();

    /**
     * The meta object literal for the '<em><b>Stop</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPERIMENT_OPTION__STOP = eINSTANCE.getExperimentOption_Stop();

    /**
     * The meta object literal for the '<em><b>Step</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPERIMENT_OPTION__STEP = eINSTANCE.getExperimentOption_Step();

    /**
     * The meta object literal for the '<em><b>Tol</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPERIMENT_OPTION__TOL = eINSTANCE.getExperimentOption_Tol();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LogicalExpressionImpl <em>Logical Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LogicalExpressionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLogicalExpression()
     * @generated
     */
    EClass LOGICAL_EXPRESSION = eINSTANCE.getLogicalExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_EXPRESSION__LEFT = eINSTANCE.getLogicalExpression_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_EXPRESSION__RIGHT = eINSTANCE.getLogicalExpression_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.LogicalTermImpl <em>Logical Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.LogicalTermImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLogicalTerm()
     * @generated
     */
    EClass LOGICAL_TERM = eINSTANCE.getLogicalTerm();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_TERM__LEFT = eINSTANCE.getLogicalTerm_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_TERM__RIGHT = eINSTANCE.getLogicalTerm_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.RelationImpl <em>Relation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.RelationImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getRelation()
     * @generated
     */
    EClass RELATION = eINSTANCE.getRelation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATION__LEFT = eINSTANCE.getRelation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATION__RIGHT = eINSTANCE.getRelation_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ArithmeticExpressionImpl <em>Arithmetic Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ArithmeticExpressionImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArithmeticExpression()
     * @generated
     */
    EClass ARITHMETIC_EXPRESSION = eINSTANCE.getArithmeticExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_EXPRESSION__LEFT = eINSTANCE.getArithmeticExpression_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_EXPRESSION__RIGHT = eINSTANCE.getArithmeticExpression_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.ArithmeticExpression2Impl <em>Arithmetic Expression2</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.ArithmeticExpression2Impl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getArithmeticExpression2()
     * @generated
     */
    EClass ARITHMETIC_EXPRESSION2 = eINSTANCE.getArithmeticExpression2();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_EXPRESSION2__LEFT = eINSTANCE.getArithmeticExpression2_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_EXPRESSION2__RIGHT = eINSTANCE.getArithmeticExpression2_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.TermImpl <em>Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.TermImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getTerm()
     * @generated
     */
    EClass TERM = eINSTANCE.getTerm();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__LEFT = eINSTANCE.getTerm_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__RIGHT = eINSTANCE.getTerm_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.FactorImpl <em>Factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.FactorImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFactor()
     * @generated
     */
    EClass FACTOR = eINSTANCE.getFactor();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__LEFT = eINSTANCE.getFactor_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__RIGHT = eINSTANCE.getFactor_Right();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.PrimaryImpl <em>Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.PrimaryImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getPrimary()
     * @generated
     */
    EClass PRIMARY = eINSTANCE.getPrimary();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY__NAME = eINSTANCE.getPrimary_Name();

    /**
     * The meta object literal for the '<em><b>Fca</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY__FCA = eINSTANCE.getPrimary_Fca();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.impl.OutputExpresionListImpl <em>Output Expresion List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.impl.OutputExpresionListImpl
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getOutputExpresionList()
     * @generated
     */
    EClass OUTPUT_EXPRESION_LIST = eINSTANCE.getOutputExpresionList();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTPUT_EXPRESION_LIST__EXPRESSIONS = eINSTANCE.getOutputExpresionList_Expressions();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.AssertionLevel <em>Assertion Level</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.AssertionLevel
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getAssertionLevel()
     * @generated
     */
    EEnum ASSERTION_LEVEL = eINSTANCE.getAssertionLevel();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.LinePattern <em>Line Pattern</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.LinePattern
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getLinePattern()
     * @generated
     */
    EEnum LINE_PATTERN = eINSTANCE.getLinePattern();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.FillPattern <em>Fill Pattern</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.FillPattern
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getFillPattern()
     * @generated
     */
    EEnum FILL_PATTERN = eINSTANCE.getFillPattern();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.BorderPattern <em>Border Pattern</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.BorderPattern
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getBorderPattern()
     * @generated
     */
    EEnum BORDER_PATTERN = eINSTANCE.getBorderPattern();

    /**
     * The meta object literal for the '{@link sc.modelica.xtext.modelicaMo.SmoothEnum <em>Smooth Enum</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see sc.modelica.xtext.modelicaMo.SmoothEnum
     * @see sc.modelica.xtext.modelicaMo.impl.ModelicaMoPackageImpl#getSmoothEnum()
     * @generated
     */
    EEnum SMOOTH_ENUM = eINSTANCE.getSmoothEnum();

  }

} //ModelicaMoPackage
