/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package sc.modelica.xtext.modelicaMo;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Type Prefix</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isFlow <em>Flow</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isStream <em>Stream</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isConstant <em>Constant</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isParameter <em>Parameter</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isDiscrete <em>Discrete</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isInput <em>Input</em>}</li>
 *   <li>{@link sc.modelica.xtext.modelicaMo.TypePrefix#isOutput <em>Output</em>}</li>
 * </ul>
 *
 * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix()
 * @model
 * @generated
 */
public interface TypePrefix extends BasePrefix
{
  /**
   * Returns the value of the '<em><b>Flow</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Flow</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Flow</em>' attribute.
   * @see #setFlow(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Flow()
   * @model
   * @generated
   */
  boolean isFlow();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isFlow <em>Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Flow</em>' attribute.
   * @see #isFlow()
   * @generated
   */
  void setFlow(boolean value);

  /**
   * Returns the value of the '<em><b>Stream</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Stream</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stream</em>' attribute.
   * @see #setStream(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Stream()
   * @model
   * @generated
   */
  boolean isStream();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isStream <em>Stream</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Stream</em>' attribute.
   * @see #isStream()
   * @generated
   */
  void setStream(boolean value);

  /**
   * Returns the value of the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constant</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constant</em>' attribute.
   * @see #setConstant(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Constant()
   * @model
   * @generated
   */
  boolean isConstant();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isConstant <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Constant</em>' attribute.
   * @see #isConstant()
   * @generated
   */
  void setConstant(boolean value);

  /**
   * Returns the value of the '<em><b>Parameter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Parameter</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Parameter</em>' attribute.
   * @see #setParameter(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Parameter()
   * @model
   * @generated
   */
  boolean isParameter();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isParameter <em>Parameter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Parameter</em>' attribute.
   * @see #isParameter()
   * @generated
   */
  void setParameter(boolean value);

  /**
   * Returns the value of the '<em><b>Discrete</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Discrete</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Discrete</em>' attribute.
   * @see #setDiscrete(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Discrete()
   * @model
   * @generated
   */
  boolean isDiscrete();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isDiscrete <em>Discrete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Discrete</em>' attribute.
   * @see #isDiscrete()
   * @generated
   */
  void setDiscrete(boolean value);

  /**
   * Returns the value of the '<em><b>Input</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Input</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Input</em>' attribute.
   * @see #setInput(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Input()
   * @model
   * @generated
   */
  boolean isInput();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isInput <em>Input</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Input</em>' attribute.
   * @see #isInput()
   * @generated
   */
  void setInput(boolean value);

  /**
   * Returns the value of the '<em><b>Output</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Output</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Output</em>' attribute.
   * @see #setOutput(boolean)
   * @see sc.modelica.xtext.modelicaMo.ModelicaMoPackage#getTypePrefix_Output()
   * @model
   * @generated
   */
  boolean isOutput();

  /**
   * Sets the value of the '{@link sc.modelica.xtext.modelicaMo.TypePrefix#isOutput <em>Output</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Output</em>' attribute.
   * @see #isOutput()
   * @generated
   */
  void setOutput(boolean value);

} // TypePrefix
